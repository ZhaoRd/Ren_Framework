<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="Zhaord.Infrastructure">
      <assemblydata version="1.0.5653.33943" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.*</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:Zhaord">
      <topicdata group="api" />
      <apidata name="Zhaord" group="namespace" />
      <elements>
        <element api="T:Zhaord.ICloneable`1" />
        <element api="T:Zhaord.ComparableObject" />
        <element api="T:Zhaord.ComparableObject`1" />
        <element api="T:Zhaord.DisposableObject" />
        <element api="T:Zhaord.Error" />
        <element api="T:Zhaord.Guard" />
        <element api="T:Zhaord.IApplicationServiceContract" />
        <element api="T:Zhaord.IMergedData" />
        <element api="T:Zhaord.IOrdered" />
        <element api="T:Zhaord.IStartupTask" />
        <element api="T:Zhaord.IWorkContext" />
        <element api="T:Zhaord.OperationResult" />
        <element api="T:Zhaord.OperationResultType" />
        <element api="T:Zhaord.ZhaordException" />
        <element api="T:Zhaord.ZhaordValidationException" />
      </elements>
    </api>
    <api id="T:Zhaord.ComparableObject">
      <topicdata group="api" />
      <apidata name="ComparableObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Zhaord.ComparableObject`1" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.ComparableObject.#ctor" />
        <element api="M:Zhaord.ComparableObject.Equals(System.Object)" />
        <element api="M:Zhaord.ComparableObject.GetHashCode" />
        <element api="M:Zhaord.ComparableObject.GetSignatureProperties" />
        <element api="M:Zhaord.ComparableObject.GetSignaturePropertiesCore" />
        <element api="M:Zhaord.ComparableObject.GetTypeUnproxied" />
        <element api="F:Zhaord.ComparableObject.HashMultiplier" />
        <element api="M:Zhaord.ComparableObject.HasSameSignatureAs(Zhaord.ComparableObject)" />
        <element api="Overload:Zhaord.ComparableObject.RegisterSignatureProperty">
          <element api="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.Reflection.PropertyInfo)" />
          <element api="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.ComparableObject">
      <topicdata name="ComparableObject" group="list" subgroup="Methods" typeTopicId="T:Zhaord.ComparableObject" />
      <apidata name="ComparableObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.ComparableObject.Equals(System.Object)" />
        <element api="M:Zhaord.ComparableObject.GetHashCode" />
        <element api="M:Zhaord.ComparableObject.GetSignatureProperties" />
        <element api="M:Zhaord.ComparableObject.GetSignaturePropertiesCore" />
        <element api="M:Zhaord.ComparableObject.GetTypeUnproxied" />
        <element api="M:Zhaord.ComparableObject.HasSameSignatureAs(Zhaord.ComparableObject)" />
        <element api="Overload:Zhaord.ComparableObject.RegisterSignatureProperty">
          <element api="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.Reflection.PropertyInfo)" />
          <element api="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject" />
      </containers>
    </api>
    <api id="Fields.T:Zhaord.ComparableObject">
      <topicdata name="ComparableObject" group="list" subgroup="Fields" typeTopicId="T:Zhaord.ComparableObject" />
      <apidata name="ComparableObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="F:Zhaord.ComparableObject.HashMultiplier" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject" />
      </containers>
    </api>
    <api id="Overload:Zhaord.ComparableObject.RegisterSignatureProperty">
      <topicdata name="RegisterSignatureProperty" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="RegisterSignatureProperty" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.Reflection.PropertyInfo)" />
        <element api="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.ComparableObject.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.ComparableObject.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.ComparableObject.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.ComparableObject.GetSignatureProperties">
      <topicdata group="api" />
      <apidata name="GetSignatureProperties" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Reflection.PropertyInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.ComparableObject.GetSignaturePropertiesCore">
      <topicdata group="api" />
      <apidata name="GetSignaturePropertiesCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Reflection.PropertyInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.ComparableObject.GetTypeUnproxied">
      <topicdata group="api" />
      <apidata name="GetTypeUnproxied" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject" ref="true" />
      </containers>
    </api>
    <api id="F:Zhaord.ComparableObject.HashMultiplier">
      <topicdata group="api" />
      <apidata name="HashMultiplier" group="member" subgroup="field" />
      <memberdata visibility="family" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>31</value>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.ComparableObject.HasSameSignatureAs(Zhaord.ComparableObject)">
      <topicdata group="api" />
      <apidata name="HasSameSignatureAs" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="compareTo">
          <type api="T:Zhaord.ComparableObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.Reflection.PropertyInfo)">
      <topicdata group="api" />
      <apidata name="RegisterSignatureProperty" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Zhaord.ComparableObject.RegisterSignatureProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyInfo">
          <type api="T:System.Reflection.PropertyInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.String)">
      <topicdata group="api" />
      <apidata name="RegisterSignatureProperty" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Zhaord.ComparableObject.RegisterSignatureProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.ComparableObject`1">
      <topicdata group="api" />
      <apidata name="ComparableObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Zhaord.ComparableObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Zhaord.Data.Notifies.NotifyEntry" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.ComparableObject`1" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="Overload:Zhaord.ComparableObject`1.Equals">
          <element api="M:Zhaord.ComparableObject.Equals(System.Object)" />
          <element api="M:Zhaord.ComparableObject`1.Equals(`0)" />
        </element>
        <element api="M:Zhaord.ComparableObject.GetHashCode" />
        <element api="M:Zhaord.ComparableObject.GetSignatureProperties" />
        <element api="M:Zhaord.ComparableObject.GetSignaturePropertiesCore" />
        <element api="M:Zhaord.ComparableObject.GetTypeUnproxied" />
        <element api="M:Zhaord.ComparableObject.HasSameSignatureAs(Zhaord.ComparableObject)" />
        <element api="Overload:Zhaord.ComparableObject`1.RegisterSignatureProperty">
          <element api="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.Reflection.PropertyInfo)" />
          <element api="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.String)" />
          <element api="M:Zhaord.ComparableObject`1.RegisterSignatureProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.ComparableObject`1.#ctor" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.ComparableObject`1">
      <topicdata name="ComparableObject" group="list" subgroup="Methods" typeTopicId="T:Zhaord.ComparableObject`1" />
      <apidata name="ComparableObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="Overload:Zhaord.ComparableObject`1.Equals">
          <element api="M:Zhaord.ComparableObject.Equals(System.Object)" />
          <element api="M:Zhaord.ComparableObject`1.Equals(`0)" />
        </element>
        <element api="M:Zhaord.ComparableObject.GetHashCode" />
        <element api="M:Zhaord.ComparableObject.GetSignatureProperties" />
        <element api="M:Zhaord.ComparableObject.GetSignaturePropertiesCore" />
        <element api="M:Zhaord.ComparableObject.GetTypeUnproxied" />
        <element api="M:Zhaord.ComparableObject.HasSameSignatureAs(Zhaord.ComparableObject)" />
        <element api="Overload:Zhaord.ComparableObject`1.RegisterSignatureProperty">
          <element api="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.Reflection.PropertyInfo)" />
          <element api="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.String)" />
          <element api="M:Zhaord.ComparableObject`1.RegisterSignatureProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject`1" />
      </containers>
    </api>
    <api id="Overload:Zhaord.ComparableObject`1.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.ComparableObject.Equals(System.Object)" />
        <element api="M:Zhaord.ComparableObject`1.Equals(`0)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.ComparableObject`1.RegisterSignatureProperty">
      <topicdata name="RegisterSignatureProperty" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="RegisterSignatureProperty" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.Reflection.PropertyInfo)" />
        <element api="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.String)" />
        <element api="M:Zhaord.ComparableObject`1.RegisterSignatureProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject`1" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.ComparableObject`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject`1" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.ComparableObject`1.Equals(`0)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.ComparableObject`1.Equals" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="other">
          <template name="T" index="0" api="T:Zhaord.ComparableObject`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Zhaord.ComparableObject`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject`1" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.ComparableObject`1.RegisterSignatureProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
      <topicdata group="api" />
      <apidata name="RegisterSignatureProperty" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Zhaord.ComparableObject`1.RegisterSignatureProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Zhaord.ComparableObject`1" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject`1" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.DisposableObject">
      <topicdata group="api" />
      <apidata name="DisposableObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.DisposableObject.#ctor" />
        <element api="Overload:Zhaord.DisposableObject.CheckDisposed">
          <element api="M:Zhaord.DisposableObject.CheckDisposed" />
          <element api="M:Zhaord.DisposableObject.CheckDisposed(System.String)" />
        </element>
        <element api="Overload:Zhaord.DisposableObject.Dispose">
          <element api="M:Zhaord.DisposableObject.Dispose" />
          <element api="M:Zhaord.DisposableObject.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:Zhaord.DisposableObject.DisposeDictionary">
          <element api="M:Zhaord.DisposableObject.DisposeDictionary``2(System.Collections.Generic.IDictionary{``0,``1})" />
          <element api="M:Zhaord.DisposableObject.DisposeDictionary(System.Collections.IDictionary)" />
        </element>
        <element api="M:Zhaord.DisposableObject.DisposeEnumerable(System.Collections.IEnumerable)" />
        <element api="M:Zhaord.DisposableObject.DisposeMember(System.Object)" />
        <element api="M:Zhaord.DisposableObject.Finalize" />
        <element api="P:Zhaord.DisposableObject.IsDisposed" />
        <element api="M:Zhaord.DisposableObject.OnDispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.DisposableObject">
      <topicdata name="DisposableObject" group="list" subgroup="Methods" typeTopicId="T:Zhaord.DisposableObject" />
      <apidata name="DisposableObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.DisposableObject.CheckDisposed">
          <element api="M:Zhaord.DisposableObject.CheckDisposed" />
          <element api="M:Zhaord.DisposableObject.CheckDisposed(System.String)" />
        </element>
        <element api="Overload:Zhaord.DisposableObject.Dispose">
          <element api="M:Zhaord.DisposableObject.Dispose" />
          <element api="M:Zhaord.DisposableObject.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:Zhaord.DisposableObject.DisposeDictionary">
          <element api="M:Zhaord.DisposableObject.DisposeDictionary``2(System.Collections.Generic.IDictionary{``0,``1})" />
          <element api="M:Zhaord.DisposableObject.DisposeDictionary(System.Collections.IDictionary)" />
        </element>
        <element api="M:Zhaord.DisposableObject.DisposeEnumerable(System.Collections.IEnumerable)" />
        <element api="M:Zhaord.DisposableObject.DisposeMember(System.Object)" />
        <element api="M:Zhaord.DisposableObject.Finalize" />
        <element api="M:Zhaord.DisposableObject.OnDispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.DisposableObject">
      <topicdata name="DisposableObject" group="list" subgroup="Properties" typeTopicId="T:Zhaord.DisposableObject" />
      <apidata name="DisposableObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.DisposableObject.IsDisposed" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" />
      </containers>
    </api>
    <api id="Overload:Zhaord.DisposableObject.CheckDisposed">
      <topicdata name="CheckDisposed" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="CheckDisposed" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.DisposableObject.CheckDisposed" />
        <element api="M:Zhaord.DisposableObject.CheckDisposed(System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.DisposableObject.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.DisposableObject.Dispose" />
        <element api="M:Zhaord.DisposableObject.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.DisposableObject.DisposeDictionary">
      <topicdata name="DisposeDictionary" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="DisposeDictionary" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.DisposableObject.DisposeDictionary``2(System.Collections.Generic.IDictionary{``0,``1})" />
        <element api="M:Zhaord.DisposableObject.DisposeDictionary(System.Collections.IDictionary)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.DisposableObject.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.DisposableObject.CheckDisposed">
      <topicdata group="api" />
      <apidata name="CheckDisposed" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Zhaord.DisposableObject.CheckDisposed" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.DisposableObject.CheckDisposed(System.String)">
      <topicdata group="api" />
      <apidata name="CheckDisposed" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Zhaord.DisposableObject.CheckDisposed" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="errorMessage">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.DisposableObject.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.DisposableObject.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.DisposableObject.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Zhaord.DisposableObject.Dispose" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.DisposableObject.DisposeDictionary``2(System.Collections.Generic.IDictionary{``0,``1})">
      <topicdata group="api" />
      <apidata name="DisposeDictionary" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:Zhaord.DisposableObject.DisposeDictionary" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TK" />
        <template name="TV" />
      </templates>
      <parameters>
        <parameter name="dictionary">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <template name="TK" index="0" api="M:Zhaord.DisposableObject.DisposeDictionary``2(System.Collections.Generic.IDictionary{``0,``1})" />
              <template name="TV" index="1" api="M:Zhaord.DisposableObject.DisposeDictionary``2(System.Collections.Generic.IDictionary{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.DisposableObject.DisposeDictionary(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="DisposeDictionary" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:Zhaord.DisposableObject.DisposeDictionary" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dictionary">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.DisposableObject.DisposeEnumerable(System.Collections.IEnumerable)">
      <topicdata group="api" />
      <apidata name="DisposeEnumerable" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="enumerable">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.DisposableObject.DisposeMember(System.Object)">
      <topicdata group="api" />
      <apidata name="DisposeMember" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="member">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.DisposableObject.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.DisposableObject.IsDisposed">
      <topicdata group="api" />
      <apidata name="IsDisposed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsDisposed" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.DisposableObject.OnDispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="OnDispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.Error">
      <topicdata group="api" />
      <apidata name="Error" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Zhaord.Error.Application">
          <element api="M:Zhaord.Error.Application(System.String,System.Object[])" />
          <element api="M:Zhaord.Error.Application(System.Exception,System.String,System.Object[])" />
        </element>
        <element api="Overload:Zhaord.Error.Argument">
          <element api="M:Zhaord.Error.Argument``1(System.Func{``0},System.String,System.Object[])" />
          <element api="M:Zhaord.Error.Argument(System.String,System.String,System.Object[])" />
        </element>
        <element api="Overload:Zhaord.Error.ArgumentNull">
          <element api="M:Zhaord.Error.ArgumentNull``1(System.Func{``0})" />
          <element api="M:Zhaord.Error.ArgumentNull(System.String)" />
        </element>
        <element api="M:Zhaord.Error.ArgumentNullOrEmpty(System.Func{System.String})" />
        <element api="Overload:Zhaord.Error.ArgumentOutOfRange">
          <element api="M:Zhaord.Error.ArgumentOutOfRange``1(System.Func{``0})" />
          <element api="M:Zhaord.Error.ArgumentOutOfRange(System.String)" />
          <element api="M:Zhaord.Error.ArgumentOutOfRange(System.String,System.String,System.Object[])" />
        </element>
        <element api="Overload:Zhaord.Error.InvalidCast">
          <element api="M:Zhaord.Error.InvalidCast(System.Type,System.Type)" />
          <element api="M:Zhaord.Error.InvalidCast(System.Type,System.Type,System.Exception)" />
        </element>
        <element api="Overload:Zhaord.Error.InvalidOperation">
          <element api="M:Zhaord.Error.InvalidOperation``1(System.String,System.Func{``0})" />
          <element api="M:Zhaord.Error.InvalidOperation(System.String,System.Object[])" />
          <element api="M:Zhaord.Error.InvalidOperation``1(System.String,System.Exception,System.Func{``0})" />
          <element api="M:Zhaord.Error.InvalidOperation(System.String,System.Exception,System.Object[])" />
        </element>
        <element api="M:Zhaord.Error.MoreThanOneElement" />
        <element api="M:Zhaord.Error.NoElements" />
        <element api="M:Zhaord.Error.NotImplemented" />
        <element api="M:Zhaord.Error.NotSupported" />
        <element api="Overload:Zhaord.Error.ObjectDisposed">
          <element api="M:Zhaord.Error.ObjectDisposed(System.String)" />
          <element api="M:Zhaord.Error.ObjectDisposed(System.String,System.String,System.Object[])" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Error">
      <topicdata name="Error" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Error" />
      <apidata name="Error" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:Zhaord.Error.Application">
          <element api="M:Zhaord.Error.Application(System.String,System.Object[])" />
          <element api="M:Zhaord.Error.Application(System.Exception,System.String,System.Object[])" />
        </element>
        <element api="Overload:Zhaord.Error.Argument">
          <element api="M:Zhaord.Error.Argument``1(System.Func{``0},System.String,System.Object[])" />
          <element api="M:Zhaord.Error.Argument(System.String,System.String,System.Object[])" />
        </element>
        <element api="Overload:Zhaord.Error.ArgumentNull">
          <element api="M:Zhaord.Error.ArgumentNull``1(System.Func{``0})" />
          <element api="M:Zhaord.Error.ArgumentNull(System.String)" />
        </element>
        <element api="M:Zhaord.Error.ArgumentNullOrEmpty(System.Func{System.String})" />
        <element api="Overload:Zhaord.Error.ArgumentOutOfRange">
          <element api="M:Zhaord.Error.ArgumentOutOfRange``1(System.Func{``0})" />
          <element api="M:Zhaord.Error.ArgumentOutOfRange(System.String)" />
          <element api="M:Zhaord.Error.ArgumentOutOfRange(System.String,System.String,System.Object[])" />
        </element>
        <element api="Overload:Zhaord.Error.InvalidCast">
          <element api="M:Zhaord.Error.InvalidCast(System.Type,System.Type)" />
          <element api="M:Zhaord.Error.InvalidCast(System.Type,System.Type,System.Exception)" />
        </element>
        <element api="Overload:Zhaord.Error.InvalidOperation">
          <element api="M:Zhaord.Error.InvalidOperation``1(System.String,System.Func{``0})" />
          <element api="M:Zhaord.Error.InvalidOperation(System.String,System.Object[])" />
          <element api="M:Zhaord.Error.InvalidOperation``1(System.String,System.Exception,System.Func{``0})" />
          <element api="M:Zhaord.Error.InvalidOperation(System.String,System.Exception,System.Object[])" />
        </element>
        <element api="M:Zhaord.Error.MoreThanOneElement" />
        <element api="M:Zhaord.Error.NoElements" />
        <element api="M:Zhaord.Error.NotImplemented" />
        <element api="M:Zhaord.Error.NotSupported" />
        <element api="Overload:Zhaord.Error.ObjectDisposed">
          <element api="M:Zhaord.Error.ObjectDisposed(System.String)" />
          <element api="M:Zhaord.Error.ObjectDisposed(System.String,System.String,System.Object[])" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Error.Application">
      <topicdata name="Application" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Application" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Error.Application(System.String,System.Object[])" />
        <element api="M:Zhaord.Error.Application(System.Exception,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Error.Argument">
      <topicdata name="Argument" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Argument" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Error.Argument``1(System.Func{``0},System.String,System.Object[])" />
        <element api="M:Zhaord.Error.Argument(System.String,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Error.ArgumentNull">
      <topicdata name="ArgumentNull" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ArgumentNull" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Error.ArgumentNull``1(System.Func{``0})" />
        <element api="M:Zhaord.Error.ArgumentNull(System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Error.ArgumentOutOfRange">
      <topicdata name="ArgumentOutOfRange" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ArgumentOutOfRange" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Error.ArgumentOutOfRange``1(System.Func{``0})" />
        <element api="M:Zhaord.Error.ArgumentOutOfRange(System.String)" />
        <element api="M:Zhaord.Error.ArgumentOutOfRange(System.String,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Error.InvalidCast">
      <topicdata name="InvalidCast" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="InvalidCast" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Error.InvalidCast(System.Type,System.Type)" />
        <element api="M:Zhaord.Error.InvalidCast(System.Type,System.Type,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Error.InvalidOperation">
      <topicdata name="InvalidOperation" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="InvalidOperation" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Error.InvalidOperation``1(System.String,System.Func{``0})" />
        <element api="M:Zhaord.Error.InvalidOperation(System.String,System.Object[])" />
        <element api="M:Zhaord.Error.InvalidOperation``1(System.String,System.Exception,System.Func{``0})" />
        <element api="M:Zhaord.Error.InvalidOperation(System.String,System.Exception,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Error.ObjectDisposed">
      <topicdata name="ObjectDisposed" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ObjectDisposed" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Error.ObjectDisposed(System.String)" />
        <element api="M:Zhaord.Error.ObjectDisposed(System.String,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Error.Application(System.Exception,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="Application" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.Application" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Error.Application(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="Application" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.Application" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Error.Argument``1(System.Func{``0},System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="Argument" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.Argument" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="arg">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Error.Argument``1(System.Func{``0},System.String,System.Object[])" />
            </specialization>
          </type>
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Error.Argument(System.String,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="Argument" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.Argument" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Error.ArgumentNull``1(System.Func{``0})">
      <topicdata group="api" />
      <apidata name="ArgumentNull" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.ArgumentNull" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="arg">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Error.ArgumentNull``1(System.Func{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Error.ArgumentNull(System.String)">
      <topicdata group="api" />
      <apidata name="ArgumentNull" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.ArgumentNull" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Error.ArgumentNullOrEmpty(System.Func{System.String})">
      <topicdata group="api" />
      <apidata name="ArgumentNullOrEmpty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arg">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Error.ArgumentOutOfRange``1(System.Func{``0})">
      <topicdata group="api" />
      <apidata name="ArgumentOutOfRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.ArgumentOutOfRange" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="arg">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Error.ArgumentOutOfRange``1(System.Func{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Error.ArgumentOutOfRange(System.String)">
      <topicdata group="api" />
      <apidata name="ArgumentOutOfRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.ArgumentOutOfRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Error.ArgumentOutOfRange(System.String,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ArgumentOutOfRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.ArgumentOutOfRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Error.InvalidCast(System.Type,System.Type)">
      <topicdata group="api" />
      <apidata name="InvalidCast" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.InvalidCast" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fromType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="toType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Error.InvalidCast(System.Type,System.Type,System.Exception)">
      <topicdata group="api" />
      <apidata name="InvalidCast" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.InvalidCast" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fromType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="toType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Error.InvalidOperation``1(System.String,System.Exception,System.Func{``0})">
      <topicdata group="api" />
      <apidata name="InvalidOperation" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.InvalidOperation" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="member">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Error.InvalidOperation``1(System.String,System.Exception,System.Func{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Error.InvalidOperation(System.String,System.Exception,System.Object[])">
      <topicdata group="api" />
      <apidata name="InvalidOperation" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.InvalidOperation" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Error.InvalidOperation``1(System.String,System.Func{``0})">
      <topicdata group="api" />
      <apidata name="InvalidOperation" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.InvalidOperation" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="member">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Error.InvalidOperation``1(System.String,System.Func{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Error.InvalidOperation(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="InvalidOperation" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.InvalidOperation" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Error.MoreThanOneElement">
      <topicdata group="api" />
      <apidata name="MoreThanOneElement" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Error.NoElements">
      <topicdata group="api" />
      <apidata name="NoElements" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Error.NotImplemented">
      <topicdata group="api" />
      <apidata name="NotImplemented" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Error.NotSupported">
      <topicdata group="api" />
      <apidata name="NotSupported" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Error.ObjectDisposed(System.String)">
      <topicdata group="api" />
      <apidata name="ObjectDisposed" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.ObjectDisposed" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="objectName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Error.ObjectDisposed(System.String,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ObjectDisposed" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.ObjectDisposed" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="objectName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.Guard">
      <topicdata group="api" />
      <apidata name="Guard" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.Guard.Against">
          <element api="M:Zhaord.Guard.Against``1(System.Boolean,System.String)" />
          <element api="M:Zhaord.Guard.Against``1(System.Func{System.Boolean},System.String)" />
        </element>
        <element api="M:Zhaord.Guard.ArgumentInRange``1(``0,``0,``0,System.String)" />
        <element api="Overload:Zhaord.Guard.ArgumentIsEnumType">
          <element api="M:Zhaord.Guard.ArgumentIsEnumType(System.Type,System.String)" />
          <element api="M:Zhaord.Guard.ArgumentIsEnumType(System.Type,System.Object,System.String)" />
        </element>
        <element api="M:Zhaord.Guard.ArgumentIsPositive``1(``0,System.String,System.String)" />
        <element api="M:Zhaord.Guard.ArgumentIsTrue(System.Boolean,System.String,System.String)" />
        <element api="M:Zhaord.Guard.ArgumentNotDisposed(Zhaord.DisposableObject,System.String)" />
        <element api="Overload:Zhaord.Guard.ArgumentNotEmpty">
          <element api="M:Zhaord.Guard.ArgumentNotEmpty(System.Func{System.Guid})" />
          <element api="M:Zhaord.Guard.ArgumentNotEmpty(System.Func{System.String})" />
          <element api="M:Zhaord.Guard.ArgumentNotEmpty``1(System.Collections.Generic.ICollection{``0},System.String)" />
          <element api="M:Zhaord.Guard.ArgumentNotEmpty(System.Guid,System.String)" />
          <element api="M:Zhaord.Guard.ArgumentNotEmpty(System.String,System.String)" />
        </element>
        <element api="M:Zhaord.Guard.ArgumentNotNegative``1(``0,System.String,System.String)" />
        <element api="Overload:Zhaord.Guard.ArgumentNotNull">
          <element api="M:Zhaord.Guard.ArgumentNotNull``1(System.Func{``0})" />
          <element api="M:Zhaord.Guard.ArgumentNotNull(System.Object,System.String)" />
        </element>
        <element api="M:Zhaord.Guard.ArgumentNotOutOfLength(System.String,System.Int32,System.String)" />
        <element api="M:Zhaord.Guard.ArgumentNotZero``1(``0,System.String)" />
        <element api="Overload:Zhaord.Guard.Arguments">
          <element api="M:Zhaord.Guard.Arguments``2(System.Func{``0},System.Func{``1})" />
          <element api="M:Zhaord.Guard.Arguments``3(System.Func{``0},System.Func{``1},System.Func{``2})" />
          <element api="M:Zhaord.Guard.Arguments``4(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3})" />
          <element api="M:Zhaord.Guard.Arguments``5(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3},System.Func{``4})" />
        </element>
        <element api="Overload:Zhaord.Guard.HasDefaultConstructor">
          <element api="M:Zhaord.Guard.HasDefaultConstructor``1" />
          <element api="M:Zhaord.Guard.HasDefaultConstructor(System.Type)" />
        </element>
        <element api="M:Zhaord.Guard.Implements``1(System.Type,System.String)" />
        <element api="Overload:Zhaord.Guard.InheritsFrom">
          <element api="M:Zhaord.Guard.InheritsFrom``1(System.Type)" />
          <element api="M:Zhaord.Guard.InheritsFrom``1(System.Type,System.String)" />
        </element>
        <element api="M:Zhaord.Guard.IsEqual``1(System.Object,System.Object,System.String)" />
        <element api="M:Zhaord.Guard.IsSubclassOf``1(System.Type)" />
        <element api="Overload:Zhaord.Guard.IsTypeOf">
          <element api="M:Zhaord.Guard.IsTypeOf``1(System.Object)" />
          <element api="M:Zhaord.Guard.IsTypeOf``1(System.Object,System.String)" />
        </element>
        <element api="M:Zhaord.Guard.NotNull``1(System.Func{``0})" />
        <element api="M:Zhaord.Guard.PagingArgsValid(System.Int32,System.Int32,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Guard">
      <topicdata name="Guard" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Guard" />
      <apidata name="Guard" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.Guard.Against">
          <element api="M:Zhaord.Guard.Against``1(System.Boolean,System.String)" />
          <element api="M:Zhaord.Guard.Against``1(System.Func{System.Boolean},System.String)" />
        </element>
        <element api="M:Zhaord.Guard.ArgumentInRange``1(``0,``0,``0,System.String)" />
        <element api="Overload:Zhaord.Guard.ArgumentIsEnumType">
          <element api="M:Zhaord.Guard.ArgumentIsEnumType(System.Type,System.String)" />
          <element api="M:Zhaord.Guard.ArgumentIsEnumType(System.Type,System.Object,System.String)" />
        </element>
        <element api="M:Zhaord.Guard.ArgumentIsPositive``1(``0,System.String,System.String)" />
        <element api="M:Zhaord.Guard.ArgumentIsTrue(System.Boolean,System.String,System.String)" />
        <element api="M:Zhaord.Guard.ArgumentNotDisposed(Zhaord.DisposableObject,System.String)" />
        <element api="Overload:Zhaord.Guard.ArgumentNotEmpty">
          <element api="M:Zhaord.Guard.ArgumentNotEmpty(System.Func{System.Guid})" />
          <element api="M:Zhaord.Guard.ArgumentNotEmpty(System.Func{System.String})" />
          <element api="M:Zhaord.Guard.ArgumentNotEmpty``1(System.Collections.Generic.ICollection{``0},System.String)" />
          <element api="M:Zhaord.Guard.ArgumentNotEmpty(System.Guid,System.String)" />
          <element api="M:Zhaord.Guard.ArgumentNotEmpty(System.String,System.String)" />
        </element>
        <element api="M:Zhaord.Guard.ArgumentNotNegative``1(``0,System.String,System.String)" />
        <element api="Overload:Zhaord.Guard.ArgumentNotNull">
          <element api="M:Zhaord.Guard.ArgumentNotNull``1(System.Func{``0})" />
          <element api="M:Zhaord.Guard.ArgumentNotNull(System.Object,System.String)" />
        </element>
        <element api="M:Zhaord.Guard.ArgumentNotOutOfLength(System.String,System.Int32,System.String)" />
        <element api="M:Zhaord.Guard.ArgumentNotZero``1(``0,System.String)" />
        <element api="Overload:Zhaord.Guard.Arguments">
          <element api="M:Zhaord.Guard.Arguments``2(System.Func{``0},System.Func{``1})" />
          <element api="M:Zhaord.Guard.Arguments``3(System.Func{``0},System.Func{``1},System.Func{``2})" />
          <element api="M:Zhaord.Guard.Arguments``4(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3})" />
          <element api="M:Zhaord.Guard.Arguments``5(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3},System.Func{``4})" />
        </element>
        <element api="Overload:Zhaord.Guard.HasDefaultConstructor">
          <element api="M:Zhaord.Guard.HasDefaultConstructor``1" />
          <element api="M:Zhaord.Guard.HasDefaultConstructor(System.Type)" />
        </element>
        <element api="M:Zhaord.Guard.Implements``1(System.Type,System.String)" />
        <element api="Overload:Zhaord.Guard.InheritsFrom">
          <element api="M:Zhaord.Guard.InheritsFrom``1(System.Type)" />
          <element api="M:Zhaord.Guard.InheritsFrom``1(System.Type,System.String)" />
        </element>
        <element api="M:Zhaord.Guard.IsEqual``1(System.Object,System.Object,System.String)" />
        <element api="M:Zhaord.Guard.IsSubclassOf``1(System.Type)" />
        <element api="Overload:Zhaord.Guard.IsTypeOf">
          <element api="M:Zhaord.Guard.IsTypeOf``1(System.Object)" />
          <element api="M:Zhaord.Guard.IsTypeOf``1(System.Object,System.String)" />
        </element>
        <element api="M:Zhaord.Guard.NotNull``1(System.Func{``0})" />
        <element api="M:Zhaord.Guard.PagingArgsValid(System.Int32,System.Int32,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Guard.Against">
      <topicdata name="Against" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Against" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Guard.Against``1(System.Boolean,System.String)" />
        <element api="M:Zhaord.Guard.Against``1(System.Func{System.Boolean},System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Guard.ArgumentIsEnumType">
      <topicdata name="ArgumentIsEnumType" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ArgumentIsEnumType" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Guard.ArgumentIsEnumType(System.Type,System.String)" />
        <element api="M:Zhaord.Guard.ArgumentIsEnumType(System.Type,System.Object,System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Guard.ArgumentNotEmpty">
      <topicdata name="ArgumentNotEmpty" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ArgumentNotEmpty" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Guard.ArgumentNotEmpty(System.Func{System.Guid})" />
        <element api="M:Zhaord.Guard.ArgumentNotEmpty(System.Func{System.String})" />
        <element api="M:Zhaord.Guard.ArgumentNotEmpty``1(System.Collections.Generic.ICollection{``0},System.String)" />
        <element api="M:Zhaord.Guard.ArgumentNotEmpty(System.Guid,System.String)" />
        <element api="M:Zhaord.Guard.ArgumentNotEmpty(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Guard.ArgumentNotNull">
      <topicdata name="ArgumentNotNull" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ArgumentNotNull" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Guard.ArgumentNotNull``1(System.Func{``0})" />
        <element api="M:Zhaord.Guard.ArgumentNotNull(System.Object,System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Guard.Arguments">
      <topicdata name="Arguments" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Arguments" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Guard.Arguments``2(System.Func{``0},System.Func{``1})" />
        <element api="M:Zhaord.Guard.Arguments``3(System.Func{``0},System.Func{``1},System.Func{``2})" />
        <element api="M:Zhaord.Guard.Arguments``4(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3})" />
        <element api="M:Zhaord.Guard.Arguments``5(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3},System.Func{``4})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Guard.HasDefaultConstructor">
      <topicdata name="HasDefaultConstructor" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="HasDefaultConstructor" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Guard.HasDefaultConstructor``1" />
        <element api="M:Zhaord.Guard.HasDefaultConstructor(System.Type)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Guard.InheritsFrom">
      <topicdata name="InheritsFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="InheritsFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Guard.InheritsFrom``1(System.Type)" />
        <element api="M:Zhaord.Guard.InheritsFrom``1(System.Type,System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Guard.IsTypeOf">
      <topicdata name="IsTypeOf" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="IsTypeOf" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Guard.IsTypeOf``1(System.Object)" />
        <element api="M:Zhaord.Guard.IsTypeOf``1(System.Object,System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Guard.Against``1(System.Boolean,System.String)">
      <topicdata group="api" />
      <apidata name="Against" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.Against" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TException">
          <constrained>
            <type api="T:System.Exception" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="assertion">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="message" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Assertion evaluation failed with 'false'.</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Guard.Against``1(System.Func{System.Boolean},System.String)">
      <topicdata group="api" />
      <apidata name="Against" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.Against" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TException">
          <constrained>
            <type api="T:System.Exception" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="assertion">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="message" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Assertion evaluation failed with 'false'.</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Guard.ArgumentInRange``1(``0,``0,``0,System.String)">
      <topicdata group="api" />
      <apidata name="ArgumentInRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true">
            <implements>
              <type api="T:System.IComparable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Zhaord.Guard.ArgumentInRange``1(``0,``0,``0,System.String)" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="arg">
          <template name="T" index="0" api="M:Zhaord.Guard.ArgumentInRange``1(``0,``0,``0,System.String)" />
        </parameter>
        <parameter name="min">
          <template name="T" index="0" api="M:Zhaord.Guard.ArgumentInRange``1(``0,``0,``0,System.String)" />
        </parameter>
        <parameter name="max">
          <template name="T" index="0" api="M:Zhaord.Guard.ArgumentInRange``1(``0,``0,``0,System.String)" />
        </parameter>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Guard.ArgumentIsEnumType(System.Type,System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="ArgumentIsEnumType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.ArgumentIsEnumType" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="enumType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="arg">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Guard.ArgumentIsEnumType(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name="ArgumentIsEnumType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.ArgumentIsEnumType" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arg">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Guard.ArgumentIsPositive``1(``0,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ArgumentIsPositive" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true">
            <implements>
              <type api="T:System.IComparable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Zhaord.Guard.ArgumentIsPositive``1(``0,System.String,System.String)" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="arg">
          <template name="T" index="0" api="M:Zhaord.Guard.ArgumentIsPositive``1(``0,System.String,System.String)" />
        </parameter>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="message" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Argument '{0}' must be a positive value. Value: '{1}'.</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Guard.ArgumentIsTrue(System.Boolean,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ArgumentIsTrue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arg">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="message" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>True expected for '{0}' but the condition was False.</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Guard.ArgumentNotDisposed(Zhaord.DisposableObject,System.String)">
      <topicdata group="api" />
      <apidata name="ArgumentNotDisposed" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arg">
          <type api="T:Zhaord.DisposableObject" ref="true" />
        </parameter>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Guard.ArgumentNotEmpty``1(System.Collections.Generic.ICollection{``0},System.String)">
      <topicdata group="api" />
      <apidata name="ArgumentNotEmpty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.ArgumentNotEmpty" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="arg">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Guard.ArgumentNotEmpty``1(System.Collections.Generic.ICollection{``0},System.String)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Guard.ArgumentNotEmpty(System.Func{System.Guid})">
      <topicdata group="api" />
      <apidata name="ArgumentNotEmpty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.ArgumentNotEmpty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arg">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <type api="T:System.Guid" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Guard.ArgumentNotEmpty(System.Func{System.String})">
      <topicdata group="api" />
      <apidata name="ArgumentNotEmpty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.ArgumentNotEmpty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arg">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Guard.ArgumentNotEmpty(System.Guid,System.String)">
      <topicdata group="api" />
      <apidata name="ArgumentNotEmpty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.ArgumentNotEmpty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arg">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Guard.ArgumentNotEmpty(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ArgumentNotEmpty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.ArgumentNotEmpty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arg">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Guard.ArgumentNotNegative``1(``0,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ArgumentNotNegative" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true">
            <implements>
              <type api="T:System.IComparable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Zhaord.Guard.ArgumentNotNegative``1(``0,System.String,System.String)" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="arg">
          <template name="T" index="0" api="M:Zhaord.Guard.ArgumentNotNegative``1(``0,System.String,System.String)" />
        </parameter>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="message" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Argument '{0}' cannot be a negative value. Value: '{1}'.</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Guard.ArgumentNotNull``1(System.Func{``0})">
      <topicdata group="api" />
      <apidata name="ArgumentNotNull" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.ArgumentNotNull" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="arg">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Guard.ArgumentNotNull``1(System.Func{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Guard.ArgumentNotNull(System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="ArgumentNotNull" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.ArgumentNotNull" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arg">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Guard.ArgumentNotOutOfLength(System.String,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="ArgumentNotOutOfLength" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arg">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="maxLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Guard.ArgumentNotZero``1(``0,System.String)">
      <topicdata group="api" />
      <apidata name="ArgumentNotZero" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true">
            <implements>
              <type api="T:System.IComparable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Zhaord.Guard.ArgumentNotZero``1(``0,System.String)" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="arg">
          <template name="T" index="0" api="M:Zhaord.Guard.ArgumentNotZero``1(``0,System.String)" />
        </parameter>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Guard.Arguments``2(System.Func{``0},System.Func{``1})">
      <topicdata group="api" />
      <apidata name="Arguments" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.Arguments" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
      </templates>
      <parameters>
        <parameter name="arg1">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Zhaord.Guard.Arguments``2(System.Func{``0},System.Func{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg2">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T2" index="1" api="M:Zhaord.Guard.Arguments``2(System.Func{``0},System.Func{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Guard.Arguments``3(System.Func{``0},System.Func{``1},System.Func{``2})">
      <topicdata group="api" />
      <apidata name="Arguments" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.Arguments" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
      </templates>
      <parameters>
        <parameter name="arg1">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Zhaord.Guard.Arguments``3(System.Func{``0},System.Func{``1},System.Func{``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg2">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T2" index="1" api="M:Zhaord.Guard.Arguments``3(System.Func{``0},System.Func{``1},System.Func{``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg3">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T3" index="2" api="M:Zhaord.Guard.Arguments``3(System.Func{``0},System.Func{``1},System.Func{``2})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Guard.Arguments``4(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3})">
      <topicdata group="api" />
      <apidata name="Arguments" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.Arguments" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
      </templates>
      <parameters>
        <parameter name="arg1">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Zhaord.Guard.Arguments``4(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg2">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T2" index="1" api="M:Zhaord.Guard.Arguments``4(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg3">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T3" index="2" api="M:Zhaord.Guard.Arguments``4(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg4">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T4" index="3" api="M:Zhaord.Guard.Arguments``4(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Guard.Arguments``5(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3},System.Func{``4})">
      <topicdata group="api" />
      <apidata name="Arguments" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.Arguments" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
      </templates>
      <parameters>
        <parameter name="arg1">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Zhaord.Guard.Arguments``5(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3},System.Func{``4})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg2">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T2" index="1" api="M:Zhaord.Guard.Arguments``5(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3},System.Func{``4})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg3">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T3" index="2" api="M:Zhaord.Guard.Arguments``5(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3},System.Func{``4})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg4">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T4" index="3" api="M:Zhaord.Guard.Arguments``5(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3},System.Func{``4})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg5">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T5" index="4" api="M:Zhaord.Guard.Arguments``5(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3},System.Func{``4})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Guard.HasDefaultConstructor``1">
      <topicdata group="api" />
      <apidata name="HasDefaultConstructor" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.HasDefaultConstructor" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Guard.HasDefaultConstructor(System.Type)">
      <topicdata group="api" />
      <apidata name="HasDefaultConstructor" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.HasDefaultConstructor" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="t">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Guard.Implements``1(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name="Implements" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TInterface" />
      </templates>
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="message" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Type '{0}' must implement type '{1}'.</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Guard.InheritsFrom``1(System.Type)">
      <topicdata group="api" />
      <apidata name="InheritsFrom" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.InheritsFrom" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TBase" />
      </templates>
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Guard.InheritsFrom``1(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name="InheritsFrom" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.InheritsFrom" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TBase" />
      </templates>
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Guard.IsEqual``1(System.Object,System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="IsEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TException">
          <constrained>
            <type api="T:System.Exception" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="compare">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="message" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Compared objects must be equal.</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Guard.IsSubclassOf``1(System.Type)">
      <topicdata group="api" />
      <apidata name="IsSubclassOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TBase" />
      </templates>
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Guard.IsTypeOf``1(System.Object)">
      <topicdata group="api" />
      <apidata name="IsTypeOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.IsTypeOf" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TType" />
      </templates>
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Guard.IsTypeOf``1(System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="IsTypeOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.IsTypeOf" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TType" />
      </templates>
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Guard.NotNull``1(System.Func{``0})">
      <topicdata group="api" />
      <apidata name="NotNull" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="M:Zhaord.Guard.NotNull``1(System.Func{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Guard.PagingArgsValid(System.Int32,System.Int32,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="PagingArgsValid" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="indexArg">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sizeArg">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="indexArgName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sizeArgName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.IApplicationServiceContract">
      <topicdata group="api" />
      <apidata name="IApplicationServiceContract" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
      </containers>
    </api>
    <api id="T:Zhaord.ICloneable`1">
      <topicdata group="api" />
      <apidata name="ICloneable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <variance covariant="true" />
        </template>
      </templates>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <implementors>
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </implementors>
      <elements>
        <element api="M:Zhaord.ICloneable`1.Clone" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.ICloneable`1">
      <topicdata name="ICloneable" group="list" subgroup="Methods" typeTopicId="T:Zhaord.ICloneable`1" />
      <apidata name="ICloneable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <variance covariant="true" />
        </template>
      </templates>
      <elements>
        <element api="M:Zhaord.ICloneable`1.Clone" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ICloneable`1" />
      </containers>
    </api>
    <api id="M:Zhaord.ICloneable`1.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <template name="T" index="0" api="T:Zhaord.ICloneable`1" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ICloneable`1" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.IMergedData">
      <topicdata group="api" />
      <apidata name="IMergedData" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Extensions.MiscExtensions.GetMergedDataValue``1(Zhaord.IMergedData,System.String,``0)" source="extension">
          <apidata name="GetMergedDataValue" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="key">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="defaultValue">
              <template name="T" index="0" api="M:Zhaord.Extensions.MiscExtensions.GetMergedDataValue``1(Zhaord.IMergedData,System.String,``0)" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.MiscExtensions.GetMergedDataValue``1(Zhaord.IMergedData,System.String,``0)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="P:Zhaord.IMergedData.MergedDataIgnore" />
        <element api="P:Zhaord.IMergedData.MergedDataValues" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.IMergedData">
      <topicdata name="IMergedData" group="list" subgroup="Methods" typeTopicId="T:Zhaord.IMergedData" />
      <apidata name="IMergedData" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Extensions.MiscExtensions.GetMergedDataValue``1(Zhaord.IMergedData,System.String,``0)" source="extension">
          <apidata name="GetMergedDataValue" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="key">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="defaultValue">
              <template name="T" index="0" api="M:Zhaord.Extensions.MiscExtensions.GetMergedDataValue``1(Zhaord.IMergedData,System.String,``0)" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.MiscExtensions.GetMergedDataValue``1(Zhaord.IMergedData,System.String,``0)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IMergedData" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.IMergedData">
      <topicdata name="IMergedData" group="list" subgroup="Properties" typeTopicId="T:Zhaord.IMergedData" />
      <apidata name="IMergedData" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.IMergedData.MergedDataIgnore" />
        <element api="P:Zhaord.IMergedData.MergedDataValues" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IMergedData" />
      </containers>
    </api>
    <api id="P:Zhaord.IMergedData.MergedDataIgnore">
      <topicdata group="api" />
      <apidata name="MergedDataIgnore" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MergedDataIgnore" />
      <setter name="set_MergedDataIgnore" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IMergedData" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.IMergedData.MergedDataValues">
      <topicdata group="api" />
      <apidata name="MergedDataValues" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_MergedDataValues" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IMergedData" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.IOrdered">
      <topicdata group="api" />
      <apidata name="IOrdered" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.IOrdered.Ordinal" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.IOrdered">
      <topicdata name="IOrdered" group="list" subgroup="Properties" typeTopicId="T:Zhaord.IOrdered" />
      <apidata name="IOrdered" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.IOrdered.Ordinal" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IOrdered" />
      </containers>
    </api>
    <api id="P:Zhaord.IOrdered.Ordinal">
      <topicdata group="api" />
      <apidata name="Ordinal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Ordinal" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IOrdered" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.IStartupTask">
      <topicdata group="api" />
      <apidata name="IStartupTask" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.IStartupTask.Execute" />
        <element api="P:Zhaord.IStartupTask.Order" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.IStartupTask">
      <topicdata name="IStartupTask" group="list" subgroup="Methods" typeTopicId="T:Zhaord.IStartupTask" />
      <apidata name="IStartupTask" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.IStartupTask.Execute" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IStartupTask" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.IStartupTask">
      <topicdata name="IStartupTask" group="list" subgroup="Properties" typeTopicId="T:Zhaord.IStartupTask" />
      <apidata name="IStartupTask" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.IStartupTask.Order" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IStartupTask" />
      </containers>
    </api>
    <api id="M:Zhaord.IStartupTask.Execute">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IStartupTask" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.IStartupTask.Order">
      <topicdata group="api" />
      <apidata name="Order" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Order" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IStartupTask" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.IWorkContext">
      <topicdata group="api" />
      <apidata name="IWorkContext" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.IWorkContext.CurrentCustomerId" />
        <element api="M:Zhaord.IWorkContext.GetDefaultLanguageSeoCode(System.Int32)" />
        <element api="P:Zhaord.IWorkContext.IsAdmin" />
        <element api="M:Zhaord.IWorkContext.IsPublishedLanguage(System.String,System.Int32)" />
        <element api="P:Zhaord.IWorkContext.OriginalCustomerIdIfImpersonated" />
        <element api="P:Zhaord.IWorkContext.WorkingLanguageId" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.IWorkContext">
      <topicdata name="IWorkContext" group="list" subgroup="Methods" typeTopicId="T:Zhaord.IWorkContext" />
      <apidata name="IWorkContext" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.IWorkContext.GetDefaultLanguageSeoCode(System.Int32)" />
        <element api="M:Zhaord.IWorkContext.IsPublishedLanguage(System.String,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IWorkContext" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.IWorkContext">
      <topicdata name="IWorkContext" group="list" subgroup="Properties" typeTopicId="T:Zhaord.IWorkContext" />
      <apidata name="IWorkContext" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.IWorkContext.CurrentCustomerId" />
        <element api="P:Zhaord.IWorkContext.IsAdmin" />
        <element api="P:Zhaord.IWorkContext.OriginalCustomerIdIfImpersonated" />
        <element api="P:Zhaord.IWorkContext.WorkingLanguageId" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IWorkContext" />
      </containers>
    </api>
    <api id="P:Zhaord.IWorkContext.CurrentCustomerId">
      <topicdata group="api" />
      <apidata name="CurrentCustomerId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_CurrentCustomerId" />
      <setter name="set_CurrentCustomerId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IWorkContext" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.IWorkContext.GetDefaultLanguageSeoCode(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetDefaultLanguageSeoCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="storeId" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IWorkContext" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.IWorkContext.IsAdmin">
      <topicdata group="api" />
      <apidata name="IsAdmin" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_IsAdmin" />
      <setter name="set_IsAdmin" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IWorkContext" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.IWorkContext.IsPublishedLanguage(System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="IsPublishedLanguage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="seoCode">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="storeId" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IWorkContext" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.IWorkContext.OriginalCustomerIdIfImpersonated">
      <topicdata group="api" />
      <apidata name="OriginalCustomerIdIfImpersonated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_OriginalCustomerIdIfImpersonated" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IWorkContext" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.IWorkContext.WorkingLanguageId">
      <topicdata group="api" />
      <apidata name="WorkingLanguageId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_WorkingLanguageId" />
      <setter name="set_WorkingLanguageId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IWorkContext" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.OperationResult">
      <topicdata group="api" />
      <apidata name="OperationResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.OperationResult.#ctor">
          <element api="M:Zhaord.OperationResult.#ctor(Zhaord.OperationResultType)" />
          <element api="M:Zhaord.OperationResult.#ctor(Zhaord.OperationResultType,System.String)" />
          <element api="M:Zhaord.OperationResult.#ctor(Zhaord.OperationResultType,System.String,System.Object)" />
          <element api="M:Zhaord.OperationResult.#ctor(Zhaord.OperationResultType,System.String,System.String)" />
          <element api="M:Zhaord.OperationResult.#ctor(Zhaord.OperationResultType,System.String,System.String,System.Object)" />
        </element>
        <element api="P:Zhaord.OperationResult.AppendData" />
        <element api="P:Zhaord.OperationResult.LogMessage" />
        <element api="P:Zhaord.OperationResult.Message" />
        <element api="P:Zhaord.OperationResult.ResultType" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.OperationResult">
      <topicdata name="OperationResult" group="list" subgroup="Methods" typeTopicId="T:Zhaord.OperationResult" />
      <apidata name="OperationResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResult" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.OperationResult">
      <topicdata name="OperationResult" group="list" subgroup="Properties" typeTopicId="T:Zhaord.OperationResult" />
      <apidata name="OperationResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Zhaord.OperationResult.AppendData" />
        <element api="P:Zhaord.OperationResult.LogMessage" />
        <element api="P:Zhaord.OperationResult.Message" />
        <element api="P:Zhaord.OperationResult.ResultType" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResult" />
      </containers>
    </api>
    <api id="Overload:Zhaord.OperationResult.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Zhaord.OperationResult.#ctor(Zhaord.OperationResultType)" />
        <element api="M:Zhaord.OperationResult.#ctor(Zhaord.OperationResultType,System.String)" />
        <element api="M:Zhaord.OperationResult.#ctor(Zhaord.OperationResultType,System.String,System.Object)" />
        <element api="M:Zhaord.OperationResult.#ctor(Zhaord.OperationResultType,System.String,System.String)" />
        <element api="M:Zhaord.OperationResult.#ctor(Zhaord.OperationResultType,System.String,System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResult" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.OperationResult.#ctor(Zhaord.OperationResultType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.OperationResult.#ctor" />
      <parameters>
        <parameter name="resultType">
          <type api="T:Zhaord.OperationResultType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResult" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.OperationResult.#ctor(Zhaord.OperationResultType,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.OperationResult.#ctor" />
      <parameters>
        <parameter name="resultType">
          <type api="T:Zhaord.OperationResultType" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResult" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.OperationResult.#ctor(Zhaord.OperationResultType,System.String,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.OperationResult.#ctor" />
      <parameters>
        <parameter name="resultType">
          <type api="T:Zhaord.OperationResultType" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="appendData">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResult" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.OperationResult.#ctor(Zhaord.OperationResultType,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.OperationResult.#ctor" />
      <parameters>
        <parameter name="resultType">
          <type api="T:Zhaord.OperationResultType" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="logMessage">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResult" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.OperationResult.#ctor(Zhaord.OperationResultType,System.String,System.String,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.OperationResult.#ctor" />
      <parameters>
        <parameter name="resultType">
          <type api="T:Zhaord.OperationResultType" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="logMessage">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="appendData">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResult" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.OperationResult.AppendData">
      <topicdata group="api" />
      <apidata name="AppendData" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AppendData" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResult" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.OperationResult.LogMessage">
      <topicdata group="api" />
      <apidata name="LogMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LogMessage" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResult" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.OperationResult.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Message" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResult" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.OperationResult.ResultType">
      <topicdata group="api" />
      <apidata name="ResultType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ResultType" />
      <returns>
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResult" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.OperationResultType">
      <topicdata group="api" />
      <apidata name="OperationResultType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Zhaord.OperationResultType.Success" />
        <element api="F:Zhaord.OperationResultType.NoChanged" />
        <element api="F:Zhaord.OperationResultType.ParamError" />
        <element api="F:Zhaord.OperationResultType.QueryNull" />
        <element api="F:Zhaord.OperationResultType.PurviewLack" />
        <element api="F:Zhaord.OperationResultType.IllegalOperation" />
        <element api="F:Zhaord.OperationResultType.Warning" />
        <element api="F:Zhaord.OperationResultType.Error" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
      </containers>
    </api>
    <api id="F:Zhaord.OperationResultType.Error">
      <topicdata group="api" notopic="" />
      <apidata name="Error" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </containers>
    </api>
    <api id="F:Zhaord.OperationResultType.IllegalOperation">
      <topicdata group="api" notopic="" />
      <apidata name="IllegalOperation" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </containers>
    </api>
    <api id="F:Zhaord.OperationResultType.NoChanged">
      <topicdata group="api" notopic="" />
      <apidata name="NoChanged" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </containers>
    </api>
    <api id="F:Zhaord.OperationResultType.ParamError">
      <topicdata group="api" notopic="" />
      <apidata name="ParamError" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </containers>
    </api>
    <api id="F:Zhaord.OperationResultType.PurviewLack">
      <topicdata group="api" notopic="" />
      <apidata name="PurviewLack" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </containers>
    </api>
    <api id="F:Zhaord.OperationResultType.QueryNull">
      <topicdata group="api" notopic="" />
      <apidata name="QueryNull" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </containers>
    </api>
    <api id="F:Zhaord.OperationResultType.Success">
      <topicdata group="api" notopic="" />
      <apidata name="Success" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </containers>
    </api>
    <api id="F:Zhaord.OperationResultType.Warning">
      <topicdata group="api" notopic="" />
      <apidata name="Warning" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </containers>
    </api>
    <api id="T:Zhaord.ZhaordException">
      <topicdata group="api" />
      <apidata name="ZhaordException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Zhaord.ZhaordValidationException" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.MiscExtensions.Dump(System.Exception)" source="extension">
          <apidata name="Dump" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.MiscExtensions.ToAllMessages(System.Exception)" source="extension">
          <apidata name="ToAllMessages" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.ZhaordException.#ctor">
          <element api="M:Zhaord.ZhaordException.#ctor" />
          <element api="M:Zhaord.ZhaordException.#ctor(System.String)" />
          <element api="M:Zhaord.ZhaordException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:Zhaord.ZhaordException.#ctor(System.String,System.Exception)" />
          <element api="M:Zhaord.ZhaordException.#ctor(System.String,System.Object[])" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.ZhaordException">
      <topicdata name="ZhaordException" group="list" subgroup="Methods" typeTopicId="T:Zhaord.ZhaordException" />
      <apidata name="ZhaordException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.MiscExtensions.Dump(System.Exception)" source="extension">
          <apidata name="Dump" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.MiscExtensions.ToAllMessages(System.Exception)" source="extension">
          <apidata name="ToAllMessages" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordException" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.ZhaordException">
      <topicdata name="ZhaordException" group="list" subgroup="Properties" typeTopicId="T:Zhaord.ZhaordException" />
      <apidata name="ZhaordException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordException" />
      </containers>
    </api>
    <api id="Events.T:Zhaord.ZhaordException">
      <topicdata name="ZhaordException" group="list" subgroup="Events" typeTopicId="T:Zhaord.ZhaordException" />
      <apidata name="ZhaordException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordException" />
      </containers>
    </api>
    <api id="Overload:Zhaord.ZhaordException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Zhaord.ZhaordException.#ctor" />
        <element api="M:Zhaord.ZhaordException.#ctor(System.String)" />
        <element api="M:Zhaord.ZhaordException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Zhaord.ZhaordException.#ctor(System.String,System.Exception)" />
        <element api="M:Zhaord.ZhaordException.#ctor(System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordException" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.ZhaordException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.ZhaordException.#ctor" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordException" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.ZhaordException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:Zhaord.ZhaordException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordException" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.ZhaordException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.ZhaordException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordException" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.ZhaordException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.ZhaordException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordException" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.ZhaordException.#ctor(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.ZhaordException.#ctor" />
      <parameters>
        <parameter name="messageFormat">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordException" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.ZhaordValidationException">
      <topicdata group="api" />
      <apidata name="ZhaordValidationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Zhaord.ZhaordException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.MiscExtensions.Dump(System.Exception)" source="extension">
          <apidata name="Dump" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.MiscExtensions.ToAllMessages(System.Exception)" source="extension">
          <apidata name="ToAllMessages" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.ZhaordValidationException.#ctor">
          <element api="M:Zhaord.ZhaordValidationException.#ctor" />
          <element api="M:Zhaord.ZhaordValidationException.#ctor(System.String)" />
          <element api="M:Zhaord.ZhaordValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:Zhaord.ZhaordValidationException.#ctor(System.String,System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult})" />
          <element api="M:Zhaord.ZhaordValidationException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="P:Zhaord.ZhaordValidationException.ValidationErrors" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.ZhaordValidationException">
      <topicdata name="ZhaordValidationException" group="list" subgroup="Methods" typeTopicId="T:Zhaord.ZhaordValidationException" />
      <apidata name="ZhaordValidationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.MiscExtensions.Dump(System.Exception)" source="extension">
          <apidata name="Dump" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.MiscExtensions.ToAllMessages(System.Exception)" source="extension">
          <apidata name="ToAllMessages" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordValidationException" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.ZhaordValidationException">
      <topicdata name="ZhaordValidationException" group="list" subgroup="Properties" typeTopicId="T:Zhaord.ZhaordValidationException" />
      <apidata name="ZhaordValidationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:Zhaord.ZhaordValidationException.ValidationErrors" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordValidationException" />
      </containers>
    </api>
    <api id="Events.T:Zhaord.ZhaordValidationException">
      <topicdata name="ZhaordValidationException" group="list" subgroup="Events" typeTopicId="T:Zhaord.ZhaordValidationException" />
      <apidata name="ZhaordValidationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordValidationException" />
      </containers>
    </api>
    <api id="Overload:Zhaord.ZhaordValidationException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Zhaord.ZhaordValidationException.#ctor" />
        <element api="M:Zhaord.ZhaordValidationException.#ctor(System.String)" />
        <element api="M:Zhaord.ZhaordValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Zhaord.ZhaordValidationException.#ctor(System.String,System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult})" />
        <element api="M:Zhaord.ZhaordValidationException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordValidationException" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.ZhaordValidationException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.ZhaordValidationException.#ctor" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordValidationException" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.ZhaordValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.ZhaordValidationException.#ctor" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordValidationException" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.ZhaordValidationException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.ZhaordValidationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordValidationException" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.ZhaordValidationException.#ctor(System.String,System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.ZhaordValidationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="validationErrors">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.DataAnnotations.ValidationResult" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordValidationException" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.ZhaordValidationException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.ZhaordValidationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordValidationException" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.ZhaordValidationException.ValidationErrors">
      <topicdata group="api" />
      <apidata name="ValidationErrors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ValidationErrors" />
      <setter name="set_ValidationErrors" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.DataAnnotations.ValidationResult" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordValidationException" ref="true" />
      </containers>
    </api>
    <api id="N:Zhaord.Attributes">
      <topicdata group="api" />
      <apidata name="Zhaord.Attributes" group="namespace" />
      <elements>
        <element api="T:Zhaord.Attributes.EnumDescriptionAttribute" />
        <element api="T:Zhaord.Attributes.EnumFriendlyNameAttribute" />
        <element api="T:Zhaord.Attributes.ObjectSignatureAttribute" />
      </elements>
    </api>
    <api id="T:Zhaord.Attributes.EnumDescriptionAttribute">
      <topicdata group="api" />
      <apidata name="EnumDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Attributes.EnumDescriptionAttribute.#ctor(System.String)" />
        <element api="P:Zhaord.Attributes.EnumDescriptionAttribute.Description" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Attributes" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Attributes.EnumDescriptionAttribute">
      <topicdata name="EnumDescriptionAttribute" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Attributes.EnumDescriptionAttribute" />
      <apidata name="EnumDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Attributes" />
        <type api="T:Zhaord.Attributes.EnumDescriptionAttribute" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.Attributes.EnumDescriptionAttribute">
      <topicdata name="EnumDescriptionAttribute" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Attributes.EnumDescriptionAttribute" />
      <apidata name="EnumDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:Zhaord.Attributes.EnumDescriptionAttribute.Description" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Attributes" />
        <type api="T:Zhaord.Attributes.EnumDescriptionAttribute" />
      </containers>
    </api>
    <api id="M:Zhaord.Attributes.EnumDescriptionAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Attributes" />
        <type api="T:Zhaord.Attributes.EnumDescriptionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Attributes.EnumDescriptionAttribute.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Attributes" />
        <type api="T:Zhaord.Attributes.EnumDescriptionAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.Attributes.EnumFriendlyNameAttribute">
      <topicdata group="api" />
      <apidata name="EnumFriendlyNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Attributes.EnumFriendlyNameAttribute.#ctor(System.String)" />
        <element api="P:Zhaord.Attributes.EnumFriendlyNameAttribute.FriendlyName" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Attributes" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Attributes.EnumFriendlyNameAttribute">
      <topicdata name="EnumFriendlyNameAttribute" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Attributes.EnumFriendlyNameAttribute" />
      <apidata name="EnumFriendlyNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Attributes" />
        <type api="T:Zhaord.Attributes.EnumFriendlyNameAttribute" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.Attributes.EnumFriendlyNameAttribute">
      <topicdata name="EnumFriendlyNameAttribute" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Attributes.EnumFriendlyNameAttribute" />
      <apidata name="EnumFriendlyNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:Zhaord.Attributes.EnumFriendlyNameAttribute.FriendlyName" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Attributes" />
        <type api="T:Zhaord.Attributes.EnumFriendlyNameAttribute" />
      </containers>
    </api>
    <api id="M:Zhaord.Attributes.EnumFriendlyNameAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="friendlyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Attributes" />
        <type api="T:Zhaord.Attributes.EnumFriendlyNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Attributes.EnumFriendlyNameAttribute.FriendlyName">
      <topicdata group="api" />
      <apidata name="FriendlyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FriendlyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Attributes" />
        <type api="T:Zhaord.Attributes.EnumFriendlyNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.Attributes.ObjectSignatureAttribute">
      <topicdata group="api" />
      <apidata name="ObjectSignatureAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Attributes.ObjectSignatureAttribute.#ctor" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Attributes" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Attributes.ObjectSignatureAttribute">
      <topicdata name="ObjectSignatureAttribute" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Attributes.ObjectSignatureAttribute" />
      <apidata name="ObjectSignatureAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Attributes" />
        <type api="T:Zhaord.Attributes.ObjectSignatureAttribute" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.Attributes.ObjectSignatureAttribute">
      <topicdata name="ObjectSignatureAttribute" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Attributes.ObjectSignatureAttribute" />
      <apidata name="ObjectSignatureAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Attributes" />
        <type api="T:Zhaord.Attributes.ObjectSignatureAttribute" />
      </containers>
    </api>
    <api id="M:Zhaord.Attributes.ObjectSignatureAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Attributes" />
        <type api="T:Zhaord.Attributes.ObjectSignatureAttribute" ref="true" />
      </containers>
    </api>
    <api id="N:Zhaord.Caching">
      <topicdata group="api" />
      <apidata name="Zhaord.Caching" group="namespace" />
      <elements>
        <element api="T:Zhaord.Caching.ICache" />
        <element api="T:Zhaord.Caching.AspNetCache" />
        <element api="T:Zhaord.Caching.CacheManagerExtensions" />
        <element api="T:Zhaord.Caching.ICacheManager" />
        <element api="T:Zhaord.Caching.CacheManager`1" />
        <element api="T:Zhaord.Caching.NullCache" />
        <element api="T:Zhaord.Caching.RequestCache" />
        <element api="T:Zhaord.Caching.StaticCache" />
      </elements>
    </api>
    <api id="T:Zhaord.Caching.AspNetCache">
      <topicdata group="api" />
      <apidata name="AspNetCache" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Zhaord.Caching.ICache" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Caching.AspNetCache.#ctor" />
        <element api="M:Zhaord.Caching.AspNetCache.BuildKey(System.String)" />
        <element api="M:Zhaord.Caching.AspNetCache.Contains(System.String)" />
        <element api="P:Zhaord.Caching.AspNetCache.Entries" />
        <element api="M:Zhaord.Caching.AspNetCache.Get(System.String)" />
        <element api="P:Zhaord.Caching.AspNetCache.IsSingleton" />
        <element api="M:Zhaord.Caching.AspNetCache.Remove(System.String)" />
        <element api="M:Zhaord.Caching.AspNetCache.Set(System.String,System.Object,System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Caching.AspNetCache">
      <topicdata name="AspNetCache" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Caching.AspNetCache" />
      <apidata name="AspNetCache" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Caching.AspNetCache.BuildKey(System.String)" />
        <element api="M:Zhaord.Caching.AspNetCache.Contains(System.String)" />
        <element api="M:Zhaord.Caching.AspNetCache.Get(System.String)" />
        <element api="M:Zhaord.Caching.AspNetCache.Remove(System.String)" />
        <element api="M:Zhaord.Caching.AspNetCache.Set(System.String,System.Object,System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.AspNetCache" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.Caching.AspNetCache">
      <topicdata name="AspNetCache" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Caching.AspNetCache" />
      <apidata name="AspNetCache" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Zhaord.Caching.AspNetCache.Entries" />
        <element api="P:Zhaord.Caching.AspNetCache.IsSingleton" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.AspNetCache" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.AspNetCache.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.AspNetCache" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.AspNetCache.BuildKey(System.String)">
      <topicdata group="api" />
      <apidata name="BuildKey" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.AspNetCache" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.AspNetCache.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Zhaord.Caching.ICache.Contains(System.String)">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.AspNetCache" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Caching.AspNetCache.Entries">
      <topicdata group="api" />
      <apidata name="Entries" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Entries" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:Zhaord.Caching.ICache.Entries">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.AspNetCache" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.AspNetCache.Get(System.String)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:Zhaord.Caching.ICache.Get(System.String)">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.AspNetCache" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Caching.AspNetCache.IsSingleton">
      <topicdata group="api" />
      <apidata name="IsSingleton" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsSingleton" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Zhaord.Caching.ICache.IsSingleton">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.AspNetCache" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.AspNetCache.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Zhaord.Caching.ICache.Remove(System.String)">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.AspNetCache" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.AspNetCache.Set(System.String,System.Object,System.Nullable{System.Int32})">
      <topicdata group="api" />
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="cacheTime">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Zhaord.Caching.ICache.Set(System.String,System.Object,System.Nullable{System.Int32})">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.AspNetCache" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.Caching.CacheManager`1">
      <topicdata group="api" />
      <apidata name="CacheManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TCache">
          <constrained>
            <implements>
              <type api="T:Zhaord.Caching.ICache" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <implements>
        <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Caching.CacheManagerExtensions.Get``1(Zhaord.Caching.ICacheManager,System.String)" source="extension">
          <apidata name="Get" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="key">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Caching.CacheManagerExtensions.Get``1(Zhaord.Caching.ICacheManager,System.String)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Caching" />
            <type api="T:Zhaord.Caching.CacheManagerExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Caching.CacheManager`1.#ctor(System.Func{System.Type,Zhaord.Caching.ICache})" />
        <element api="M:Zhaord.Caching.CacheManager`1.Clear" />
        <element api="M:Zhaord.Caching.CacheManager`1.Contains(System.String)" />
        <element api="M:Zhaord.Caching.CacheManager`1.EnterWriteLock" />
        <element api="M:Zhaord.Caching.CacheManager`1.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})" />
        <element api="M:Zhaord.Caching.CacheManager`1.Remove(System.String)" />
        <element api="M:Zhaord.Caching.CacheManager`1.RemoveByPattern(System.String)" />
        <element api="M:Zhaord.Caching.CacheManager`1.Set(System.String,System.Object,System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Caching.CacheManager`1">
      <topicdata name="CacheManager" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Caching.CacheManager`1" />
      <apidata name="CacheManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TCache">
          <constrained>
            <implements>
              <type api="T:Zhaord.Caching.ICache" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Caching.CacheManagerExtensions.Get``1(Zhaord.Caching.ICacheManager,System.String)" source="extension">
          <apidata name="Get" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="key">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Caching.CacheManagerExtensions.Get``1(Zhaord.Caching.ICacheManager,System.String)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Caching" />
            <type api="T:Zhaord.Caching.CacheManagerExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Caching.CacheManager`1.Clear" />
        <element api="M:Zhaord.Caching.CacheManager`1.Contains(System.String)" />
        <element api="M:Zhaord.Caching.CacheManager`1.EnterWriteLock" />
        <element api="M:Zhaord.Caching.CacheManager`1.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})" />
        <element api="M:Zhaord.Caching.CacheManager`1.Remove(System.String)" />
        <element api="M:Zhaord.Caching.CacheManager`1.RemoveByPattern(System.String)" />
        <element api="M:Zhaord.Caching.CacheManager`1.Set(System.String,System.Object,System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.CacheManager`1" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.CacheManager`1.#ctor(System.Func{System.Type,Zhaord.Caching.ICache})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="fn">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
              <type api="T:Zhaord.Caching.ICache" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.CacheManager`1" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.CacheManager`1.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:Zhaord.Caching.ICacheManager.Clear">
          <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.CacheManager`1" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.CacheManager`1.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Zhaord.Caching.ICacheManager.Contains(System.String)">
          <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.CacheManager`1" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.CacheManager`1.EnterWriteLock">
      <topicdata group="api" />
      <apidata name="EnterWriteLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.IDisposable" ref="true" />
      </returns>
      <implements>
        <member api="M:Zhaord.Caching.ICacheManager.EnterWriteLock">
          <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.CacheManager`1" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.CacheManager`1.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="acquirer">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Caching.CacheManager`1.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cacheTime" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Caching.CacheManager`1.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})" />
      </returns>
      <implements>
        <member api="M:Zhaord.Caching.ICacheManager.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})">
          <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.CacheManager`1" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.CacheManager`1.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Zhaord.Caching.ICacheManager.Remove(System.String)">
          <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.CacheManager`1" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.CacheManager`1.RemoveByPattern(System.String)">
      <topicdata group="api" />
      <apidata name="RemoveByPattern" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="pattern">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Zhaord.Caching.ICacheManager.RemoveByPattern(System.String)">
          <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.CacheManager`1" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.CacheManager`1.Set(System.String,System.Object,System.Nullable{System.Int32})">
      <topicdata group="api" />
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="cacheTime" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Zhaord.Caching.ICacheManager.Set(System.String,System.Object,System.Nullable{System.Int32})">
          <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.CacheManager`1" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.Caching.CacheManagerExtensions">
      <topicdata group="api" />
      <apidata name="CacheManagerExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.Caching.CacheManagerExtensions.Get``1(Zhaord.Caching.ICacheManager,System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Zhaord.Caching.CacheManagerExtensions">
      <topicdata name="CacheManagerExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Caching.CacheManagerExtensions" />
      <apidata name="CacheManagerExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Caching.CacheManagerExtensions.Get``1(Zhaord.Caching.ICacheManager,System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.CacheManagerExtensions" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.CacheManagerExtensions.Get``1(Zhaord.Caching.ICacheManager,System.String)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="cacheManager">
          <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Caching.CacheManagerExtensions.Get``1(Zhaord.Caching.ICacheManager,System.String)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.CacheManagerExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Zhaord.Caching.ICache">
      <topicdata group="api" />
      <apidata name="ICache" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:Zhaord.Caching.AspNetCache" ref="true" />
        <type api="T:Zhaord.Caching.RequestCache" ref="true" />
        <type api="T:Zhaord.Caching.StaticCache" ref="true" />
      </implementors>
      <elements>
        <element api="M:Zhaord.Caching.ICache.Contains(System.String)" />
        <element api="P:Zhaord.Caching.ICache.Entries" />
        <element api="M:Zhaord.Caching.ICache.Get(System.String)" />
        <element api="P:Zhaord.Caching.ICache.IsSingleton" />
        <element api="M:Zhaord.Caching.ICache.Remove(System.String)" />
        <element api="M:Zhaord.Caching.ICache.Set(System.String,System.Object,System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Caching.ICache">
      <topicdata name="ICache" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Caching.ICache" />
      <apidata name="ICache" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Caching.ICache.Contains(System.String)" />
        <element api="M:Zhaord.Caching.ICache.Get(System.String)" />
        <element api="M:Zhaord.Caching.ICache.Remove(System.String)" />
        <element api="M:Zhaord.Caching.ICache.Set(System.String,System.Object,System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.ICache" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.Caching.ICache">
      <topicdata name="ICache" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Caching.ICache" />
      <apidata name="ICache" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.Caching.ICache.Entries" />
        <element api="P:Zhaord.Caching.ICache.IsSingleton" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.ICache" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.ICache.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.ICache" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Caching.ICache.Entries">
      <topicdata group="api" />
      <apidata name="Entries" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Entries" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.ICache" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.ICache.Get(System.String)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.ICache" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Caching.ICache.IsSingleton">
      <topicdata group="api" />
      <apidata name="IsSingleton" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsSingleton" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.ICache" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.ICache.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.ICache" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.ICache.Set(System.String,System.Object,System.Nullable{System.Int32})">
      <topicdata group="api" />
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="cacheTime">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.ICache" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.Caching.ICacheManager">
      <topicdata group="api" />
      <apidata name="ICacheManager" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:Zhaord.Caching.CacheManager`1" ref="true" />
        <type api="T:Zhaord.Caching.NullCache" ref="true" />
      </implementors>
      <elements>
        <element api="M:Zhaord.Caching.CacheManagerExtensions.Get``1(Zhaord.Caching.ICacheManager,System.String)" source="extension">
          <apidata name="Get" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="key">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Caching.CacheManagerExtensions.Get``1(Zhaord.Caching.ICacheManager,System.String)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Caching" />
            <type api="T:Zhaord.Caching.CacheManagerExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Caching.ICacheManager.Clear" />
        <element api="M:Zhaord.Caching.ICacheManager.Contains(System.String)" />
        <element api="M:Zhaord.Caching.ICacheManager.EnterWriteLock" />
        <element api="M:Zhaord.Caching.ICacheManager.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})" />
        <element api="M:Zhaord.Caching.ICacheManager.Remove(System.String)" />
        <element api="M:Zhaord.Caching.ICacheManager.RemoveByPattern(System.String)" />
        <element api="M:Zhaord.Caching.ICacheManager.Set(System.String,System.Object,System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Caching.ICacheManager">
      <topicdata name="ICacheManager" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Caching.ICacheManager" />
      <apidata name="ICacheManager" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Caching.CacheManagerExtensions.Get``1(Zhaord.Caching.ICacheManager,System.String)" source="extension">
          <apidata name="Get" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="key">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Caching.CacheManagerExtensions.Get``1(Zhaord.Caching.ICacheManager,System.String)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Caching" />
            <type api="T:Zhaord.Caching.CacheManagerExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Caching.ICacheManager.Clear" />
        <element api="M:Zhaord.Caching.ICacheManager.Contains(System.String)" />
        <element api="M:Zhaord.Caching.ICacheManager.EnterWriteLock" />
        <element api="M:Zhaord.Caching.ICacheManager.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})" />
        <element api="M:Zhaord.Caching.ICacheManager.Remove(System.String)" />
        <element api="M:Zhaord.Caching.ICacheManager.RemoveByPattern(System.String)" />
        <element api="M:Zhaord.Caching.ICacheManager.Set(System.String,System.Object,System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.ICacheManager" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.ICacheManager.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.ICacheManager.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.ICacheManager.EnterWriteLock">
      <topicdata group="api" />
      <apidata name="EnterWriteLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.IDisposable" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.ICacheManager.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="acquirer">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Caching.ICacheManager.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cacheTime" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Caching.ICacheManager.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.ICacheManager.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.ICacheManager.RemoveByPattern(System.String)">
      <topicdata group="api" />
      <apidata name="RemoveByPattern" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="pattern">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.ICacheManager.Set(System.String,System.Object,System.Nullable{System.Int32})">
      <topicdata group="api" />
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="cacheTime" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.Caching.NullCache">
      <topicdata group="api" />
      <apidata name="NullCache" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Caching.CacheManagerExtensions.Get``1(Zhaord.Caching.ICacheManager,System.String)" source="extension">
          <apidata name="Get" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="key">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Caching.CacheManagerExtensions.Get``1(Zhaord.Caching.ICacheManager,System.String)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Caching" />
            <type api="T:Zhaord.Caching.CacheManagerExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Caching.NullCache.#ctor" />
        <element api="M:Zhaord.Caching.NullCache.Clear" />
        <element api="M:Zhaord.Caching.NullCache.Contains(System.String)" />
        <element api="M:Zhaord.Caching.NullCache.EnterWriteLock" />
        <element api="M:Zhaord.Caching.NullCache.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})" />
        <element api="P:Zhaord.Caching.NullCache.Instance" />
        <element api="M:Zhaord.Caching.NullCache.Remove(System.String)" />
        <element api="M:Zhaord.Caching.NullCache.RemoveByPattern(System.String)" />
        <element api="M:Zhaord.Caching.NullCache.Set(System.String,System.Object,System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Caching.NullCache">
      <topicdata name="NullCache" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Caching.NullCache" />
      <apidata name="NullCache" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Caching.CacheManagerExtensions.Get``1(Zhaord.Caching.ICacheManager,System.String)" source="extension">
          <apidata name="Get" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="key">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Caching.CacheManagerExtensions.Get``1(Zhaord.Caching.ICacheManager,System.String)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Caching" />
            <type api="T:Zhaord.Caching.CacheManagerExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Caching.NullCache.Clear" />
        <element api="M:Zhaord.Caching.NullCache.Contains(System.String)" />
        <element api="M:Zhaord.Caching.NullCache.EnterWriteLock" />
        <element api="M:Zhaord.Caching.NullCache.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})" />
        <element api="M:Zhaord.Caching.NullCache.Remove(System.String)" />
        <element api="M:Zhaord.Caching.NullCache.RemoveByPattern(System.String)" />
        <element api="M:Zhaord.Caching.NullCache.Set(System.String,System.Object,System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.NullCache" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.Caching.NullCache">
      <topicdata name="NullCache" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Caching.NullCache" />
      <apidata name="NullCache" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Zhaord.Caching.NullCache.Instance" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.NullCache" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.NullCache.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.NullCache" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.NullCache.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:Zhaord.Caching.ICacheManager.Clear">
          <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.NullCache" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.NullCache.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Zhaord.Caching.ICacheManager.Contains(System.String)">
          <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.NullCache" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.NullCache.EnterWriteLock">
      <topicdata group="api" />
      <apidata name="EnterWriteLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.IDisposable" ref="true" />
      </returns>
      <implements>
        <member api="M:Zhaord.Caching.ICacheManager.EnterWriteLock">
          <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.NullCache" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.NullCache.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="acquirer">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Caching.NullCache.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cacheTime" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Caching.NullCache.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})" />
      </returns>
      <implements>
        <member api="M:Zhaord.Caching.ICacheManager.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})">
          <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.NullCache" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Caching.NullCache.Instance">
      <topicdata group="api" />
      <apidata name="Instance" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Instance" />
      <returns>
        <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.NullCache" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.NullCache.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Zhaord.Caching.ICacheManager.Remove(System.String)">
          <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.NullCache" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.NullCache.RemoveByPattern(System.String)">
      <topicdata group="api" />
      <apidata name="RemoveByPattern" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="pattern">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Zhaord.Caching.ICacheManager.RemoveByPattern(System.String)">
          <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.NullCache" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.NullCache.Set(System.String,System.Object,System.Nullable{System.Int32})">
      <topicdata group="api" />
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="cacheTime" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Zhaord.Caching.ICacheManager.Set(System.String,System.Object,System.Nullable{System.Int32})">
          <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.NullCache" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.Caching.RequestCache">
      <topicdata group="api" />
      <apidata name="RequestCache" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Zhaord.Caching.ICache" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Caching.RequestCache.#ctor(System.Web.HttpContextBase)" />
        <element api="M:Zhaord.Caching.RequestCache.Contains(System.String)" />
        <element api="P:Zhaord.Caching.RequestCache.Entries" />
        <element api="M:Zhaord.Caching.RequestCache.Get(System.String)" />
        <element api="M:Zhaord.Caching.RequestCache.GetItems" />
        <element api="P:Zhaord.Caching.RequestCache.IsSingleton" />
        <element api="M:Zhaord.Caching.RequestCache.Remove(System.String)" />
        <element api="M:Zhaord.Caching.RequestCache.Set(System.String,System.Object,System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Caching.RequestCache">
      <topicdata name="RequestCache" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Caching.RequestCache" />
      <apidata name="RequestCache" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Caching.RequestCache.Contains(System.String)" />
        <element api="M:Zhaord.Caching.RequestCache.Get(System.String)" />
        <element api="M:Zhaord.Caching.RequestCache.GetItems" />
        <element api="M:Zhaord.Caching.RequestCache.Remove(System.String)" />
        <element api="M:Zhaord.Caching.RequestCache.Set(System.String,System.Object,System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.RequestCache" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.Caching.RequestCache">
      <topicdata name="RequestCache" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Caching.RequestCache" />
      <apidata name="RequestCache" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Zhaord.Caching.RequestCache.Entries" />
        <element api="P:Zhaord.Caching.RequestCache.IsSingleton" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.RequestCache" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.RequestCache.#ctor(System.Web.HttpContextBase)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Web.HttpContextBase" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.RequestCache" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.RequestCache.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Zhaord.Caching.ICache.Contains(System.String)">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.RequestCache" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Caching.RequestCache.Entries">
      <topicdata group="api" />
      <apidata name="Entries" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Entries" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:Zhaord.Caching.ICache.Entries">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.RequestCache" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.RequestCache.Get(System.String)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:Zhaord.Caching.ICache.Get(System.String)">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.RequestCache" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.RequestCache.GetItems">
      <topicdata group="api" />
      <apidata name="GetItems" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.IDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.RequestCache" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Caching.RequestCache.IsSingleton">
      <topicdata group="api" />
      <apidata name="IsSingleton" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsSingleton" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Zhaord.Caching.ICache.IsSingleton">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.RequestCache" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.RequestCache.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Zhaord.Caching.ICache.Remove(System.String)">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.RequestCache" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.RequestCache.Set(System.String,System.Object,System.Nullable{System.Int32})">
      <topicdata group="api" />
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="cacheTime">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Zhaord.Caching.ICache.Set(System.String,System.Object,System.Nullable{System.Int32})">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.RequestCache" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.Caching.StaticCache">
      <topicdata group="api" />
      <apidata name="StaticCache" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Zhaord.Caching.ICache" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Caching.StaticCache.#ctor" />
        <element api="P:Zhaord.Caching.StaticCache.Cache" />
        <element api="M:Zhaord.Caching.StaticCache.Contains(System.String)" />
        <element api="P:Zhaord.Caching.StaticCache.Entries" />
        <element api="M:Zhaord.Caching.StaticCache.Get(System.String)" />
        <element api="P:Zhaord.Caching.StaticCache.IsSingleton" />
        <element api="M:Zhaord.Caching.StaticCache.Remove(System.String)" />
        <element api="M:Zhaord.Caching.StaticCache.Set(System.String,System.Object,System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Caching.StaticCache">
      <topicdata name="StaticCache" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Caching.StaticCache" />
      <apidata name="StaticCache" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Caching.StaticCache.Contains(System.String)" />
        <element api="M:Zhaord.Caching.StaticCache.Get(System.String)" />
        <element api="M:Zhaord.Caching.StaticCache.Remove(System.String)" />
        <element api="M:Zhaord.Caching.StaticCache.Set(System.String,System.Object,System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.StaticCache" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.Caching.StaticCache">
      <topicdata name="StaticCache" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Caching.StaticCache" />
      <apidata name="StaticCache" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Zhaord.Caching.StaticCache.Cache" />
        <element api="P:Zhaord.Caching.StaticCache.Entries" />
        <element api="P:Zhaord.Caching.StaticCache.IsSingleton" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.StaticCache" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.StaticCache.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.StaticCache" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Caching.StaticCache.Cache">
      <topicdata group="api" />
      <apidata name="Cache" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Cache" />
      <returns>
        <type api="T:System.Runtime.Caching.ObjectCache" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.StaticCache" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.StaticCache.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Zhaord.Caching.ICache.Contains(System.String)">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.StaticCache" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Caching.StaticCache.Entries">
      <topicdata group="api" />
      <apidata name="Entries" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Entries" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:Zhaord.Caching.ICache.Entries">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.StaticCache" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.StaticCache.Get(System.String)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:Zhaord.Caching.ICache.Get(System.String)">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.StaticCache" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Caching.StaticCache.IsSingleton">
      <topicdata group="api" />
      <apidata name="IsSingleton" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsSingleton" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Zhaord.Caching.ICache.IsSingleton">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.StaticCache" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.StaticCache.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Zhaord.Caching.ICache.Remove(System.String)">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.StaticCache" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Caching.StaticCache.Set(System.String,System.Object,System.Nullable{System.Int32})">
      <topicdata group="api" />
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="cacheTime">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Zhaord.Caching.ICache.Set(System.String,System.Object,System.Nullable{System.Int32})">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.StaticCache" ref="true" />
      </containers>
    </api>
    <api id="N:Zhaord.Collections">
      <topicdata group="api" />
      <apidata name="Zhaord.Collections" group="namespace" />
      <elements>
        <element api="T:Zhaord.Collections.Multimap`2" />
        <element api="T:Zhaord.Collections.QueryString" />
        <element api="T:Zhaord.Collections.ITopologicSortable`1" />
        <element api="T:Zhaord.Collections.TopologicalSortExtensions" />
        <element api="T:Zhaord.Collections.CyclicDependencyException" />
        <element api="T:Zhaord.Collections.TreeNode`1" />
      </elements>
    </api>
    <api id="T:Zhaord.Collections.CyclicDependencyException">
      <topicdata group="api" />
      <apidata name="CyclicDependencyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.MiscExtensions.Dump(System.Exception)" source="extension">
          <apidata name="Dump" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.MiscExtensions.ToAllMessages(System.Exception)" source="extension">
          <apidata name="ToAllMessages" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.Collections.CyclicDependencyException.#ctor">
          <element api="M:Zhaord.Collections.CyclicDependencyException.#ctor" />
          <element api="M:Zhaord.Collections.CyclicDependencyException.#ctor(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Collections.CyclicDependencyException">
      <topicdata name="CyclicDependencyException" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Collections.CyclicDependencyException" />
      <apidata name="CyclicDependencyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.MiscExtensions.Dump(System.Exception)" source="extension">
          <apidata name="Dump" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.MiscExtensions.ToAllMessages(System.Exception)" source="extension">
          <apidata name="ToAllMessages" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.CyclicDependencyException" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.Collections.CyclicDependencyException">
      <topicdata name="CyclicDependencyException" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Collections.CyclicDependencyException" />
      <apidata name="CyclicDependencyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.CyclicDependencyException" />
      </containers>
    </api>
    <api id="Events.T:Zhaord.Collections.CyclicDependencyException">
      <topicdata name="CyclicDependencyException" group="list" subgroup="Events" typeTopicId="T:Zhaord.Collections.CyclicDependencyException" />
      <apidata name="CyclicDependencyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.CyclicDependencyException" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Collections.CyclicDependencyException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Zhaord.Collections.CyclicDependencyException.#ctor" />
        <element api="M:Zhaord.Collections.CyclicDependencyException.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.CyclicDependencyException" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.CyclicDependencyException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.Collections.CyclicDependencyException.#ctor" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.CyclicDependencyException" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.CyclicDependencyException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.Collections.CyclicDependencyException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.CyclicDependencyException" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.Collections.ITopologicSortable`1">
      <topicdata group="api" />
      <apidata name="ITopologicSortable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TKey" />
      </templates>
      <elements>
        <element api="P:Zhaord.Collections.ITopologicSortable`1.DependsOn" />
        <element api="P:Zhaord.Collections.ITopologicSortable`1.Key" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.Collections.ITopologicSortable`1">
      <topicdata name="ITopologicSortable" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Collections.ITopologicSortable`1" />
      <apidata name="ITopologicSortable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TKey" />
      </templates>
      <elements>
        <element api="P:Zhaord.Collections.ITopologicSortable`1.DependsOn" />
        <element api="P:Zhaord.Collections.ITopologicSortable`1.Key" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.ITopologicSortable`1" />
      </containers>
    </api>
    <api id="P:Zhaord.Collections.ITopologicSortable`1.DependsOn">
      <topicdata group="api" />
      <apidata name="DependsOn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DependsOn" />
      <returns>
        <arrayOf rank="1">
          <template name="TKey" index="0" api="T:Zhaord.Collections.ITopologicSortable`1" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.ITopologicSortable`1" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Collections.ITopologicSortable`1.Key">
      <topicdata group="api" />
      <apidata name="Key" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Key" />
      <returns>
        <template name="TKey" index="0" api="T:Zhaord.Collections.ITopologicSortable`1" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.ITopologicSortable`1" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.Collections.Multimap`2">
      <topicdata group="api" />
      <apidata name="Multimap" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.Chunk``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Chunk" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="chunkSize" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>100</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                          <specialization>
                            <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                          </specialization>
                        </type>
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" source="extension" overload="true">
          <apidata name="Each" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                      <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                        <specialization>
                          <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Each" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                      <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                        <specialization>
                          <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.AsReadOnly``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsReadOnly" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                    <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                      <specialization>
                        <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension">
          <apidata name="ToMultimap" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TValue" index="2" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                      <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                        <specialization>
                          <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="valueSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                      <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                        <specialization>
                          <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TValue" index="2" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Zhaord.Collections.Multimap`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TValue" index="2" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.CastValid``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="CastValid" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.CastValid``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.Collections.Multimap`2.#ctor">
          <element api="M:Zhaord.Collections.Multimap`2.#ctor" />
          <element api="M:Zhaord.Collections.Multimap`2.#ctor(System.Func{System.Collections.Generic.ICollection{`1}})" />
          <element api="M:Zhaord.Collections.Multimap`2.#ctor(System.Collections.Generic.IDictionary{`0,System.Collections.Generic.ICollection{`1}},System.Boolean)" />
        </element>
        <element api="M:Zhaord.Collections.Multimap`2.Add(`0,`1)" />
        <element api="M:Zhaord.Collections.Multimap`2.AddRange(`0,System.Collections.Generic.IEnumerable{`1})" />
        <element api="M:Zhaord.Collections.Multimap`2.Clear" />
        <element api="M:Zhaord.Collections.Multimap`2.ContainsKey(`0)" />
        <element api="M:Zhaord.Collections.Multimap`2.ContainsValue(`0,`1)" />
        <element api="P:Zhaord.Collections.Multimap`2.Count" />
        <element api="M:Zhaord.Collections.Multimap`2.CreateFromLookup(System.Linq.ILookup{`0,`1})" />
        <element api="M:Zhaord.Collections.Multimap`2.Find(`0,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})" />
        <element api="M:Zhaord.Collections.Multimap`2.GetEnumerator" />
        <element api="P:Zhaord.Collections.Multimap`2.Item(`0)" />
        <element api="P:Zhaord.Collections.Multimap`2.Keys" />
        <element api="M:Zhaord.Collections.Multimap`2.Remove(`0,`1)" />
        <element api="M:Zhaord.Collections.Multimap`2.RemoveAll(`0)" />
        <element api="M:Zhaord.Collections.Multimap`2.ThreadSafe" />
        <element api="P:Zhaord.Collections.Multimap`2.TotalValueCount" />
        <element api="P:Zhaord.Collections.Multimap`2.Values" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Collections.Multimap`2">
      <topicdata name="Multimap" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Collections.Multimap`2" />
      <apidata name="Multimap" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.Chunk``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Chunk" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="chunkSize" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>100</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                          <specialization>
                            <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                          </specialization>
                        </type>
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" source="extension" overload="true">
          <apidata name="Each" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                      <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                        <specialization>
                          <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Each" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                      <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                        <specialization>
                          <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.AsReadOnly``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsReadOnly" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                    <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                      <specialization>
                        <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension">
          <apidata name="ToMultimap" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TValue" index="2" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                      <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                        <specialization>
                          <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="valueSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                      <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                        <specialization>
                          <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TValue" index="2" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Zhaord.Collections.Multimap`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TValue" index="2" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.CastValid``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="CastValid" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.CastValid``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Collections.Multimap`2.Add(`0,`1)" />
        <element api="M:Zhaord.Collections.Multimap`2.AddRange(`0,System.Collections.Generic.IEnumerable{`1})" />
        <element api="M:Zhaord.Collections.Multimap`2.Clear" />
        <element api="M:Zhaord.Collections.Multimap`2.ContainsKey(`0)" />
        <element api="M:Zhaord.Collections.Multimap`2.ContainsValue(`0,`1)" />
        <element api="M:Zhaord.Collections.Multimap`2.CreateFromLookup(System.Linq.ILookup{`0,`1})" />
        <element api="M:Zhaord.Collections.Multimap`2.Find(`0,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})" />
        <element api="M:Zhaord.Collections.Multimap`2.GetEnumerator" />
        <element api="M:Zhaord.Collections.Multimap`2.Remove(`0,`1)" />
        <element api="M:Zhaord.Collections.Multimap`2.RemoveAll(`0)" />
        <element api="M:Zhaord.Collections.Multimap`2.ThreadSafe" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.Collections.Multimap`2">
      <topicdata name="Multimap" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Collections.Multimap`2" />
      <apidata name="Multimap" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Zhaord.Collections.Multimap`2.Count" />
        <element api="P:Zhaord.Collections.Multimap`2.Item(`0)" />
        <element api="P:Zhaord.Collections.Multimap`2.Keys" />
        <element api="P:Zhaord.Collections.Multimap`2.TotalValueCount" />
        <element api="P:Zhaord.Collections.Multimap`2.Values" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Collections.Multimap`2.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Zhaord.Collections.Multimap`2.#ctor" />
        <element api="M:Zhaord.Collections.Multimap`2.#ctor(System.Func{System.Collections.Generic.ICollection{`1}})" />
        <element api="M:Zhaord.Collections.Multimap`2.#ctor(System.Collections.Generic.IDictionary{`0,System.Collections.Generic.ICollection{`1}},System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.Multimap`2.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.Collections.Multimap`2.#ctor" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.Multimap`2.#ctor(System.Collections.Generic.IDictionary{`0,System.Collections.Generic.ICollection{`1}},System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:Zhaord.Collections.Multimap`2.#ctor" />
      <parameters>
        <parameter name="dictionary">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="isReadonly">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.Multimap`2.#ctor(System.Func{System.Collections.Generic.ICollection{`1}})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.Collections.Multimap`2.#ctor" />
      <parameters>
        <parameter name="listCreator">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.Multimap`2.Add(`0,`1)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="key">
          <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
        </parameter>
        <parameter name="value">
          <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.Multimap`2.AddRange(`0,System.Collections.Generic.IEnumerable{`1})">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="key">
          <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
        </parameter>
        <parameter name="values">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.Multimap`2.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.Multimap`2.ContainsKey(`0)">
      <topicdata group="api" />
      <apidata name="ContainsKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="key">
          <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.Multimap`2.ContainsValue(`0,`1)">
      <topicdata group="api" />
      <apidata name="ContainsValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="key">
          <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
        </parameter>
        <parameter name="value">
          <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Collections.Multimap`2.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.Multimap`2.CreateFromLookup(System.Linq.ILookup{`0,`1})">
      <topicdata group="api" />
      <apidata name="CreateFromLookup" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.ILookup`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
              <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Zhaord.Collections.Multimap`2" ref="true">
          <specialization>
            <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
            <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.Multimap`2.Find(`0,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.Multimap`2.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                  <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                    <specialization>
                      <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Collections.Multimap`2.Item(`0)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="key">
          <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Collections.Multimap`2.Keys">
      <topicdata group="api" />
      <apidata name="Keys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Keys" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.Multimap`2.Remove(`0,`1)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="key">
          <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
        </parameter>
        <parameter name="value">
          <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.Multimap`2.RemoveAll(`0)">
      <topicdata group="api" />
      <apidata name="RemoveAll" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="key">
          <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.Multimap`2.ThreadSafe">
      <topicdata group="api" />
      <apidata name="ThreadSafe" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Zhaord.Collections.Multimap`2" ref="true">
          <specialization>
            <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
            <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Collections.Multimap`2.TotalValueCount">
      <topicdata group="api" />
      <apidata name="TotalValueCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TotalValueCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Collections.Multimap`2.Values">
      <topicdata group="api" />
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Values" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.ICollection`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.Collections.QueryString">
      <topicdata group="api" />
      <apidata name="QueryString" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Zhaord.Collections.QueryString.Add">
          <element api="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)">
            <apidata name="Add" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="c">
                <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
            </containers>
          </element>
          <element api="M:Zhaord.Collections.QueryString.Add(System.String,System.String)" />
          <element api="M:Zhaord.Collections.QueryString.Add(System.String,System.String,System.Boolean)" />
        </element>
        <element api="M:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays">
          <apidata name="InvalidateCachedArrays" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameValueCollection.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dest">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameValueCollection.HasKeys">
          <apidata name="HasKeys" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.Collections.QueryString.Get">
          <element api="M:System.Collections.Specialized.NameValueCollection.Get(System.String)">
            <apidata name="Get" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="name">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.String" ref="true" />
            </returns>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
            </containers>
          </element>
          <element api="M:System.Collections.Specialized.NameValueCollection.Get(System.Int32)">
            <apidata name="Get" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="index">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.String" ref="true" />
            </returns>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Zhaord.Collections.QueryString.GetValues">
          <element api="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)">
            <apidata name="GetValues" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="name">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </returns>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
            </containers>
          </element>
          <element api="M:System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)">
            <apidata name="GetValues" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="index">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <returns>
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </returns>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)">
          <apidata name="Set" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)">
          <apidata name="GetKey" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Specialized.NameValueCollection.AllKeys">
          <apidata name="AllKeys" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_AllKeys" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.String" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)">
          <apidata name="OnDeserialization" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sender">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)">
              <type api="T:System.Runtime.Serialization.IDeserializationCallback" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys">
          <apidata name="BaseHasKeys" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)">
          <apidata name="BaseAdd" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)">
          <apidata name="BaseRemove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)">
          <apidata name="BaseRemoveAt" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseClear">
          <apidata name="BaseClear" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.Collections.QueryString.BaseGet">
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)">
            <apidata name="BaseGet" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="name">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Object" ref="true" />
            </returns>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
            </containers>
          </element>
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)">
            <apidata name="BaseGet" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="index">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Object" ref="true" />
            </returns>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Zhaord.Collections.QueryString.BaseSet">
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)">
            <apidata name="BaseSet" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="name">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
            </containers>
          </element>
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)">
            <apidata name="BaseSet" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="index">
                <type api="T:System.Int32" ref="false" />
              </parameter>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)">
          <apidata name="BaseGetKey" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Collections.IEnumerable.GetEnumerator">
              <type api="T:System.Collections.IEnumerable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys">
          <apidata name="BaseGetAllKeys" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.String" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.Collections.QueryString.BaseGetAllValues">
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues">
            <apidata name="BaseGetAllValues" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <returns>
              <arrayOf rank="1">
                <type api="T:System.Object" ref="true" />
              </arrayOf>
            </returns>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
            </containers>
          </element>
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)">
            <apidata name="BaseGetAllValues" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="type">
                <type api="T:System.Type" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <arrayOf rank="1">
                <type api="T:System.Object" ref="true" />
              </arrayOf>
            </returns>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
            </containers>
          </element>
        </element>
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly">
          <apidata name="IsReadOnly" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IsReadOnly" />
          <setter name="set_IsReadOnly" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Count" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.Count">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.Keys">
          <apidata name="Keys" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Keys" />
          <returns>
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" ref="true">
              <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
            </type>
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.AddRange(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection)" source="extension">
          <apidata name="AddRange" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="other">
              <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.Collections.QueryString.#ctor">
          <element api="M:Zhaord.Collections.QueryString.#ctor" />
          <element api="M:Zhaord.Collections.QueryString.#ctor(System.String)" />
        </element>
        <element api="M:Zhaord.Collections.QueryString.Contains(System.String)" />
        <element api="P:Zhaord.Collections.QueryString.Current" />
        <element api="M:Zhaord.Collections.QueryString.ExtractQuerystring(System.String)" />
        <element api="M:Zhaord.Collections.QueryString.FillFromString(System.String)" />
        <element api="M:Zhaord.Collections.QueryString.FromCurrent" />
        <element api="Overload:Zhaord.Collections.QueryString.Item">
          <element api="P:Zhaord.Collections.QueryString.Item(System.Int32)" />
          <element api="P:Zhaord.Collections.QueryString.Item(System.String)" />
        </element>
        <element api="M:Zhaord.Collections.QueryString.Remove(System.String)" />
        <element api="M:Zhaord.Collections.QueryString.Reset" />
        <element api="M:Zhaord.Collections.QueryString.ToString" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Collections.QueryString">
      <topicdata name="QueryString" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Collections.QueryString" />
      <apidata name="QueryString" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:Zhaord.Collections.QueryString.Add">
          <element api="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)">
            <apidata name="Add" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="c">
                <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
            </containers>
          </element>
          <element api="M:Zhaord.Collections.QueryString.Add(System.String,System.String)" />
          <element api="M:Zhaord.Collections.QueryString.Add(System.String,System.String,System.Boolean)" />
        </element>
        <element api="M:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays">
          <apidata name="InvalidateCachedArrays" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameValueCollection.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dest">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameValueCollection.HasKeys">
          <apidata name="HasKeys" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.Collections.QueryString.Get">
          <element api="M:System.Collections.Specialized.NameValueCollection.Get(System.String)">
            <apidata name="Get" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="name">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.String" ref="true" />
            </returns>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
            </containers>
          </element>
          <element api="M:System.Collections.Specialized.NameValueCollection.Get(System.Int32)">
            <apidata name="Get" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="index">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.String" ref="true" />
            </returns>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Zhaord.Collections.QueryString.GetValues">
          <element api="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)">
            <apidata name="GetValues" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="name">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </returns>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
            </containers>
          </element>
          <element api="M:System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)">
            <apidata name="GetValues" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="index">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <returns>
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </returns>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)">
          <apidata name="Set" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)">
          <apidata name="GetKey" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)">
          <apidata name="OnDeserialization" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sender">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)">
              <type api="T:System.Runtime.Serialization.IDeserializationCallback" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys">
          <apidata name="BaseHasKeys" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)">
          <apidata name="BaseAdd" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)">
          <apidata name="BaseRemove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)">
          <apidata name="BaseRemoveAt" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseClear">
          <apidata name="BaseClear" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.Collections.QueryString.BaseGet">
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)">
            <apidata name="BaseGet" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="name">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Object" ref="true" />
            </returns>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
            </containers>
          </element>
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)">
            <apidata name="BaseGet" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="index">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Object" ref="true" />
            </returns>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Zhaord.Collections.QueryString.BaseSet">
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)">
            <apidata name="BaseSet" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="name">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
            </containers>
          </element>
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)">
            <apidata name="BaseSet" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="index">
                <type api="T:System.Int32" ref="false" />
              </parameter>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)">
          <apidata name="BaseGetKey" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Collections.IEnumerable.GetEnumerator">
              <type api="T:System.Collections.IEnumerable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys">
          <apidata name="BaseGetAllKeys" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.String" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.Collections.QueryString.BaseGetAllValues">
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues">
            <apidata name="BaseGetAllValues" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <returns>
              <arrayOf rank="1">
                <type api="T:System.Object" ref="true" />
              </arrayOf>
            </returns>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
            </containers>
          </element>
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)">
            <apidata name="BaseGetAllValues" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="type">
                <type api="T:System.Type" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <arrayOf rank="1">
                <type api="T:System.Object" ref="true" />
              </arrayOf>
            </returns>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.AddRange(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection)" source="extension">
          <apidata name="AddRange" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="other">
              <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Collections.QueryString.Contains(System.String)" />
        <element api="M:Zhaord.Collections.QueryString.ExtractQuerystring(System.String)" />
        <element api="M:Zhaord.Collections.QueryString.FillFromString(System.String)" />
        <element api="M:Zhaord.Collections.QueryString.FromCurrent" />
        <element api="M:Zhaord.Collections.QueryString.Remove(System.String)" />
        <element api="M:Zhaord.Collections.QueryString.Reset" />
        <element api="M:Zhaord.Collections.QueryString.ToString" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.Collections.QueryString">
      <topicdata name="QueryString" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Collections.QueryString" />
      <apidata name="QueryString" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.Specialized.NameValueCollection.AllKeys">
          <apidata name="AllKeys" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_AllKeys" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.String" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly">
          <apidata name="IsReadOnly" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IsReadOnly" />
          <setter name="set_IsReadOnly" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Count" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.Count">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.Keys">
          <apidata name="Keys" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Keys" />
          <returns>
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" ref="true">
              <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
            </type>
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:Zhaord.Collections.QueryString.Current" />
        <element api="Overload:Zhaord.Collections.QueryString.Item">
          <element api="P:Zhaord.Collections.QueryString.Item(System.Int32)" />
          <element api="P:Zhaord.Collections.QueryString.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Collections.QueryString.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)">
          <apidata name="Add" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="c">
              <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Collections.QueryString.Add(System.String,System.String)" />
        <element api="M:Zhaord.Collections.QueryString.Add(System.String,System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Collections.QueryString.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Zhaord.Collections.QueryString.#ctor" />
        <element api="M:Zhaord.Collections.QueryString.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Collections.QueryString.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" allMembersTopicId="" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:Zhaord.Collections.QueryString.Item(System.Int32)" />
        <element api="P:Zhaord.Collections.QueryString.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.QueryString.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.Collections.QueryString.#ctor" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.QueryString.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.Collections.QueryString.#ctor" />
      <parameters>
        <parameter name="queryString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.QueryString.Add(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.Collections.QueryString.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.QueryString.Add(System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.Collections.QueryString.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="isUnique">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.QueryString.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Collections.QueryString.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.QueryString.ExtractQuerystring(System.String)">
      <topicdata group="api" />
      <apidata name="ExtractQuerystring" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.QueryString.FillFromString(System.String)">
      <topicdata group="api" />
      <apidata name="FillFromString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.QueryString.FromCurrent">
      <topicdata group="api" />
      <apidata name="FromCurrent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Collections.QueryString.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" overload="Overload:Zhaord.Collections.QueryString.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Collections.QueryString.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" overload="Overload:Zhaord.Collections.QueryString.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.QueryString.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.QueryString.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.QueryString.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.Collections.TopologicalSortExtensions">
      <topicdata group="api" />
      <apidata name="TopologicalSortExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Zhaord.Collections.TopologicalSortExtensions.SortIndexesTopological">
          <element api="M:Zhaord.Collections.TopologicalSortExtensions.SortIndexesTopological``1(Zhaord.Collections.ITopologicSortable{``0}[])" />
          <element api="M:Zhaord.Collections.TopologicalSortExtensions.SortIndexesTopological``1(Zhaord.Collections.ITopologicSortable{``0}[],System.Collections.Generic.IEqualityComparer{``0})" />
        </element>
        <element api="Overload:Zhaord.Collections.TopologicalSortExtensions.SortTopological">
          <element api="M:Zhaord.Collections.TopologicalSortExtensions.SortTopological``1(Zhaord.Collections.ITopologicSortable{``0}[])" />
          <element api="M:Zhaord.Collections.TopologicalSortExtensions.SortTopological``1(Zhaord.Collections.ITopologicSortable{``0}[],System.Collections.Generic.IEqualityComparer{``0})" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Zhaord.Collections.TopologicalSortExtensions">
      <topicdata name="TopologicalSortExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Collections.TopologicalSortExtensions" />
      <apidata name="TopologicalSortExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:Zhaord.Collections.TopologicalSortExtensions.SortIndexesTopological">
          <element api="M:Zhaord.Collections.TopologicalSortExtensions.SortIndexesTopological``1(Zhaord.Collections.ITopologicSortable{``0}[])" />
          <element api="M:Zhaord.Collections.TopologicalSortExtensions.SortIndexesTopological``1(Zhaord.Collections.ITopologicSortable{``0}[],System.Collections.Generic.IEqualityComparer{``0})" />
        </element>
        <element api="Overload:Zhaord.Collections.TopologicalSortExtensions.SortTopological">
          <element api="M:Zhaord.Collections.TopologicalSortExtensions.SortTopological``1(Zhaord.Collections.ITopologicSortable{``0}[])" />
          <element api="M:Zhaord.Collections.TopologicalSortExtensions.SortTopological``1(Zhaord.Collections.ITopologicSortable{``0}[],System.Collections.Generic.IEqualityComparer{``0})" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TopologicalSortExtensions" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Collections.TopologicalSortExtensions.SortIndexesTopological">
      <topicdata name="SortIndexesTopological" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="SortIndexesTopological" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Collections.TopologicalSortExtensions.SortIndexesTopological``1(Zhaord.Collections.ITopologicSortable{``0}[])" />
        <element api="M:Zhaord.Collections.TopologicalSortExtensions.SortIndexesTopological``1(Zhaord.Collections.ITopologicSortable{``0}[],System.Collections.Generic.IEqualityComparer{``0})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TopologicalSortExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Collections.TopologicalSortExtensions.SortTopological">
      <topicdata name="SortTopological" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="SortTopological" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Collections.TopologicalSortExtensions.SortTopological``1(Zhaord.Collections.ITopologicSortable{``0}[])" />
        <element api="M:Zhaord.Collections.TopologicalSortExtensions.SortTopological``1(Zhaord.Collections.ITopologicSortable{``0}[],System.Collections.Generic.IEqualityComparer{``0})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TopologicalSortExtensions" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.TopologicalSortExtensions.SortIndexesTopological``1(Zhaord.Collections.ITopologicSortable{``0}[])">
      <topicdata group="api" />
      <apidata name="SortIndexesTopological" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Collections.TopologicalSortExtensions.SortIndexesTopological" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="items">
          <arrayOf rank="1">
            <type api="T:Zhaord.Collections.ITopologicSortable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="M:Zhaord.Collections.TopologicalSortExtensions.SortIndexesTopological``1(Zhaord.Collections.ITopologicSortable{``0}[])" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Int32" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TopologicalSortExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Collections.TopologicalSortExtensions.SortIndexesTopological``1(Zhaord.Collections.ITopologicSortable{``0}[],System.Collections.Generic.IEqualityComparer{``0})">
      <topicdata group="api" />
      <apidata name="SortIndexesTopological" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Collections.TopologicalSortExtensions.SortIndexesTopological" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="items">
          <arrayOf rank="1">
            <type api="T:Zhaord.Collections.ITopologicSortable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="M:Zhaord.Collections.TopologicalSortExtensions.SortIndexesTopological``1(Zhaord.Collections.ITopologicSortable{``0}[],System.Collections.Generic.IEqualityComparer{``0})" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Collections.TopologicalSortExtensions.SortIndexesTopological``1(Zhaord.Collections.ITopologicSortable{``0}[],System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Int32" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TopologicalSortExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Collections.TopologicalSortExtensions.SortTopological``1(Zhaord.Collections.ITopologicSortable{``0}[])">
      <topicdata group="api" />
      <apidata name="SortTopological" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Collections.TopologicalSortExtensions.SortTopological" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="items">
          <arrayOf rank="1">
            <type api="T:Zhaord.Collections.ITopologicSortable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="M:Zhaord.Collections.TopologicalSortExtensions.SortTopological``1(Zhaord.Collections.ITopologicSortable{``0}[])" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:Zhaord.Collections.ITopologicSortable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Collections.TopologicalSortExtensions.SortTopological``1(Zhaord.Collections.ITopologicSortable{``0}[])" />
            </specialization>
          </type>
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TopologicalSortExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Collections.TopologicalSortExtensions.SortTopological``1(Zhaord.Collections.ITopologicSortable{``0}[],System.Collections.Generic.IEqualityComparer{``0})">
      <topicdata group="api" />
      <apidata name="SortTopological" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Collections.TopologicalSortExtensions.SortTopological" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="items">
          <arrayOf rank="1">
            <type api="T:Zhaord.Collections.ITopologicSortable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="M:Zhaord.Collections.TopologicalSortExtensions.SortTopological``1(Zhaord.Collections.ITopologicSortable{``0}[],System.Collections.Generic.IEqualityComparer{``0})" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Collections.TopologicalSortExtensions.SortTopological``1(Zhaord.Collections.ITopologicSortable{``0}[],System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:Zhaord.Collections.ITopologicSortable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Collections.TopologicalSortExtensions.SortTopological``1(Zhaord.Collections.ITopologicSortable{``0}[],System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TopologicalSortExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Zhaord.Collections.TreeNode`1">
      <topicdata group="api" />
      <apidata name="TreeNode" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:Zhaord.ICloneable`1" ref="true">
          <specialization>
            <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Collections.TreeNode`1.#ctor(`0)" />
        <element api="Overload:Zhaord.Collections.TreeNode`1.Append">
          <element api="M:Zhaord.Collections.TreeNode`1.Append(`0)" />
          <element api="M:Zhaord.Collections.TreeNode`1.Append(Zhaord.Collections.TreeNode{`0},System.Boolean)" />
        </element>
        <element api="M:Zhaord.Collections.TreeNode`1.AppendChildrenOf(Zhaord.Collections.TreeNode{`0})" />
        <element api="Overload:Zhaord.Collections.TreeNode`1.AppendMany">
          <element api="M:Zhaord.Collections.TreeNode`1.AppendMany(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Zhaord.Collections.TreeNode`1.AppendMany(`0[])" />
          <element api="M:Zhaord.Collections.TreeNode`1.AppendMany(System.Collections.Generic.IEnumerable{Zhaord.Collections.TreeNode{`0}})" />
        </element>
        <element api="P:Zhaord.Collections.TreeNode`1.Children" />
        <element api="M:Zhaord.Collections.TreeNode`1.Clear" />
        <element api="Overload:Zhaord.Collections.TreeNode`1.Clone">
          <element api="M:Zhaord.Collections.TreeNode`1.Clone" />
          <element api="M:Zhaord.Collections.TreeNode`1.Clone(System.Boolean)" />
        </element>
        <element api="P:Zhaord.Collections.TreeNode`1.Depth" />
        <element api="M:Zhaord.Collections.TreeNode`1.Find(`0)" />
        <element api="P:Zhaord.Collections.TreeNode`1.FirstChild" />
        <element api="Overload:Zhaord.Collections.TreeNode`1.Flatten">
          <element api="M:Zhaord.Collections.TreeNode`1.Flatten(System.Boolean)" />
          <element api="M:Zhaord.Collections.TreeNode`1.Flatten(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)" />
        </element>
        <element api="P:Zhaord.Collections.TreeNode`1.HasChildren" />
        <element api="M:Zhaord.Collections.TreeNode`1.InsertAfter(Zhaord.Collections.TreeNode{`0})" />
        <element api="M:Zhaord.Collections.TreeNode`1.InsertBefore(Zhaord.Collections.TreeNode{`0})" />
        <element api="P:Zhaord.Collections.TreeNode`1.IsLeaf" />
        <element api="P:Zhaord.Collections.TreeNode`1.IsRoot" />
        <element api="P:Zhaord.Collections.TreeNode`1.Item(System.Int32)" />
        <element api="P:Zhaord.Collections.TreeNode`1.LastChild" />
        <element api="P:Zhaord.Collections.TreeNode`1.LeafNodes" />
        <element api="P:Zhaord.Collections.TreeNode`1.Next" />
        <element api="P:Zhaord.Collections.TreeNode`1.NonLeafNodes" />
        <element api="P:Zhaord.Collections.TreeNode`1.Parent" />
        <element api="M:Zhaord.Collections.TreeNode`1.Prepend(`0)" />
        <element api="P:Zhaord.Collections.TreeNode`1.Previous" />
        <element api="M:Zhaord.Collections.TreeNode`1.RemoveNode(Zhaord.Collections.TreeNode{`0})" />
        <element api="P:Zhaord.Collections.TreeNode`1.Root" />
        <element api="M:Zhaord.Collections.TreeNode`1.SelectNode(System.Linq.Expressions.Expression{System.Func{Zhaord.Collections.TreeNode{`0},System.Boolean}})" />
        <element api="M:Zhaord.Collections.TreeNode`1.SelectNodes(System.Linq.Expressions.Expression{System.Func{Zhaord.Collections.TreeNode{`0},System.Boolean}})" />
        <element api="M:Zhaord.Collections.TreeNode`1.Traverse(System.Action{`0})" />
        <element api="M:Zhaord.Collections.TreeNode`1.TraverseTree(System.Action{Zhaord.Collections.TreeNode{`0}})" />
        <element api="P:Zhaord.Collections.TreeNode`1.Value" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Collections.TreeNode`1">
      <topicdata name="TreeNode" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Collections.TreeNode`1" />
      <apidata name="TreeNode" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.Collections.TreeNode`1.Append">
          <element api="M:Zhaord.Collections.TreeNode`1.Append(`0)" />
          <element api="M:Zhaord.Collections.TreeNode`1.Append(Zhaord.Collections.TreeNode{`0},System.Boolean)" />
        </element>
        <element api="M:Zhaord.Collections.TreeNode`1.AppendChildrenOf(Zhaord.Collections.TreeNode{`0})" />
        <element api="Overload:Zhaord.Collections.TreeNode`1.AppendMany">
          <element api="M:Zhaord.Collections.TreeNode`1.AppendMany(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Zhaord.Collections.TreeNode`1.AppendMany(`0[])" />
          <element api="M:Zhaord.Collections.TreeNode`1.AppendMany(System.Collections.Generic.IEnumerable{Zhaord.Collections.TreeNode{`0}})" />
        </element>
        <element api="M:Zhaord.Collections.TreeNode`1.Clear" />
        <element api="Overload:Zhaord.Collections.TreeNode`1.Clone">
          <element api="M:Zhaord.Collections.TreeNode`1.Clone" />
          <element api="M:Zhaord.Collections.TreeNode`1.Clone(System.Boolean)" />
        </element>
        <element api="M:Zhaord.Collections.TreeNode`1.Find(`0)" />
        <element api="Overload:Zhaord.Collections.TreeNode`1.Flatten">
          <element api="M:Zhaord.Collections.TreeNode`1.Flatten(System.Boolean)" />
          <element api="M:Zhaord.Collections.TreeNode`1.Flatten(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)" />
        </element>
        <element api="M:Zhaord.Collections.TreeNode`1.InsertAfter(Zhaord.Collections.TreeNode{`0})" />
        <element api="M:Zhaord.Collections.TreeNode`1.InsertBefore(Zhaord.Collections.TreeNode{`0})" />
        <element api="M:Zhaord.Collections.TreeNode`1.Prepend(`0)" />
        <element api="M:Zhaord.Collections.TreeNode`1.RemoveNode(Zhaord.Collections.TreeNode{`0})" />
        <element api="M:Zhaord.Collections.TreeNode`1.SelectNode(System.Linq.Expressions.Expression{System.Func{Zhaord.Collections.TreeNode{`0},System.Boolean}})" />
        <element api="M:Zhaord.Collections.TreeNode`1.SelectNodes(System.Linq.Expressions.Expression{System.Func{Zhaord.Collections.TreeNode{`0},System.Boolean}})" />
        <element api="M:Zhaord.Collections.TreeNode`1.Traverse(System.Action{`0})" />
        <element api="M:Zhaord.Collections.TreeNode`1.TraverseTree(System.Action{Zhaord.Collections.TreeNode{`0}})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.Collections.TreeNode`1">
      <topicdata name="TreeNode" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Collections.TreeNode`1" />
      <apidata name="TreeNode" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:Zhaord.Collections.TreeNode`1.Children" />
        <element api="P:Zhaord.Collections.TreeNode`1.Depth" />
        <element api="P:Zhaord.Collections.TreeNode`1.FirstChild" />
        <element api="P:Zhaord.Collections.TreeNode`1.HasChildren" />
        <element api="P:Zhaord.Collections.TreeNode`1.IsLeaf" />
        <element api="P:Zhaord.Collections.TreeNode`1.IsRoot" />
        <element api="P:Zhaord.Collections.TreeNode`1.Item(System.Int32)" />
        <element api="P:Zhaord.Collections.TreeNode`1.LastChild" />
        <element api="P:Zhaord.Collections.TreeNode`1.LeafNodes" />
        <element api="P:Zhaord.Collections.TreeNode`1.Next" />
        <element api="P:Zhaord.Collections.TreeNode`1.NonLeafNodes" />
        <element api="P:Zhaord.Collections.TreeNode`1.Parent" />
        <element api="P:Zhaord.Collections.TreeNode`1.Previous" />
        <element api="P:Zhaord.Collections.TreeNode`1.Root" />
        <element api="P:Zhaord.Collections.TreeNode`1.Value" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Collections.TreeNode`1.Append">
      <topicdata name="Append" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Append" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Collections.TreeNode`1.Append(`0)" />
        <element api="M:Zhaord.Collections.TreeNode`1.Append(Zhaord.Collections.TreeNode{`0},System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Collections.TreeNode`1.AppendMany">
      <topicdata name="AppendMany" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="AppendMany" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Collections.TreeNode`1.AppendMany(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:Zhaord.Collections.TreeNode`1.AppendMany(`0[])" />
        <element api="M:Zhaord.Collections.TreeNode`1.AppendMany(System.Collections.Generic.IEnumerable{Zhaord.Collections.TreeNode{`0}})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Collections.TreeNode`1.Clone">
      <topicdata name="Clone" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Clone" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Collections.TreeNode`1.Clone" />
        <element api="M:Zhaord.Collections.TreeNode`1.Clone(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Collections.TreeNode`1.Flatten">
      <topicdata name="Flatten" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Flatten" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Collections.TreeNode`1.Flatten(System.Boolean)" />
        <element api="M:Zhaord.Collections.TreeNode`1.Flatten(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.#ctor(`0)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.Append(`0)">
      <topicdata group="api" />
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.Collections.TreeNode`1.Append" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.Append(Zhaord.Collections.TreeNode{`0},System.Boolean)">
      <topicdata group="api" />
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.Collections.TreeNode`1.Append" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="node">
          <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="clone" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.AppendChildrenOf(Zhaord.Collections.TreeNode{`0})">
      <topicdata group="api" />
      <apidata name="AppendChildrenOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="node">
          <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.AppendMany(System.Collections.Generic.IEnumerable{`0})">
      <topicdata group="api" />
      <apidata name="AppendMany" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.Collections.TreeNode`1.AppendMany" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="values">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.AppendMany(System.Collections.Generic.IEnumerable{Zhaord.Collections.TreeNode{`0}})">
      <topicdata group="api" />
      <apidata name="AppendMany" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.Collections.TreeNode`1.AppendMany" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="values">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.AppendMany(`0[])">
      <topicdata group="api" />
      <apidata name="AppendMany" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.Collections.TreeNode`1.AppendMany" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="values" params="true">
          <arrayOf rank="1">
            <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
            </specialization>
          </type>
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Collections.TreeNode`1.Children">
      <topicdata group="api" />
      <apidata name="Children" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Children" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.Collections.TreeNode`1.Clone" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Zhaord.ICloneable`1.Clone">
          <type api="T:Zhaord.ICloneable`1" ref="true">
            <specialization>
              <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.Clone(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.Collections.TreeNode`1.Clone" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="deep">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Collections.TreeNode`1.Depth">
      <topicdata group="api" />
      <apidata name="Depth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Depth" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.Find(`0)">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Collections.TreeNode`1.FirstChild">
      <topicdata group="api" />
      <apidata name="FirstChild" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FirstChild" />
      <returns>
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.Flatten(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Flatten" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.Collections.TreeNode`1.Flatten" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="includeSelf" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.Flatten(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)">
      <topicdata group="api" />
      <apidata name="Flatten" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.Collections.TreeNode`1.Flatten" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="includeSelf" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Collections.TreeNode`1.HasChildren">
      <topicdata group="api" />
      <apidata name="HasChildren" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasChildren" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.InsertAfter(Zhaord.Collections.TreeNode{`0})">
      <topicdata group="api" />
      <apidata name="InsertAfter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="refNode">
          <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.InsertBefore(Zhaord.Collections.TreeNode{`0})">
      <topicdata group="api" />
      <apidata name="InsertBefore" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="refNode">
          <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Collections.TreeNode`1.IsLeaf">
      <topicdata group="api" />
      <apidata name="IsLeaf" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsLeaf" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Collections.TreeNode`1.IsRoot">
      <topicdata group="api" />
      <apidata name="IsRoot" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsRoot" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Collections.TreeNode`1.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Collections.TreeNode`1.LastChild">
      <topicdata group="api" />
      <apidata name="LastChild" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LastChild" />
      <returns>
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Collections.TreeNode`1.LeafNodes">
      <topicdata group="api" />
      <apidata name="LeafNodes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LeafNodes" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Collections.TreeNode`1.Next">
      <topicdata group="api" />
      <apidata name="Next" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Next" />
      <returns>
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Collections.TreeNode`1.NonLeafNodes">
      <topicdata group="api" />
      <apidata name="NonLeafNodes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NonLeafNodes" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Collections.TreeNode`1.Parent">
      <topicdata group="api" />
      <apidata name="Parent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parent" />
      <returns>
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.Prepend(`0)">
      <topicdata group="api" />
      <apidata name="Prepend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Collections.TreeNode`1.Previous">
      <topicdata group="api" />
      <apidata name="Previous" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Previous" />
      <returns>
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.RemoveNode(Zhaord.Collections.TreeNode{`0})">
      <topicdata group="api" />
      <apidata name="RemoveNode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="node">
          <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Collections.TreeNode`1.Root">
      <topicdata group="api" />
      <apidata name="Root" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Root" />
      <returns>
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.SelectNode(System.Linq.Expressions.Expression{System.Func{Zhaord.Collections.TreeNode{`0},System.Boolean}})">
      <topicdata group="api" />
      <apidata name="SelectNode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="predicate">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.SelectNodes(System.Linq.Expressions.Expression{System.Func{Zhaord.Collections.TreeNode{`0},System.Boolean}})">
      <topicdata group="api" />
      <apidata name="SelectNodes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="predicate">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.Traverse(System.Action{`0})">
      <topicdata group="api" />
      <apidata name="Traverse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.TraverseTree(System.Action{Zhaord.Collections.TreeNode{`0}})">
      <topicdata group="api" />
      <apidata name="TraverseTree" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Collections.TreeNode`1.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
    </api>
    <api id="N:Zhaord.Configuration">
      <topicdata group="api" />
      <apidata name="Zhaord.Configuration" group="namespace" />
      <elements>
        <element api="T:Zhaord.Configuration.ISettings" />
        <element api="T:Zhaord.Configuration.JsonPersistAttribute" />
      </elements>
    </api>
    <api id="T:Zhaord.Configuration.ISettings">
      <topicdata group="api" />
      <apidata name="ISettings" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Configuration" />
      </containers>
    </api>
    <api id="T:Zhaord.Configuration.JsonPersistAttribute">
      <topicdata group="api" />
      <apidata name="JsonPersistAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Configuration.JsonPersistAttribute.#ctor" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Configuration.JsonPersistAttribute">
      <topicdata name="JsonPersistAttribute" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Configuration.JsonPersistAttribute" />
      <apidata name="JsonPersistAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Configuration" />
        <type api="T:Zhaord.Configuration.JsonPersistAttribute" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.Configuration.JsonPersistAttribute">
      <topicdata name="JsonPersistAttribute" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Configuration.JsonPersistAttribute" />
      <apidata name="JsonPersistAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Configuration" />
        <type api="T:Zhaord.Configuration.JsonPersistAttribute" />
      </containers>
    </api>
    <api id="M:Zhaord.Configuration.JsonPersistAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Configuration" />
        <type api="T:Zhaord.Configuration.JsonPersistAttribute" ref="true" />
      </containers>
    </api>
    <api id="N:Zhaord.Data">
      <topicdata group="api" />
      <apidata name="Zhaord.Data" group="namespace" />
      <elements>
        <element api="T:Zhaord.Data.DataSettings" />
        <element api="T:Zhaord.Data.IActivatable" />
        <element api="T:Zhaord.Data.ISoftDeletable" />
      </elements>
    </api>
    <api id="T:Zhaord.Data.DataSettings">
      <topicdata group="api" />
      <apidata name="DataSettings" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="P:Zhaord.Data.DataSettings.AppVersion" />
        <element api="P:Zhaord.Data.DataSettings.Current" />
        <element api="M:Zhaord.Data.DataSettings.DatabaseIsInstalled" />
        <element api="P:Zhaord.Data.DataSettings.DataConnectionString" />
        <element api="P:Zhaord.Data.DataSettings.DataProvider" />
        <element api="M:Zhaord.Data.DataSettings.Delete" />
        <element api="F:Zhaord.Data.DataSettings.FileName" />
        <element api="P:Zhaord.Data.DataSettings.IsSqlServer" />
        <element api="M:Zhaord.Data.DataSettings.IsValid" />
        <element api="M:Zhaord.Data.DataSettings.Load" />
        <element api="M:Zhaord.Data.DataSettings.ParseSettings(System.String)" />
        <element api="P:Zhaord.Data.DataSettings.ProviderFriendlyName" />
        <element api="P:Zhaord.Data.DataSettings.ProviderInvariantName" />
        <element api="P:Zhaord.Data.DataSettings.RawDataSettings" />
        <element api="M:Zhaord.Data.DataSettings.Reload" />
        <element api="M:Zhaord.Data.DataSettings.Reset" />
        <element api="M:Zhaord.Data.DataSettings.Save" />
        <element api="F:Zhaord.Data.DataSettings.Separator" />
        <element api="M:Zhaord.Data.DataSettings.SerializeSettings" />
        <element api="M:Zhaord.Data.DataSettings.SetDefaultFactory(System.Func{Zhaord.Data.DataSettings})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Data.DataSettings">
      <topicdata name="DataSettings" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Data.DataSettings" />
      <apidata name="DataSettings" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.DataSettings.DatabaseIsInstalled" />
        <element api="M:Zhaord.Data.DataSettings.Delete" />
        <element api="M:Zhaord.Data.DataSettings.IsValid" />
        <element api="M:Zhaord.Data.DataSettings.Load" />
        <element api="M:Zhaord.Data.DataSettings.ParseSettings(System.String)" />
        <element api="M:Zhaord.Data.DataSettings.Reload" />
        <element api="M:Zhaord.Data.DataSettings.Reset" />
        <element api="M:Zhaord.Data.DataSettings.Save" />
        <element api="M:Zhaord.Data.DataSettings.SerializeSettings" />
        <element api="M:Zhaord.Data.DataSettings.SetDefaultFactory(System.Func{Zhaord.Data.DataSettings})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.Data.DataSettings">
      <topicdata name="DataSettings" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Data.DataSettings" />
      <apidata name="DataSettings" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Zhaord.Data.DataSettings.AppVersion" />
        <element api="P:Zhaord.Data.DataSettings.Current" />
        <element api="P:Zhaord.Data.DataSettings.DataConnectionString" />
        <element api="P:Zhaord.Data.DataSettings.DataProvider" />
        <element api="P:Zhaord.Data.DataSettings.IsSqlServer" />
        <element api="P:Zhaord.Data.DataSettings.ProviderFriendlyName" />
        <element api="P:Zhaord.Data.DataSettings.ProviderInvariantName" />
        <element api="P:Zhaord.Data.DataSettings.RawDataSettings" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" />
      </containers>
    </api>
    <api id="Fields.T:Zhaord.Data.DataSettings">
      <topicdata name="DataSettings" group="list" subgroup="Fields" typeTopicId="T:Zhaord.Data.DataSettings" />
      <apidata name="DataSettings" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Zhaord.Data.DataSettings.FileName" />
        <element api="F:Zhaord.Data.DataSettings.Separator" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" />
      </containers>
    </api>
    <api id="P:Zhaord.Data.DataSettings.AppVersion">
      <topicdata group="api" />
      <apidata name="AppVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AppVersion" />
      <setter name="set_AppVersion" />
      <returns>
        <type api="T:System.Version" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Data.DataSettings.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Data.DataSettings.DatabaseIsInstalled">
      <topicdata group="api" />
      <apidata name="DatabaseIsInstalled" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Data.DataSettings.DataConnectionString">
      <topicdata group="api" />
      <apidata name="DataConnectionString" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DataConnectionString" />
      <setter name="set_DataConnectionString" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Data.DataSettings.DataProvider">
      <topicdata group="api" />
      <apidata name="DataProvider" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DataProvider" />
      <setter name="set_DataProvider" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Data.DataSettings.Delete">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
    </api>
    <api id="F:Zhaord.Data.DataSettings.FileName">
      <topicdata group="api" />
      <apidata name="FileName" group="member" subgroup="field" />
      <memberdata visibility="family" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>Settings.txt</value>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Data.DataSettings.IsSqlServer">
      <topicdata group="api" />
      <apidata name="IsSqlServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsSqlServer" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Data.DataSettings.IsValid">
      <topicdata group="api" />
      <apidata name="IsValid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Data.DataSettings.Load">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Data.DataSettings.ParseSettings(System.String)">
      <topicdata group="api" />
      <apidata name="ParseSettings" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Data.DataSettings.ProviderFriendlyName">
      <topicdata group="api" />
      <apidata name="ProviderFriendlyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProviderFriendlyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Data.DataSettings.ProviderInvariantName">
      <topicdata group="api" />
      <apidata name="ProviderInvariantName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProviderInvariantName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Data.DataSettings.RawDataSettings">
      <topicdata group="api" />
      <apidata name="RawDataSettings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RawDataSettings" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Data.DataSettings.Reload">
      <topicdata group="api" />
      <apidata name="Reload" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Data.DataSettings.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Data.DataSettings.Save">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
    </api>
    <api id="F:Zhaord.Data.DataSettings.Separator">
      <topicdata group="api" />
      <apidata name="Separator" group="member" subgroup="field" />
      <memberdata visibility="family" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <value>:</value>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Data.DataSettings.SerializeSettings">
      <topicdata group="api" />
      <apidata name="SerializeSettings" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Data.DataSettings.SetDefaultFactory(System.Func{Zhaord.Data.DataSettings})">
      <topicdata group="api" />
      <apidata name="SetDefaultFactory" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="factory">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <type api="T:Zhaord.Data.DataSettings" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.Data.IActivatable">
      <topicdata group="api" />
      <apidata name="IActivatable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.Data.IActivatable.IsActive" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.Data.IActivatable">
      <topicdata name="IActivatable" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Data.IActivatable" />
      <apidata name="IActivatable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.Data.IActivatable.IsActive" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.IActivatable" />
      </containers>
    </api>
    <api id="P:Zhaord.Data.IActivatable.IsActive">
      <topicdata group="api" />
      <apidata name="IsActive" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsActive" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.IActivatable" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.Data.ISoftDeletable">
      <topicdata group="api" />
      <apidata name="ISoftDeletable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.Data.ISoftDeletable.Deleted" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.Data.ISoftDeletable">
      <topicdata name="ISoftDeletable" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Data.ISoftDeletable" />
      <apidata name="ISoftDeletable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.Data.ISoftDeletable.Deleted" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.ISoftDeletable" />
      </containers>
    </api>
    <api id="P:Zhaord.Data.ISoftDeletable.Deleted">
      <topicdata group="api" />
      <apidata name="Deleted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Deleted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.ISoftDeletable" ref="true" />
      </containers>
    </api>
    <api id="N:Zhaord.Data.Notifies">
      <topicdata group="api" />
      <apidata name="Zhaord.Data.Notifies" group="namespace" />
      <elements>
        <element api="T:Zhaord.Data.Notifies.INotifier" />
        <element api="T:Zhaord.Data.Notifies.NotifierExtension" />
        <element api="T:Zhaord.Data.Notifies.Notifier" />
        <element api="T:Zhaord.Data.Notifies.NotifyEntry" />
        <element api="T:Zhaord.Data.Notifies.NotifyType" />
      </elements>
    </api>
    <api id="T:Zhaord.Data.Notifies.INotifier">
      <topicdata group="api" />
      <apidata name="INotifier" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:Zhaord.Data.Notifies.Notifier" ref="true" />
      </implementors>
      <elements>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Information(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" source="extension">
          <apidata name="Information" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="message">
              <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
            </parameter>
            <parameter name="durable" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Data.Notifies" />
            <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Success(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" source="extension">
          <apidata name="Success" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="message">
              <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
            </parameter>
            <parameter name="durable" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Data.Notifies" />
            <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Warning(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" source="extension">
          <apidata name="Warning" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="message">
              <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
            </parameter>
            <parameter name="durable" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Data.Notifies" />
            <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Error(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" source="extension">
          <apidata name="Error" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="message">
              <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
            </parameter>
            <parameter name="durable" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Data.Notifies" />
            <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.INotifier.Add(Zhaord.Data.Notifies.NotifyType,Zhaord.Localization.LocalizedString,System.Boolean)" />
        <element api="P:Zhaord.Data.Notifies.INotifier.Entries" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Data.Notifies.INotifier">
      <topicdata name="INotifier" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Data.Notifies.INotifier" />
      <apidata name="INotifier" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Information(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" source="extension">
          <apidata name="Information" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="message">
              <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
            </parameter>
            <parameter name="durable" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Data.Notifies" />
            <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Success(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" source="extension">
          <apidata name="Success" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="message">
              <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
            </parameter>
            <parameter name="durable" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Data.Notifies" />
            <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Warning(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" source="extension">
          <apidata name="Warning" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="message">
              <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
            </parameter>
            <parameter name="durable" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Data.Notifies" />
            <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Error(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" source="extension">
          <apidata name="Error" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="message">
              <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
            </parameter>
            <parameter name="durable" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Data.Notifies" />
            <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.INotifier.Add(Zhaord.Data.Notifies.NotifyType,Zhaord.Localization.LocalizedString,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.INotifier" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.Data.Notifies.INotifier">
      <topicdata name="INotifier" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Data.Notifies.INotifier" />
      <apidata name="INotifier" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.Data.Notifies.INotifier.Entries" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.INotifier" />
      </containers>
    </api>
    <api id="M:Zhaord.Data.Notifies.INotifier.Add(Zhaord.Data.Notifies.NotifyType,Zhaord.Localization.LocalizedString,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="type">
          <type api="T:Zhaord.Data.Notifies.NotifyType" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
        </parameter>
        <parameter name="durable" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.INotifier" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Data.Notifies.INotifier.Entries">
      <topicdata group="api" />
      <apidata name="Entries" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Entries" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Zhaord.Data.Notifies.NotifyEntry" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.INotifier" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.Data.Notifies.Notifier">
      <topicdata group="api" />
      <apidata name="Notifier" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Zhaord.Data.Notifies.INotifier" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Information(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" source="extension">
          <apidata name="Information" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="message">
              <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
            </parameter>
            <parameter name="durable" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Data.Notifies" />
            <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Success(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" source="extension">
          <apidata name="Success" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="message">
              <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
            </parameter>
            <parameter name="durable" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Data.Notifies" />
            <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Warning(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" source="extension">
          <apidata name="Warning" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="message">
              <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
            </parameter>
            <parameter name="durable" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Data.Notifies" />
            <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Error(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" source="extension">
          <apidata name="Error" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="message">
              <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
            </parameter>
            <parameter name="durable" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Data.Notifies" />
            <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.Notifier.#ctor" />
        <element api="M:Zhaord.Data.Notifies.Notifier.Add(Zhaord.Data.Notifies.NotifyType,Zhaord.Localization.LocalizedString,System.Boolean)" />
        <element api="P:Zhaord.Data.Notifies.Notifier.Entries" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Data.Notifies.Notifier">
      <topicdata name="Notifier" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Data.Notifies.Notifier" />
      <apidata name="Notifier" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Information(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" source="extension">
          <apidata name="Information" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="message">
              <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
            </parameter>
            <parameter name="durable" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Data.Notifies" />
            <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Success(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" source="extension">
          <apidata name="Success" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="message">
              <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
            </parameter>
            <parameter name="durable" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Data.Notifies" />
            <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Warning(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" source="extension">
          <apidata name="Warning" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="message">
              <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
            </parameter>
            <parameter name="durable" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Data.Notifies" />
            <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Error(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" source="extension">
          <apidata name="Error" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="message">
              <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
            </parameter>
            <parameter name="durable" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Data.Notifies" />
            <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.Notifier.Add(Zhaord.Data.Notifies.NotifyType,Zhaord.Localization.LocalizedString,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.Notifier" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.Data.Notifies.Notifier">
      <topicdata name="Notifier" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Data.Notifies.Notifier" />
      <apidata name="Notifier" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Zhaord.Data.Notifies.Notifier.Entries" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.Notifier" />
      </containers>
    </api>
    <api id="M:Zhaord.Data.Notifies.Notifier.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.Notifier" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Data.Notifies.Notifier.Add(Zhaord.Data.Notifies.NotifyType,Zhaord.Localization.LocalizedString,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="type">
          <type api="T:Zhaord.Data.Notifies.NotifyType" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
        </parameter>
        <parameter name="durable" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Zhaord.Data.Notifies.INotifier.Add(Zhaord.Data.Notifies.NotifyType,Zhaord.Localization.LocalizedString,System.Boolean)">
          <type api="T:Zhaord.Data.Notifies.INotifier" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.Notifier" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Data.Notifies.Notifier.Entries">
      <topicdata group="api" />
      <apidata name="Entries" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Entries" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Zhaord.Data.Notifies.NotifyEntry" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:Zhaord.Data.Notifies.INotifier.Entries">
          <type api="T:Zhaord.Data.Notifies.INotifier" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.Notifier" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.Data.Notifies.NotifierExtension">
      <topicdata group="api" />
      <apidata name="NotifierExtension" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Error(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" />
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Information(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" />
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Success(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" />
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Warning(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Zhaord.Data.Notifies.NotifierExtension">
      <topicdata name="NotifierExtension" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Data.Notifies.NotifierExtension" />
      <apidata name="NotifierExtension" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Error(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" />
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Information(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" />
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Success(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" />
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Warning(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.NotifierExtension" />
      </containers>
    </api>
    <api id="M:Zhaord.Data.Notifies.NotifierExtension.Error(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Error" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="notifier">
          <type api="T:Zhaord.Data.Notifies.INotifier" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
        </parameter>
        <parameter name="durable" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Data.Notifies.NotifierExtension.Information(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Information" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="notifier">
          <type api="T:Zhaord.Data.Notifies.INotifier" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
        </parameter>
        <parameter name="durable" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Data.Notifies.NotifierExtension.Success(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Success" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="notifier">
          <type api="T:Zhaord.Data.Notifies.INotifier" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
        </parameter>
        <parameter name="durable" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Data.Notifies.NotifierExtension.Warning(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Warning" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="notifier">
          <type api="T:Zhaord.Data.Notifies.INotifier" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
        </parameter>
        <parameter name="durable" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Zhaord.Data.Notifies.NotifyEntry">
      <topicdata group="api" />
      <apidata name="NotifyEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Zhaord.ComparableObject`1" ref="true">
            <specialization>
              <type api="T:Zhaord.Data.Notifies.NotifyEntry" ref="true" />
            </specialization>
          </type>
          <type api="T:Zhaord.ComparableObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Zhaord.Data.Notifies.NotifyEntry.Equals">
          <element api="M:Zhaord.ComparableObject.Equals(System.Object)" />
          <element api="M:Zhaord.ComparableObject`1.Equals(`0)" />
        </element>
        <element api="M:Zhaord.ComparableObject.GetHashCode" />
        <element api="M:Zhaord.ComparableObject.GetSignatureProperties" />
        <element api="M:Zhaord.ComparableObject.GetSignaturePropertiesCore" />
        <element api="M:Zhaord.ComparableObject.GetTypeUnproxied" />
        <element api="M:Zhaord.ComparableObject.HasSameSignatureAs(Zhaord.ComparableObject)" />
        <element api="Overload:Zhaord.Data.Notifies.NotifyEntry.RegisterSignatureProperty">
          <element api="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.Reflection.PropertyInfo)" />
          <element api="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.String)" />
          <element api="M:Zhaord.ComparableObject`1.RegisterSignatureProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.NotifyEntry.#ctor" />
        <element api="P:Zhaord.Data.Notifies.NotifyEntry.Durable" />
        <element api="P:Zhaord.Data.Notifies.NotifyEntry.Message" />
        <element api="P:Zhaord.Data.Notifies.NotifyEntry.Type" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Data.Notifies.NotifyEntry">
      <topicdata name="NotifyEntry" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Data.Notifies.NotifyEntry" />
      <apidata name="NotifyEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="Overload:Zhaord.Data.Notifies.NotifyEntry.Equals">
          <element api="M:Zhaord.ComparableObject.Equals(System.Object)" />
          <element api="M:Zhaord.ComparableObject`1.Equals(`0)" />
        </element>
        <element api="M:Zhaord.ComparableObject.GetHashCode" />
        <element api="M:Zhaord.ComparableObject.GetSignatureProperties" />
        <element api="M:Zhaord.ComparableObject.GetSignaturePropertiesCore" />
        <element api="M:Zhaord.ComparableObject.GetTypeUnproxied" />
        <element api="M:Zhaord.ComparableObject.HasSameSignatureAs(Zhaord.ComparableObject)" />
        <element api="Overload:Zhaord.Data.Notifies.NotifyEntry.RegisterSignatureProperty">
          <element api="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.Reflection.PropertyInfo)" />
          <element api="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.String)" />
          <element api="M:Zhaord.ComparableObject`1.RegisterSignatureProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.NotifyEntry" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.Data.Notifies.NotifyEntry">
      <topicdata name="NotifyEntry" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Data.Notifies.NotifyEntry" />
      <apidata name="NotifyEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:Zhaord.Data.Notifies.NotifyEntry.Durable" />
        <element api="P:Zhaord.Data.Notifies.NotifyEntry.Message" />
        <element api="P:Zhaord.Data.Notifies.NotifyEntry.Type" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.NotifyEntry" />
      </containers>
    </api>
    <api id="M:Zhaord.Data.Notifies.NotifyEntry.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.NotifyEntry" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Data.Notifies.NotifyEntry.Durable">
      <topicdata group="api" />
      <apidata name="Durable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Durable" />
      <setter name="set_Durable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.NotifyEntry" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Data.Notifies.NotifyEntry.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Message" />
      <setter name="set_Message" />
      <returns>
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.NotifyEntry" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Data.Notifies.NotifyEntry.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:Zhaord.Data.Notifies.NotifyType" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.NotifyEntry" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.Data.Notifies.NotifyType">
      <topicdata group="api" />
      <apidata name="NotifyType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Zhaord.Data.Notifies.NotifyType.Info" />
        <element api="F:Zhaord.Data.Notifies.NotifyType.Success" />
        <element api="F:Zhaord.Data.Notifies.NotifyType.Warning" />
        <element api="F:Zhaord.Data.Notifies.NotifyType.Error" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
      </containers>
    </api>
    <api id="F:Zhaord.Data.Notifies.NotifyType.Error">
      <topicdata group="api" notopic="" />
      <apidata name="Error" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Zhaord.Data.Notifies.NotifyType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.NotifyType" ref="false" />
      </containers>
    </api>
    <api id="F:Zhaord.Data.Notifies.NotifyType.Info">
      <topicdata group="api" notopic="" />
      <apidata name="Info" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Zhaord.Data.Notifies.NotifyType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.NotifyType" ref="false" />
      </containers>
    </api>
    <api id="F:Zhaord.Data.Notifies.NotifyType.Success">
      <topicdata group="api" notopic="" />
      <apidata name="Success" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Zhaord.Data.Notifies.NotifyType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.NotifyType" ref="false" />
      </containers>
    </api>
    <api id="F:Zhaord.Data.Notifies.NotifyType.Warning">
      <topicdata group="api" notopic="" />
      <apidata name="Warning" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Zhaord.Data.Notifies.NotifyType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.NotifyType" ref="false" />
      </containers>
    </api>
    <api id="N:Zhaord.DependencyManagement">
      <topicdata group="api" />
      <apidata name="Zhaord.DependencyManagement" group="namespace" />
      <elements>
        <element api="T:Zhaord.DependencyManagement.ContainerManager" />
        <element api="T:Zhaord.DependencyManagement.ContainerManagerExtensions" />
        <element api="T:Zhaord.DependencyManagement.IDependencyRegistrar" />
      </elements>
    </api>
    <api id="T:Zhaord.DependencyManagement.ContainerManager">
      <topicdata group="api" />
      <apidata name="ContainerManager" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.DependencyManagement.ContainerManager.#ctor(Autofac.IContainer)" />
        <element api="P:Zhaord.DependencyManagement.ContainerManager.Container" />
        <element api="M:Zhaord.DependencyManagement.ContainerManager.InjectProperties``1(``0,Autofac.ILifetimeScope)" />
        <element api="M:Zhaord.DependencyManagement.ContainerManager.InjectUnsetProperties``1(``0,Autofac.ILifetimeScope)" />
        <element api="M:Zhaord.DependencyManagement.ContainerManager.IsRegistered(System.Type,Autofac.ILifetimeScope)" />
        <element api="Overload:Zhaord.DependencyManagement.ContainerManager.Resolve">
          <element api="M:Zhaord.DependencyManagement.ContainerManager.Resolve``1(System.String,Autofac.ILifetimeScope)" />
          <element api="M:Zhaord.DependencyManagement.ContainerManager.Resolve(System.Type,Autofac.ILifetimeScope)" />
        </element>
        <element api="M:Zhaord.DependencyManagement.ContainerManager.ResolveAll``1(System.String,Autofac.ILifetimeScope)" />
        <element api="Overload:Zhaord.DependencyManagement.ContainerManager.ResolveNamed">
          <element api="M:Zhaord.DependencyManagement.ContainerManager.ResolveNamed``1(System.String,Autofac.ILifetimeScope)" />
          <element api="M:Zhaord.DependencyManagement.ContainerManager.ResolveNamed(System.String,System.Type,Autofac.ILifetimeScope)" />
        </element>
        <element api="M:Zhaord.DependencyManagement.ContainerManager.ResolveOptional(System.Type,Autofac.ILifetimeScope)" />
        <element api="Overload:Zhaord.DependencyManagement.ContainerManager.ResolveUnregistered">
          <element api="M:Zhaord.DependencyManagement.ContainerManager.ResolveUnregistered``1(Autofac.ILifetimeScope)" />
          <element api="M:Zhaord.DependencyManagement.ContainerManager.ResolveUnregistered(System.Type,Autofac.ILifetimeScope)" />
        </element>
        <element api="M:Zhaord.DependencyManagement.ContainerManager.Scope" />
        <element api="Overload:Zhaord.DependencyManagement.ContainerManager.TryResolve">
          <element api="M:Zhaord.DependencyManagement.ContainerManager.TryResolve``1(Autofac.ILifetimeScope,``0@)" />
          <element api="M:Zhaord.DependencyManagement.ContainerManager.TryResolve(System.Type,Autofac.ILifetimeScope,System.Object@)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.DependencyManagement.ContainerManager">
      <topicdata name="ContainerManager" group="list" subgroup="Methods" typeTopicId="T:Zhaord.DependencyManagement.ContainerManager" />
      <apidata name="ContainerManager" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.DependencyManagement.ContainerManager.InjectProperties``1(``0,Autofac.ILifetimeScope)" />
        <element api="M:Zhaord.DependencyManagement.ContainerManager.InjectUnsetProperties``1(``0,Autofac.ILifetimeScope)" />
        <element api="M:Zhaord.DependencyManagement.ContainerManager.IsRegistered(System.Type,Autofac.ILifetimeScope)" />
        <element api="Overload:Zhaord.DependencyManagement.ContainerManager.Resolve">
          <element api="M:Zhaord.DependencyManagement.ContainerManager.Resolve``1(System.String,Autofac.ILifetimeScope)" />
          <element api="M:Zhaord.DependencyManagement.ContainerManager.Resolve(System.Type,Autofac.ILifetimeScope)" />
        </element>
        <element api="M:Zhaord.DependencyManagement.ContainerManager.ResolveAll``1(System.String,Autofac.ILifetimeScope)" />
        <element api="Overload:Zhaord.DependencyManagement.ContainerManager.ResolveNamed">
          <element api="M:Zhaord.DependencyManagement.ContainerManager.ResolveNamed``1(System.String,Autofac.ILifetimeScope)" />
          <element api="M:Zhaord.DependencyManagement.ContainerManager.ResolveNamed(System.String,System.Type,Autofac.ILifetimeScope)" />
        </element>
        <element api="M:Zhaord.DependencyManagement.ContainerManager.ResolveOptional(System.Type,Autofac.ILifetimeScope)" />
        <element api="Overload:Zhaord.DependencyManagement.ContainerManager.ResolveUnregistered">
          <element api="M:Zhaord.DependencyManagement.ContainerManager.ResolveUnregistered``1(Autofac.ILifetimeScope)" />
          <element api="M:Zhaord.DependencyManagement.ContainerManager.ResolveUnregistered(System.Type,Autofac.ILifetimeScope)" />
        </element>
        <element api="M:Zhaord.DependencyManagement.ContainerManager.Scope" />
        <element api="Overload:Zhaord.DependencyManagement.ContainerManager.TryResolve">
          <element api="M:Zhaord.DependencyManagement.ContainerManager.TryResolve``1(Autofac.ILifetimeScope,``0@)" />
          <element api="M:Zhaord.DependencyManagement.ContainerManager.TryResolve(System.Type,Autofac.ILifetimeScope,System.Object@)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.DependencyManagement.ContainerManager">
      <topicdata name="ContainerManager" group="list" subgroup="Properties" typeTopicId="T:Zhaord.DependencyManagement.ContainerManager" />
      <apidata name="ContainerManager" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.DependencyManagement.ContainerManager.Container" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" />
      </containers>
    </api>
    <api id="Overload:Zhaord.DependencyManagement.ContainerManager.Resolve">
      <topicdata name="Resolve" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.DependencyManagement.ContainerManager.Resolve``1(System.String,Autofac.ILifetimeScope)" />
        <element api="M:Zhaord.DependencyManagement.ContainerManager.Resolve(System.Type,Autofac.ILifetimeScope)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.DependencyManagement.ContainerManager.ResolveNamed">
      <topicdata name="ResolveNamed" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ResolveNamed" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.DependencyManagement.ContainerManager.ResolveNamed``1(System.String,Autofac.ILifetimeScope)" />
        <element api="M:Zhaord.DependencyManagement.ContainerManager.ResolveNamed(System.String,System.Type,Autofac.ILifetimeScope)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.DependencyManagement.ContainerManager.ResolveUnregistered">
      <topicdata name="ResolveUnregistered" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ResolveUnregistered" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.DependencyManagement.ContainerManager.ResolveUnregistered``1(Autofac.ILifetimeScope)" />
        <element api="M:Zhaord.DependencyManagement.ContainerManager.ResolveUnregistered(System.Type,Autofac.ILifetimeScope)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.DependencyManagement.ContainerManager.TryResolve">
      <topicdata name="TryResolve" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="TryResolve" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.DependencyManagement.ContainerManager.TryResolve``1(Autofac.ILifetimeScope,``0@)" />
        <element api="M:Zhaord.DependencyManagement.ContainerManager.TryResolve(System.Type,Autofac.ILifetimeScope,System.Object@)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManager.#ctor(Autofac.IContainer)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="container">
          <type api="T:Autofac.IContainer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.DependencyManagement.ContainerManager.Container">
      <topicdata group="api" />
      <apidata name="Container" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Container" />
      <returns>
        <type api="T:Autofac.IContainer" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManager.InjectProperties``1(``0,Autofac.ILifetimeScope)">
      <topicdata group="api" />
      <apidata name="InjectProperties" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="instance">
          <template name="T" index="0" api="M:Zhaord.DependencyManagement.ContainerManager.InjectProperties``1(``0,Autofac.ILifetimeScope)" />
        </parameter>
        <parameter name="scope" optional="true">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.DependencyManagement.ContainerManager.InjectProperties``1(``0,Autofac.ILifetimeScope)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManager.InjectUnsetProperties``1(``0,Autofac.ILifetimeScope)">
      <topicdata group="api" />
      <apidata name="InjectUnsetProperties" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="instance">
          <template name="T" index="0" api="M:Zhaord.DependencyManagement.ContainerManager.InjectUnsetProperties``1(``0,Autofac.ILifetimeScope)" />
        </parameter>
        <parameter name="scope" optional="true">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.DependencyManagement.ContainerManager.InjectUnsetProperties``1(``0,Autofac.ILifetimeScope)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManager.IsRegistered(System.Type,Autofac.ILifetimeScope)">
      <topicdata group="api" />
      <apidata name="IsRegistered" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="scope" optional="true">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManager.Resolve``1(System.String,Autofac.ILifetimeScope)">
      <topicdata group="api" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.DependencyManagement.ContainerManager.Resolve" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="key" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
        <parameter name="scope" optional="true">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.DependencyManagement.ContainerManager.Resolve``1(System.String,Autofac.ILifetimeScope)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManager.Resolve(System.Type,Autofac.ILifetimeScope)">
      <topicdata group="api" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.DependencyManagement.ContainerManager.Resolve" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="scope" optional="true">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManager.ResolveAll``1(System.String,Autofac.ILifetimeScope)">
      <topicdata group="api" />
      <apidata name="ResolveAll" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="key" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
        <parameter name="scope" optional="true">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <template name="T" index="0" api="M:Zhaord.DependencyManagement.ContainerManager.ResolveAll``1(System.String,Autofac.ILifetimeScope)" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManager.ResolveNamed``1(System.String,Autofac.ILifetimeScope)">
      <topicdata group="api" />
      <apidata name="ResolveNamed" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.DependencyManagement.ContainerManager.ResolveNamed" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="scope" optional="true">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.DependencyManagement.ContainerManager.ResolveNamed``1(System.String,Autofac.ILifetimeScope)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManager.ResolveNamed(System.String,System.Type,Autofac.ILifetimeScope)">
      <topicdata group="api" />
      <apidata name="ResolveNamed" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.DependencyManagement.ContainerManager.ResolveNamed" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="scope" optional="true">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManager.ResolveOptional(System.Type,Autofac.ILifetimeScope)">
      <topicdata group="api" />
      <apidata name="ResolveOptional" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="scope" optional="true">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManager.ResolveUnregistered``1(Autofac.ILifetimeScope)">
      <topicdata group="api" />
      <apidata name="ResolveUnregistered" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.DependencyManagement.ContainerManager.ResolveUnregistered" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="scope" optional="true">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.DependencyManagement.ContainerManager.ResolveUnregistered``1(Autofac.ILifetimeScope)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManager.ResolveUnregistered(System.Type,Autofac.ILifetimeScope)">
      <topicdata group="api" />
      <apidata name="ResolveUnregistered" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.DependencyManagement.ContainerManager.ResolveUnregistered" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="scope" optional="true">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManager.Scope">
      <topicdata group="api" />
      <apidata name="Scope" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Autofac.ILifetimeScope" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManager.TryResolve``1(Autofac.ILifetimeScope,``0@)">
      <topicdata group="api" />
      <apidata name="TryResolve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.DependencyManagement.ContainerManager.TryResolve" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="scope">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
        </parameter>
        <parameter name="instance" out="true">
          <referenceTo>
            <template name="T" index="0" api="M:Zhaord.DependencyManagement.ContainerManager.TryResolve``1(Autofac.ILifetimeScope,``0@)" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManager.TryResolve(System.Type,Autofac.ILifetimeScope,System.Object@)">
      <topicdata group="api" />
      <apidata name="TryResolve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.DependencyManagement.ContainerManager.TryResolve" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="scope">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
        </parameter>
        <parameter name="instance" out="true">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.DependencyManagement.ContainerManagerExtensions">
      <topicdata group="api" />
      <apidata name="ContainerManagerExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithAspNetCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
        <element api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithNullCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
        <element api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithStaticCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Zhaord.DependencyManagement.ContainerManagerExtensions">
      <topicdata name="ContainerManagerExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.DependencyManagement.ContainerManagerExtensions" />
      <apidata name="ContainerManagerExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithAspNetCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
        <element api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithNullCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
        <element api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithStaticCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManagerExtensions" />
      </containers>
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithAspNetCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})">
      <topicdata group="api" />
      <apidata name="WithAspNetCache" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TLimit" />
        <template name="TReflectionActivatorData">
          <constrained>
            <type api="T:Autofac.Builder.ReflectionActivatorData" ref="true" />
          </constrained>
        </template>
        <template name="TStyle" />
      </templates>
      <parameters>
        <parameter name="registration">
          <type api="T:Autofac.Builder.IRegistrationBuilder`3" ref="true">
            <specialization>
              <template name="TLimit" index="0" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithAspNetCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
              <template name="TReflectionActivatorData" index="1" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithAspNetCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
              <template name="TStyle" index="2" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithAspNetCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Autofac.Builder.IRegistrationBuilder`3" ref="true">
          <specialization>
            <template name="TLimit" index="0" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithAspNetCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
            <template name="TReflectionActivatorData" index="1" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithAspNetCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
            <template name="TStyle" index="2" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithAspNetCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManagerExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithNullCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})">
      <topicdata group="api" />
      <apidata name="WithNullCache" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TLimit" />
        <template name="TReflectionActivatorData">
          <constrained>
            <type api="T:Autofac.Builder.ReflectionActivatorData" ref="true" />
          </constrained>
        </template>
        <template name="TStyle" />
      </templates>
      <parameters>
        <parameter name="registration">
          <type api="T:Autofac.Builder.IRegistrationBuilder`3" ref="true">
            <specialization>
              <template name="TLimit" index="0" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithNullCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
              <template name="TReflectionActivatorData" index="1" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithNullCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
              <template name="TStyle" index="2" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithNullCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Autofac.Builder.IRegistrationBuilder`3" ref="true">
          <specialization>
            <template name="TLimit" index="0" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithNullCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
            <template name="TReflectionActivatorData" index="1" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithNullCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
            <template name="TStyle" index="2" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithNullCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManagerExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithStaticCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})">
      <topicdata group="api" />
      <apidata name="WithStaticCache" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TLimit" />
        <template name="TReflectionActivatorData">
          <constrained>
            <type api="T:Autofac.Builder.ReflectionActivatorData" ref="true" />
          </constrained>
        </template>
        <template name="TStyle" />
      </templates>
      <parameters>
        <parameter name="registration">
          <type api="T:Autofac.Builder.IRegistrationBuilder`3" ref="true">
            <specialization>
              <template name="TLimit" index="0" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithStaticCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
              <template name="TReflectionActivatorData" index="1" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithStaticCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
              <template name="TStyle" index="2" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithStaticCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Autofac.Builder.IRegistrationBuilder`3" ref="true">
          <specialization>
            <template name="TLimit" index="0" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithStaticCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
            <template name="TReflectionActivatorData" index="1" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithStaticCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
            <template name="TStyle" index="2" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithStaticCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManagerExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Zhaord.DependencyManagement.IDependencyRegistrar">
      <topicdata group="api" />
      <apidata name="IDependencyRegistrar" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.DependencyManagement.IDependencyRegistrar.Order" />
        <element api="M:Zhaord.DependencyManagement.IDependencyRegistrar.Register(Autofac.ContainerBuilder,Zhaord.TypeFinders.ITypeFinder,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.DependencyManagement.IDependencyRegistrar">
      <topicdata name="IDependencyRegistrar" group="list" subgroup="Methods" typeTopicId="T:Zhaord.DependencyManagement.IDependencyRegistrar" />
      <apidata name="IDependencyRegistrar" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.DependencyManagement.IDependencyRegistrar.Register(Autofac.ContainerBuilder,Zhaord.TypeFinders.ITypeFinder,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.IDependencyRegistrar" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.DependencyManagement.IDependencyRegistrar">
      <topicdata name="IDependencyRegistrar" group="list" subgroup="Properties" typeTopicId="T:Zhaord.DependencyManagement.IDependencyRegistrar" />
      <apidata name="IDependencyRegistrar" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.DependencyManagement.IDependencyRegistrar.Order" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.IDependencyRegistrar" />
      </containers>
    </api>
    <api id="P:Zhaord.DependencyManagement.IDependencyRegistrar.Order">
      <topicdata group="api" />
      <apidata name="Order" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Order" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.IDependencyRegistrar" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.DependencyManagement.IDependencyRegistrar.Register(Autofac.ContainerBuilder,Zhaord.TypeFinders.ITypeFinder,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="builder">
          <type api="T:Autofac.ContainerBuilder" ref="true" />
        </parameter>
        <parameter name="typeFinder">
          <type api="T:Zhaord.TypeFinders.ITypeFinder" ref="true" />
        </parameter>
        <parameter name="isActiveModule">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.IDependencyRegistrar" ref="true" />
      </containers>
    </api>
    <api id="N:Zhaord.Engines">
      <topicdata group="api" />
      <apidata name="Zhaord.Engines" group="namespace" />
      <elements>
        <element api="T:Zhaord.Engines.EngineContext" />
        <element api="T:Zhaord.Engines.IEngine" />
        <element api="T:Zhaord.Engines.Engine" />
      </elements>
    </api>
    <api id="T:Zhaord.Engines.Engine">
      <topicdata group="api" />
      <apidata name="Engine" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Zhaord.Engines.IEngine" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Engines.Engine.#ctor" />
        <element api="P:Zhaord.Engines.Engine.Container" />
        <element api="P:Zhaord.Engines.Engine.ContainerManager" />
        <element api="M:Zhaord.Engines.Engine.CreateDependencyResolver(Autofac.IContainer)" />
        <element api="M:Zhaord.Engines.Engine.CreateTypeFinder" />
        <element api="M:Zhaord.Engines.Engine.Initialize" />
        <element api="M:Zhaord.Engines.Engine.RegisterDependencies" />
        <element api="Overload:Zhaord.Engines.Engine.Resolve">
          <element api="M:Zhaord.Engines.Engine.Resolve``1(System.String)" />
          <element api="M:Zhaord.Engines.Engine.Resolve(System.Type,System.String)" />
        </element>
        <element api="M:Zhaord.Engines.Engine.ResolveAll``1" />
        <element api="M:Zhaord.Engines.Engine.RunStartupTasks" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Engines" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Engines.Engine">
      <topicdata name="Engine" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Engines.Engine" />
      <apidata name="Engine" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Engines.Engine.CreateDependencyResolver(Autofac.IContainer)" />
        <element api="M:Zhaord.Engines.Engine.CreateTypeFinder" />
        <element api="M:Zhaord.Engines.Engine.Initialize" />
        <element api="M:Zhaord.Engines.Engine.RegisterDependencies" />
        <element api="Overload:Zhaord.Engines.Engine.Resolve">
          <element api="M:Zhaord.Engines.Engine.Resolve``1(System.String)" />
          <element api="M:Zhaord.Engines.Engine.Resolve(System.Type,System.String)" />
        </element>
        <element api="M:Zhaord.Engines.Engine.ResolveAll``1" />
        <element api="M:Zhaord.Engines.Engine.RunStartupTasks" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.Engine" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.Engines.Engine">
      <topicdata name="Engine" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Engines.Engine" />
      <apidata name="Engine" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.Engines.Engine.Container" />
        <element api="P:Zhaord.Engines.Engine.ContainerManager" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.Engine" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Engines.Engine.Resolve">
      <topicdata name="Resolve" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Engines.Engine.Resolve``1(System.String)" />
        <element api="M:Zhaord.Engines.Engine.Resolve(System.Type,System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Engines.Engine.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.Engine" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Engines.Engine.Container">
      <topicdata group="api" />
      <apidata name="Container" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Container" />
      <returns>
        <type api="T:Autofac.IContainer" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.Engine" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Engines.Engine.ContainerManager">
      <topicdata group="api" />
      <apidata name="ContainerManager" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ContainerManager" />
      <returns>
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </returns>
      <implements>
        <member api="P:Zhaord.Engines.IEngine.ContainerManager">
          <type api="T:Zhaord.Engines.IEngine" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Engines.Engine.CreateDependencyResolver(Autofac.IContainer)">
      <topicdata group="api" />
      <apidata name="CreateDependencyResolver" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="container">
          <type api="T:Autofac.IContainer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Engines.Engine.CreateTypeFinder">
      <topicdata group="api" />
      <apidata name="CreateTypeFinder" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:Zhaord.TypeFinders.ITypeFinder" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Engines.Engine.Initialize">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:Zhaord.Engines.IEngine.Initialize">
          <type api="T:Zhaord.Engines.IEngine" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Engines.Engine.RegisterDependencies">
      <topicdata group="api" />
      <apidata name="RegisterDependencies" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Engines.Engine.Resolve``1(System.String)">
      <topicdata group="api" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.Engines.Engine.Resolve" />
      <proceduredata virtual="true" final="true" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="name" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Engines.Engine.Resolve``1(System.String)" />
      </returns>
      <implements>
        <member api="M:Zhaord.Engines.IEngine.Resolve``1(System.String)">
          <type api="T:Zhaord.Engines.IEngine" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Engines.Engine.Resolve(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.Engines.Engine.Resolve" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="name" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:Zhaord.Engines.IEngine.Resolve(System.Type,System.String)">
          <type api="T:Zhaord.Engines.IEngine" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Engines.Engine.ResolveAll``1">
      <topicdata group="api" />
      <apidata name="ResolveAll" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <arrayOf rank="1">
          <template name="T" index="0" api="M:Zhaord.Engines.Engine.ResolveAll``1" />
        </arrayOf>
      </returns>
      <implements>
        <member api="M:Zhaord.Engines.IEngine.ResolveAll``1">
          <type api="T:Zhaord.Engines.IEngine" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.Engine" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Engines.Engine.RunStartupTasks">
      <topicdata group="api" />
      <apidata name="RunStartupTasks" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.Engine" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.Engines.EngineContext">
      <topicdata group="api" />
      <apidata name="EngineContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Engines.EngineContext.#ctor" />
        <element api="M:Zhaord.Engines.EngineContext.CreateEngineInstance" />
        <element api="P:Zhaord.Engines.EngineContext.Current" />
        <element api="M:Zhaord.Engines.EngineContext.Initialize(System.Boolean,Zhaord.Engines.IEngine)" />
        <element api="M:Zhaord.Engines.EngineContext.Replace(Zhaord.Engines.IEngine)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Engines" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Engines.EngineContext">
      <topicdata name="EngineContext" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Engines.EngineContext" />
      <apidata name="EngineContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Engines.EngineContext.CreateEngineInstance" />
        <element api="M:Zhaord.Engines.EngineContext.Initialize(System.Boolean,Zhaord.Engines.IEngine)" />
        <element api="M:Zhaord.Engines.EngineContext.Replace(Zhaord.Engines.IEngine)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.EngineContext" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.Engines.EngineContext">
      <topicdata name="EngineContext" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Engines.EngineContext" />
      <apidata name="EngineContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Zhaord.Engines.EngineContext.Current" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.EngineContext" />
      </containers>
    </api>
    <api id="M:Zhaord.Engines.EngineContext.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.EngineContext" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Engines.EngineContext.CreateEngineInstance">
      <topicdata group="api" />
      <apidata name="CreateEngineInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Zhaord.Engines.IEngine" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.EngineContext" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Engines.EngineContext.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:Zhaord.Engines.IEngine" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.EngineContext" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Engines.EngineContext.Initialize(System.Boolean,Zhaord.Engines.IEngine)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="forceRecreate">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="engine" optional="true">
          <type api="T:Zhaord.Engines.IEngine" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Zhaord.Engines.IEngine" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.EngineContext" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Engines.EngineContext.Replace(Zhaord.Engines.IEngine)">
      <topicdata group="api" />
      <apidata name="Replace" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="engine">
          <type api="T:Zhaord.Engines.IEngine" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.EngineContext" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.Engines.IEngine">
      <topicdata group="api" />
      <apidata name="IEngine" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:Zhaord.Engines.Engine" ref="true" />
      </implementors>
      <elements>
        <element api="P:Zhaord.Engines.IEngine.ContainerManager" />
        <element api="M:Zhaord.Engines.IEngine.Initialize" />
        <element api="Overload:Zhaord.Engines.IEngine.Resolve">
          <element api="M:Zhaord.Engines.IEngine.Resolve``1(System.String)" />
          <element api="M:Zhaord.Engines.IEngine.Resolve(System.Type,System.String)" />
        </element>
        <element api="M:Zhaord.Engines.IEngine.ResolveAll``1" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Engines" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Engines.IEngine">
      <topicdata name="IEngine" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Engines.IEngine" />
      <apidata name="IEngine" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Engines.IEngine.Initialize" />
        <element api="Overload:Zhaord.Engines.IEngine.Resolve">
          <element api="M:Zhaord.Engines.IEngine.Resolve``1(System.String)" />
          <element api="M:Zhaord.Engines.IEngine.Resolve(System.Type,System.String)" />
        </element>
        <element api="M:Zhaord.Engines.IEngine.ResolveAll``1" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.IEngine" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.Engines.IEngine">
      <topicdata name="IEngine" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Engines.IEngine" />
      <apidata name="IEngine" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.Engines.IEngine.ContainerManager" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.IEngine" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Engines.IEngine.Resolve">
      <topicdata name="Resolve" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Engines.IEngine.Resolve``1(System.String)" />
        <element api="M:Zhaord.Engines.IEngine.Resolve(System.Type,System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.IEngine" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Engines.IEngine.ContainerManager">
      <topicdata group="api" />
      <apidata name="ContainerManager" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ContainerManager" />
      <returns>
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.IEngine" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Engines.IEngine.Initialize">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.IEngine" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Engines.IEngine.Resolve``1(System.String)">
      <topicdata group="api" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.Engines.IEngine.Resolve" />
      <proceduredata abstract="true" virtual="true" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="name" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Engines.IEngine.Resolve``1(System.String)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.IEngine" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Engines.IEngine.Resolve(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.Engines.IEngine.Resolve" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="name" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.IEngine" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Engines.IEngine.ResolveAll``1">
      <topicdata group="api" />
      <apidata name="ResolveAll" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <arrayOf rank="1">
          <template name="T" index="0" api="M:Zhaord.Engines.IEngine.ResolveAll``1" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.IEngine" ref="true" />
      </containers>
    </api>
    <api id="N:Zhaord.Expressions">
      <topicdata group="api" />
      <apidata name="Zhaord.Expressions" group="namespace" />
      <elements>
        <element api="T:Zhaord.Expressions.RegularExpressions" />
      </elements>
    </api>
    <api id="T:Zhaord.Expressions.RegularExpressions">
      <topicdata group="api" />
      <apidata name="RegularExpressions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:Zhaord.Expressions.RegularExpressions.IsAlpha" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsAlphaNumeric" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsBase64Guid" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsBic" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsCultureCode" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsEmail" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsGuid" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsIban" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsNotNumber" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsNumeric" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsPositiveInteger" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsWebUrl" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsYearRange" />
        <element api="F:Zhaord.Expressions.RegularExpressions.RemoveHtml" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Expressions" />
      </containers>
    </api>
    <api id="Fields.T:Zhaord.Expressions.RegularExpressions">
      <topicdata name="RegularExpressions" group="list" subgroup="Fields" typeTopicId="T:Zhaord.Expressions.RegularExpressions" />
      <apidata name="RegularExpressions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:Zhaord.Expressions.RegularExpressions.IsAlpha" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsAlphaNumeric" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsBase64Guid" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsBic" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsCultureCode" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsEmail" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsGuid" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsIban" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsNotNumber" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsNumeric" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsPositiveInteger" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsWebUrl" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsYearRange" />
        <element api="F:Zhaord.Expressions.RegularExpressions.RemoveHtml" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Expressions" />
        <type api="T:Zhaord.Expressions.RegularExpressions" />
      </containers>
    </api>
    <api id="F:Zhaord.Expressions.RegularExpressions.IsAlpha">
      <topicdata group="api" />
      <apidata name="IsAlpha" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Expressions" />
        <type api="T:Zhaord.Expressions.RegularExpressions" ref="true" />
      </containers>
    </api>
    <api id="F:Zhaord.Expressions.RegularExpressions.IsAlphaNumeric">
      <topicdata group="api" />
      <apidata name="IsAlphaNumeric" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Expressions" />
        <type api="T:Zhaord.Expressions.RegularExpressions" ref="true" />
      </containers>
    </api>
    <api id="F:Zhaord.Expressions.RegularExpressions.IsBase64Guid">
      <topicdata group="api" />
      <apidata name="IsBase64Guid" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Expressions" />
        <type api="T:Zhaord.Expressions.RegularExpressions" ref="true" />
      </containers>
    </api>
    <api id="F:Zhaord.Expressions.RegularExpressions.IsBic">
      <topicdata group="api" />
      <apidata name="IsBic" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Expressions" />
        <type api="T:Zhaord.Expressions.RegularExpressions" ref="true" />
      </containers>
    </api>
    <api id="F:Zhaord.Expressions.RegularExpressions.IsCultureCode">
      <topicdata group="api" />
      <apidata name="IsCultureCode" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Expressions" />
        <type api="T:Zhaord.Expressions.RegularExpressions" ref="true" />
      </containers>
    </api>
    <api id="F:Zhaord.Expressions.RegularExpressions.IsEmail">
      <topicdata group="api" />
      <apidata name="IsEmail" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Expressions" />
        <type api="T:Zhaord.Expressions.RegularExpressions" ref="true" />
      </containers>
    </api>
    <api id="F:Zhaord.Expressions.RegularExpressions.IsGuid">
      <topicdata group="api" />
      <apidata name="IsGuid" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Expressions" />
        <type api="T:Zhaord.Expressions.RegularExpressions" ref="true" />
      </containers>
    </api>
    <api id="F:Zhaord.Expressions.RegularExpressions.IsIban">
      <topicdata group="api" />
      <apidata name="IsIban" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Expressions" />
        <type api="T:Zhaord.Expressions.RegularExpressions" ref="true" />
      </containers>
    </api>
    <api id="F:Zhaord.Expressions.RegularExpressions.IsNotNumber">
      <topicdata group="api" />
      <apidata name="IsNotNumber" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Expressions" />
        <type api="T:Zhaord.Expressions.RegularExpressions" ref="true" />
      </containers>
    </api>
    <api id="F:Zhaord.Expressions.RegularExpressions.IsNumeric">
      <topicdata group="api" />
      <apidata name="IsNumeric" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Expressions" />
        <type api="T:Zhaord.Expressions.RegularExpressions" ref="true" />
      </containers>
    </api>
    <api id="F:Zhaord.Expressions.RegularExpressions.IsPositiveInteger">
      <topicdata group="api" />
      <apidata name="IsPositiveInteger" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Expressions" />
        <type api="T:Zhaord.Expressions.RegularExpressions" ref="true" />
      </containers>
    </api>
    <api id="F:Zhaord.Expressions.RegularExpressions.IsWebUrl">
      <topicdata group="api" />
      <apidata name="IsWebUrl" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Expressions" />
        <type api="T:Zhaord.Expressions.RegularExpressions" ref="true" />
      </containers>
    </api>
    <api id="F:Zhaord.Expressions.RegularExpressions.IsYearRange">
      <topicdata group="api" />
      <apidata name="IsYearRange" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Expressions" />
        <type api="T:Zhaord.Expressions.RegularExpressions" ref="true" />
      </containers>
    </api>
    <api id="F:Zhaord.Expressions.RegularExpressions.RemoveHtml">
      <topicdata group="api" />
      <apidata name="RemoveHtml" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Expressions" />
        <type api="T:Zhaord.Expressions.RegularExpressions" ref="true" />
      </containers>
    </api>
    <api id="N:Zhaord.Extensions">
      <topicdata group="api" />
      <apidata name="Zhaord.Extensions" group="namespace" />
      <elements>
        <element api="T:Zhaord.Extensions.CollectionExtensions" />
        <element api="T:Zhaord.Extensions.ConversionExtensions" />
        <element api="T:Zhaord.Extensions.DateTimeExtensions" />
        <element api="T:Zhaord.Extensions.DecimalExtensions" />
        <element api="T:Zhaord.Extensions.DictionaryExtensions" />
        <element api="T:Zhaord.Extensions.EnumerableExtensions" />
        <element api="T:Zhaord.Extensions.EnumExtensions" />
        <element api="T:Zhaord.Extensions.IoExtensions" />
        <element api="T:Zhaord.Extensions.LinqExtensions" />
        <element api="T:Zhaord.Extensions.ListExtensions" />
        <element api="T:Zhaord.Extensions.MiscExtensions" />
        <element api="T:Zhaord.Extensions.StreamExtensions" />
        <element api="T:Zhaord.Extensions.StringExtensions" />
        <element api="T:Zhaord.Extensions.TypeDescriptorExtensions" />
        <element api="T:Zhaord.Extensions.TypeExtensions" />
        <element api="T:Zhaord.Extensions.XmlNodeExtensions" />
        <element api="T:Zhaord.Extensions.XmlWriterExtensions" />
      </elements>
    </api>
    <api id="T:Zhaord.Extensions.CollectionExtensions">
      <topicdata group="api" />
      <apidata name="CollectionExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.Extensions.CollectionExtensions.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:Zhaord.Extensions.CollectionExtensions.EqualsAll``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0})" />
        <element api="M:Zhaord.Extensions.CollectionExtensions.IsNullOrEmpty``1(System.Collections.Generic.ICollection{``0})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Zhaord.Extensions.CollectionExtensions">
      <topicdata name="CollectionExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.CollectionExtensions" />
      <apidata name="CollectionExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Extensions.CollectionExtensions.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:Zhaord.Extensions.CollectionExtensions.EqualsAll``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0})" />
        <element api="M:Zhaord.Extensions.CollectionExtensions.IsNullOrEmpty``1(System.Collections.Generic.ICollection{``0})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.CollectionExtensions" />
      </containers>
    </api>
    <api id="M:Zhaord.Extensions.CollectionExtensions.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="initial">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.CollectionExtensions.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="other">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.CollectionExtensions.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.CollectionExtensions.EqualsAll``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0})">
      <topicdata group="api" />
      <apidata name="EqualsAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="a">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.CollectionExtensions.EqualsAll``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="b">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.CollectionExtensions.EqualsAll``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.CollectionExtensions.IsNullOrEmpty``1(System.Collections.Generic.ICollection{``0})">
      <topicdata group="api" />
      <apidata name="IsNullOrEmpty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.CollectionExtensions.IsNullOrEmpty``1(System.Collections.Generic.ICollection{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Zhaord.Extensions.ConversionExtensions">
      <topicdata group="api" />
      <apidata name="ConversionExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.AsString">
          <element api="M:Zhaord.Extensions.ConversionExtensions.AsString(System.Byte[])" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.AsString(System.IO.Stream)" />
        </element>
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.Convert">
          <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" />
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Hash(System.Byte[],System.Boolean)" />
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToArray">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToArray(System.String)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToArray(System.String,System.Char[])" />
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToBool(System.String,System.Boolean)" />
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToByteArray">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToByteArray(System.IO.Stream)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToByteArray(System.String)" />
        </element>
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToDateTime">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToDateTime(System.String,System.Nullable{System.DateTime})" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToDateTime(System.String,System.String[],System.Nullable{System.DateTime})" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToDateTime(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.Nullable{System.DateTime})" />
        </element>
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToDays">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToDays(System.Double)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToDays(System.Int32)" />
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToEnum``1(System.String,``0)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToFloat(System.String,System.Single)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToGuid(System.String)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToHex(System.Int32)" />
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToHours">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToHours(System.Double)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToHours(System.Int32)" />
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToInt(System.String,System.Int32)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToKb(System.Int32)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToMb(System.Int32)" />
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToMilliseconds">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToMilliseconds(System.Double)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToMilliseconds(System.Int32)" />
        </element>
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToMinutes">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToMinutes(System.Double)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToMinutes(System.Int32)" />
        </element>
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToObject">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToObject(System.Byte[])" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToObject``1(System.Collections.Generic.IDictionary{System.String,System.Object})" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToObject(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type)" />
        </element>
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToSeconds">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToSeconds(System.Double)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToSeconds(System.Int32)" />
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToStream(System.Byte[])" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToVersion(System.String,System.Version)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Zhaord.Extensions.ConversionExtensions">
      <topicdata name="ConversionExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.ConversionExtensions" />
      <apidata name="ConversionExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.AsString">
          <element api="M:Zhaord.Extensions.ConversionExtensions.AsString(System.Byte[])" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.AsString(System.IO.Stream)" />
        </element>
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.Convert">
          <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" />
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Hash(System.Byte[],System.Boolean)" />
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToArray">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToArray(System.String)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToArray(System.String,System.Char[])" />
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToBool(System.String,System.Boolean)" />
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToByteArray">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToByteArray(System.IO.Stream)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToByteArray(System.String)" />
        </element>
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToDateTime">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToDateTime(System.String,System.Nullable{System.DateTime})" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToDateTime(System.String,System.String[],System.Nullable{System.DateTime})" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToDateTime(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.Nullable{System.DateTime})" />
        </element>
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToDays">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToDays(System.Double)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToDays(System.Int32)" />
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToEnum``1(System.String,``0)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToFloat(System.String,System.Single)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToGuid(System.String)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToHex(System.Int32)" />
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToHours">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToHours(System.Double)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToHours(System.Int32)" />
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToInt(System.String,System.Int32)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToKb(System.Int32)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToMb(System.Int32)" />
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToMilliseconds">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToMilliseconds(System.Double)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToMilliseconds(System.Int32)" />
        </element>
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToMinutes">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToMinutes(System.Double)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToMinutes(System.Int32)" />
        </element>
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToObject">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToObject(System.Byte[])" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToObject``1(System.Collections.Generic.IDictionary{System.String,System.Object})" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToObject(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type)" />
        </element>
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToSeconds">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToSeconds(System.Double)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToSeconds(System.Int32)" />
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToStream(System.Byte[])" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToVersion(System.String,System.Version)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.ConversionExtensions.AsString">
      <topicdata name="AsString" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="AsString" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.ConversionExtensions.AsString(System.Byte[])" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.AsString(System.IO.Stream)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.ConversionExtensions.Convert">
      <topicdata name="Convert" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Convert" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.ConversionExtensions.ToArray">
      <topicdata name="ToArray" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ToArray" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToArray(System.String)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToArray(System.String,System.Char[])" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.ConversionExtensions.ToByteArray">
      <topicdata name="ToByteArray" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ToByteArray" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToByteArray(System.IO.Stream)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToByteArray(System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.ConversionExtensions.ToDateTime">
      <topicdata name="ToDateTime" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ToDateTime" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToDateTime(System.String,System.Nullable{System.DateTime})" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToDateTime(System.String,System.String[],System.Nullable{System.DateTime})" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToDateTime(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.Nullable{System.DateTime})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.ConversionExtensions.ToDays">
      <topicdata name="ToDays" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ToDays" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToDays(System.Double)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToDays(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.ConversionExtensions.ToHours">
      <topicdata name="ToHours" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ToHours" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToHours(System.Double)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToHours(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.ConversionExtensions.ToMilliseconds">
      <topicdata name="ToMilliseconds" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ToMilliseconds" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToMilliseconds(System.Double)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToMilliseconds(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.ConversionExtensions.ToMinutes">
      <topicdata name="ToMinutes" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ToMinutes" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToMinutes(System.Double)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToMinutes(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.ConversionExtensions.ToObject">
      <topicdata name="ToObject" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ToObject" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToObject(System.Byte[])" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToObject``1(System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToObject(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.ConversionExtensions.ToSeconds">
      <topicdata name="ToSeconds" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ToSeconds" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToSeconds(System.Double)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToSeconds(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.AsString(System.Byte[])">
      <topicdata group="api" />
      <apidata name="AsString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.AsString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bytes">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.AsString(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="AsString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.AsString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)">
      <topicdata group="api" />
      <apidata name="Convert" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.Convert" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name="Convert" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.Convert" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="Convert" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.Convert" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="to">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name="Convert" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.Convert" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="to">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.Hash(System.Byte[],System.Boolean)">
      <topicdata group="api" />
      <apidata name="Hash" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="toBase64" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToArray(System.String)">
      <topicdata group="api" />
      <apidata name="ToArray" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToArray" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToArray(System.String,System.Char[])">
      <topicdata group="api" />
      <apidata name="ToArray" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToArray" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="separator" params="true">
          <arrayOf rank="1">
            <type api="T:System.Char" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToBool(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="ToBool" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultValue" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToByteArray(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="ToByteArray" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToByteArray" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToByteArray(System.String)">
      <topicdata group="api" />
      <apidata name="ToByteArray" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToByteArray" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToDateTime(System.String,System.Nullable{System.DateTime})">
      <topicdata group="api" />
      <apidata name="ToDateTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToDateTime" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultValue">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToDateTime(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.Nullable{System.DateTime})">
      <topicdata group="api" />
      <apidata name="ToDateTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToDateTime" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="formats">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
        <parameter name="styles">
          <type api="T:System.Globalization.DateTimeStyles" ref="false" />
        </parameter>
        <parameter name="defaultValue">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToDateTime(System.String,System.String[],System.Nullable{System.DateTime})">
      <topicdata group="api" />
      <apidata name="ToDateTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToDateTime" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="formats">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="defaultValue">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToDays(System.Double)">
      <topicdata group="api" />
      <apidata name="ToDays" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToDays" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="days">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToDays(System.Int32)">
      <topicdata group="api" />
      <apidata name="ToDays" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToDays" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="days">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToEnum``1(System.String,``0)">
      <topicdata group="api" />
      <apidata name="ToEnum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:System.IComparable" ref="true" />
              <type api="T:System.IFormattable" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultValue">
          <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.ToEnum``1(System.String,``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.ToEnum``1(System.String,``0)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToFloat(System.String,System.Single)">
      <topicdata group="api" />
      <apidata name="ToFloat" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultValue" optional="true">
          <type api="T:System.Single" ref="false" />
          <argument>
            <type api="T:System.Single" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToGuid(System.String)">
      <topicdata group="api" />
      <apidata name="ToGuid" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToHex(System.Int32)">
      <topicdata group="api" />
      <apidata name="ToHex" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToHours(System.Double)">
      <topicdata group="api" />
      <apidata name="ToHours" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToHours" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="hours">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToHours(System.Int32)">
      <topicdata group="api" />
      <apidata name="ToHours" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToHours" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="hours">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToInt(System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="ToInt" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultValue" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToKb(System.Int32)">
      <topicdata group="api" />
      <apidata name="ToKb" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToMb(System.Int32)">
      <topicdata group="api" />
      <apidata name="ToMb" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToMilliseconds(System.Double)">
      <topicdata group="api" />
      <apidata name="ToMilliseconds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToMilliseconds" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="milliseconds">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToMilliseconds(System.Int32)">
      <topicdata group="api" />
      <apidata name="ToMilliseconds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToMilliseconds" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="milliseconds">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToMinutes(System.Double)">
      <topicdata group="api" />
      <apidata name="ToMinutes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToMinutes" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="minutes">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToMinutes(System.Int32)">
      <topicdata group="api" />
      <apidata name="ToMinutes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToMinutes" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="minutes">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToObject(System.Byte[])">
      <topicdata group="api" />
      <apidata name="ToObject" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToObject" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bytes">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToObject``1(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <topicdata group="api" />
      <apidata name="ToObject" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToObject" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="values">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.ToObject``1(System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToObject(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type)">
      <topicdata group="api" />
      <apidata name="ToObject" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToObject" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="values">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="objectType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToSeconds(System.Double)">
      <topicdata group="api" />
      <apidata name="ToSeconds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToSeconds" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="seconds">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToSeconds(System.Int32)">
      <topicdata group="api" />
      <apidata name="ToSeconds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToSeconds" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="seconds">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToStream(System.Byte[])">
      <topicdata group="api" />
      <apidata name="ToStream" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bytes">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToVersion(System.String,System.Version)">
      <topicdata group="api" />
      <apidata name="ToVersion" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultVersion" optional="true">
          <type api="T:System.Version" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Version" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Zhaord.Extensions.DateTimeExtensions">
      <topicdata group="api" />
      <apidata name="DateTimeExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Zhaord.Extensions.DateTimeExtensions.AssumeUniversalTime">
          <element api="M:Zhaord.Extensions.DateTimeExtensions.AssumeUniversalTime(System.DateTime)" />
          <element api="M:Zhaord.Extensions.DateTimeExtensions.AssumeUniversalTime(System.Nullable{System.DateTime})" />
        </element>
        <element api="F:Zhaord.Extensions.DateTimeExtensions.BeginOfEpoch" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.FromUnixTime(System.Int64)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetEvenHourDate(System.Nullable{System.DateTime})" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetEvenMinuteDate(System.Nullable{System.DateTime})" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetEvenMinuteDateBefore(System.Nullable{System.DateTime})" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetEvenSecondDate(System.Nullable{System.DateTime})" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetEvenSecondDateBefore(System.Nullable{System.DateTime})" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetFirstDayOfMonth(System.DateTime)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetLastDayOfMonth(System.DateTime)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetLocalOffset(System.DateTime)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetNextGivenMinuteDate(System.Nullable{System.DateTime},System.Int32)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetNextGivenSecondDate(System.Nullable{System.DateTime},System.Int32)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetOffset(System.DateTime,System.TimeZoneInfo)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.IsValid(System.DateTime)" />
        <element api="Overload:Zhaord.Extensions.DateTimeExtensions.ToEndOfTheDay">
          <element api="M:Zhaord.Extensions.DateTimeExtensions.ToEndOfTheDay(System.DateTime)" />
          <element api="M:Zhaord.Extensions.DateTimeExtensions.ToEndOfTheDay(System.Nullable{System.DateTime})" />
        </element>
        <element api="M:Zhaord.Extensions.DateTimeExtensions.ToJavaScriptTicks(System.DateTime)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.ToLocalTime(System.Nullable{System.DateTime})" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.ToSerializationMode(System.DateTimeKind)" />
        <element api="Overload:Zhaord.Extensions.DateTimeExtensions.ToStartOfTheDay">
          <element api="M:Zhaord.Extensions.DateTimeExtensions.ToStartOfTheDay(System.DateTime)" />
          <element api="M:Zhaord.Extensions.DateTimeExtensions.ToStartOfTheDay(System.Nullable{System.DateTime})" />
        </element>
        <element api="M:Zhaord.Extensions.DateTimeExtensions.ToUniversalTime(System.Nullable{System.DateTime})" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.ToUnixTime(System.DateTime)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.TranslateTime(System.DateTime,System.TimeZoneInfo,System.TimeZoneInfo)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.UseDaylightTime(System.TimeZoneInfo)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Zhaord.Extensions.DateTimeExtensions">
      <topicdata name="DateTimeExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.DateTimeExtensions" />
      <apidata name="DateTimeExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:Zhaord.Extensions.DateTimeExtensions.AssumeUniversalTime">
          <element api="M:Zhaord.Extensions.DateTimeExtensions.AssumeUniversalTime(System.DateTime)" />
          <element api="M:Zhaord.Extensions.DateTimeExtensions.AssumeUniversalTime(System.Nullable{System.DateTime})" />
        </element>
        <element api="M:Zhaord.Extensions.DateTimeExtensions.FromUnixTime(System.Int64)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetEvenHourDate(System.Nullable{System.DateTime})" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetEvenMinuteDate(System.Nullable{System.DateTime})" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetEvenMinuteDateBefore(System.Nullable{System.DateTime})" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetEvenSecondDate(System.Nullable{System.DateTime})" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetEvenSecondDateBefore(System.Nullable{System.DateTime})" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetFirstDayOfMonth(System.DateTime)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetLastDayOfMonth(System.DateTime)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetLocalOffset(System.DateTime)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetNextGivenMinuteDate(System.Nullable{System.DateTime},System.Int32)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetNextGivenSecondDate(System.Nullable{System.DateTime},System.Int32)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetOffset(System.DateTime,System.TimeZoneInfo)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.IsValid(System.DateTime)" />
        <element api="Overload:Zhaord.Extensions.DateTimeExtensions.ToEndOfTheDay">
          <element api="M:Zhaord.Extensions.DateTimeExtensions.ToEndOfTheDay(System.DateTime)" />
          <element api="M:Zhaord.Extensions.DateTimeExtensions.ToEndOfTheDay(System.Nullable{System.DateTime})" />
        </element>
        <element api="M:Zhaord.Extensions.DateTimeExtensions.ToJavaScriptTicks(System.DateTime)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.ToLocalTime(System.Nullable{System.DateTime})" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.ToSerializationMode(System.DateTimeKind)" />
        <element api="Overload:Zhaord.Extensions.DateTimeExtensions.ToStartOfTheDay">
          <element api="M:Zhaord.Extensions.DateTimeExtensions.ToStartOfTheDay(System.DateTime)" />
          <element api="M:Zhaord.Extensions.DateTimeExtensions.ToStartOfTheDay(System.Nullable{System.DateTime})" />
        </element>
        <element api="M:Zhaord.Extensions.DateTimeExtensions.ToUniversalTime(System.Nullable{System.DateTime})" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.ToUnixTime(System.DateTime)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.TranslateTime(System.DateTime,System.TimeZoneInfo,System.TimeZoneInfo)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.UseDaylightTime(System.TimeZoneInfo)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" />
      </containers>
    </api>
    <api id="Fields.T:Zhaord.Extensions.DateTimeExtensions">
      <topicdata name="DateTimeExtensions" group="list" subgroup="Fields" typeTopicId="T:Zhaord.Extensions.DateTimeExtensions" />
      <apidata name="DateTimeExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:Zhaord.Extensions.DateTimeExtensions.BeginOfEpoch" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.DateTimeExtensions.AssumeUniversalTime">
      <topicdata name="AssumeUniversalTime" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="AssumeUniversalTime" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.DateTimeExtensions.AssumeUniversalTime(System.DateTime)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.AssumeUniversalTime(System.Nullable{System.DateTime})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.DateTimeExtensions.ToEndOfTheDay">
      <topicdata name="ToEndOfTheDay" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ToEndOfTheDay" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.DateTimeExtensions.ToEndOfTheDay(System.DateTime)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.ToEndOfTheDay(System.Nullable{System.DateTime})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.DateTimeExtensions.ToStartOfTheDay">
      <topicdata name="ToStartOfTheDay" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ToStartOfTheDay" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.DateTimeExtensions.ToStartOfTheDay(System.DateTime)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.ToStartOfTheDay(System.Nullable{System.DateTime})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.AssumeUniversalTime(System.DateTime)">
      <topicdata group="api" />
      <apidata name="AssumeUniversalTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.DateTimeExtensions.AssumeUniversalTime" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.AssumeUniversalTime(System.Nullable{System.DateTime})">
      <topicdata group="api" />
      <apidata name="AssumeUniversalTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.DateTimeExtensions.AssumeUniversalTime" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:Zhaord.Extensions.DateTimeExtensions.BeginOfEpoch">
      <topicdata group="api" />
      <apidata name="BeginOfEpoch" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.FromUnixTime(System.Int64)">
      <topicdata group="api" />
      <apidata name="FromUnixTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="unixTime">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.GetEvenHourDate(System.Nullable{System.DateTime})">
      <topicdata group="api" />
      <apidata name="GetEvenHourDate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.GetEvenMinuteDate(System.Nullable{System.DateTime})">
      <topicdata group="api" />
      <apidata name="GetEvenMinuteDate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.GetEvenMinuteDateBefore(System.Nullable{System.DateTime})">
      <topicdata group="api" />
      <apidata name="GetEvenMinuteDateBefore" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.GetEvenSecondDate(System.Nullable{System.DateTime})">
      <topicdata group="api" />
      <apidata name="GetEvenSecondDate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.GetEvenSecondDateBefore(System.Nullable{System.DateTime})">
      <topicdata group="api" />
      <apidata name="GetEvenSecondDateBefore" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.GetFirstDayOfMonth(System.DateTime)">
      <topicdata group="api" />
      <apidata name="GetFirstDayOfMonth" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="date">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.GetLastDayOfMonth(System.DateTime)">
      <topicdata group="api" />
      <apidata name="GetLastDayOfMonth" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="date">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.GetLocalOffset(System.DateTime)">
      <topicdata group="api" />
      <apidata name="GetLocalOffset" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.GetNextGivenMinuteDate(System.Nullable{System.DateTime},System.Int32)">
      <topicdata group="api" />
      <apidata name="GetNextGivenMinuteDate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="minuteBase">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.GetNextGivenSecondDate(System.Nullable{System.DateTime},System.Int32)">
      <topicdata group="api" />
      <apidata name="GetNextGivenSecondDate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="secondBase">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.GetOffset(System.DateTime,System.TimeZoneInfo)">
      <topicdata group="api" />
      <apidata name="GetOffset" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="date">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="tz">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.IsValid(System.DateTime)">
      <topicdata group="api" />
      <apidata name="IsValid" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.ToEndOfTheDay(System.DateTime)">
      <topicdata group="api" />
      <apidata name="ToEndOfTheDay" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.DateTimeExtensions.ToEndOfTheDay" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dt">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.ToEndOfTheDay(System.Nullable{System.DateTime})">
      <topicdata group="api" />
      <apidata name="ToEndOfTheDay" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.DateTimeExtensions.ToEndOfTheDay" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dt">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.ToJavaScriptTicks(System.DateTime)">
      <topicdata group="api" />
      <apidata name="ToJavaScriptTicks" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.ToLocalTime(System.Nullable{System.DateTime})">
      <topicdata group="api" />
      <apidata name="ToLocalTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.ToSerializationMode(System.DateTimeKind)">
      <topicdata group="api" />
      <apidata name="ToSerializationMode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="kind">
          <type api="T:System.DateTimeKind" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlDateTimeSerializationMode" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.ToStartOfTheDay(System.DateTime)">
      <topicdata group="api" />
      <apidata name="ToStartOfTheDay" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.DateTimeExtensions.ToStartOfTheDay" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dt">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.ToStartOfTheDay(System.Nullable{System.DateTime})">
      <topicdata group="api" />
      <apidata name="ToStartOfTheDay" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.DateTimeExtensions.ToStartOfTheDay" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dt">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.ToUniversalTime(System.Nullable{System.DateTime})">
      <topicdata group="api" />
      <apidata name="ToUniversalTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.ToUnixTime(System.DateTime)">
      <topicdata group="api" />
      <apidata name="ToUnixTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="date">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.TranslateTime(System.DateTime,System.TimeZoneInfo,System.TimeZoneInfo)">
      <topicdata group="api" />
      <apidata name="TranslateTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="date">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="src">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </parameter>
        <parameter name="dest">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.UseDaylightTime(System.TimeZoneInfo)">
      <topicdata group="api" />
      <apidata name="UseDaylightTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timezone">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Zhaord.Extensions.DecimalExtensions">
      <topicdata group="api" />
      <apidata name="DecimalExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.Extensions.DecimalExtensions.FormatInvariant(System.Decimal,System.Int32)" />
        <element api="M:Zhaord.Extensions.DecimalExtensions.ToSmallestCurrencyUnit(System.Decimal,System.MidpointRounding)" />
        <element api="M:Zhaord.Extensions.DecimalExtensions.ToTaxPercentage(System.Decimal,System.Decimal,System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Zhaord.Extensions.DecimalExtensions">
      <topicdata name="DecimalExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.DecimalExtensions" />
      <apidata name="DecimalExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Extensions.DecimalExtensions.FormatInvariant(System.Decimal,System.Int32)" />
        <element api="M:Zhaord.Extensions.DecimalExtensions.ToSmallestCurrencyUnit(System.Decimal,System.MidpointRounding)" />
        <element api="M:Zhaord.Extensions.DecimalExtensions.ToTaxPercentage(System.Decimal,System.Decimal,System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DecimalExtensions" />
      </containers>
    </api>
    <api id="M:Zhaord.Extensions.DecimalExtensions.FormatInvariant(System.Decimal,System.Int32)">
      <topicdata group="api" />
      <apidata name="FormatInvariant" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Decimal" ref="false" />
        </parameter>
        <parameter name="decimals" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>2</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DecimalExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.DecimalExtensions.ToSmallestCurrencyUnit(System.Decimal,System.MidpointRounding)">
      <topicdata group="api" />
      <apidata name="ToSmallestCurrencyUnit" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Decimal" ref="false" />
        </parameter>
        <parameter name="rounding" optional="true">
          <type api="T:System.MidpointRounding" ref="false" />
          <argument>
            <type api="T:System.MidpointRounding" ref="false" />
            <enumValue>
              <field name="AwayFromZero" />
            </enumValue>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DecimalExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.DecimalExtensions.ToTaxPercentage(System.Decimal,System.Decimal,System.Nullable{System.Int32})">
      <topicdata group="api" />
      <apidata name="ToTaxPercentage" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inclTax">
          <type api="T:System.Decimal" ref="false" />
        </parameter>
        <parameter name="exclTax">
          <type api="T:System.Decimal" ref="false" />
        </parameter>
        <parameter name="decimals" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DecimalExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Zhaord.Extensions.DictionaryExtensions">
      <topicdata group="api" />
      <apidata name="DictionaryExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.Extensions.DictionaryExtensions.AddRange``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
        <element api="M:Zhaord.Extensions.DictionaryExtensions.AppendInValue(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.Object)" />
        <element api="M:Zhaord.Extensions.DictionaryExtensions.GetValue``2(System.Collections.Generic.IDictionary{``0,System.Object},``0)" />
        <element api="Overload:Zhaord.Extensions.DictionaryExtensions.Merge">
          <element api="M:Zhaord.Extensions.DictionaryExtensions.Merge``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1},System.Boolean)" />
          <element api="M:Zhaord.Extensions.DictionaryExtensions.Merge(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Object,System.Boolean)" />
        </element>
        <element api="M:Zhaord.Extensions.DictionaryExtensions.PrependInValue(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.Object)" />
        <element api="M:Zhaord.Extensions.DictionaryExtensions.ToExpandoObject(System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Zhaord.Extensions.DictionaryExtensions">
      <topicdata name="DictionaryExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.DictionaryExtensions" />
      <apidata name="DictionaryExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Extensions.DictionaryExtensions.AddRange``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
        <element api="M:Zhaord.Extensions.DictionaryExtensions.AppendInValue(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.Object)" />
        <element api="M:Zhaord.Extensions.DictionaryExtensions.GetValue``2(System.Collections.Generic.IDictionary{``0,System.Object},``0)" />
        <element api="Overload:Zhaord.Extensions.DictionaryExtensions.Merge">
          <element api="M:Zhaord.Extensions.DictionaryExtensions.Merge``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1},System.Boolean)" />
          <element api="M:Zhaord.Extensions.DictionaryExtensions.Merge(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Object,System.Boolean)" />
        </element>
        <element api="M:Zhaord.Extensions.DictionaryExtensions.PrependInValue(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.Object)" />
        <element api="M:Zhaord.Extensions.DictionaryExtensions.ToExpandoObject(System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DictionaryExtensions" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.DictionaryExtensions.Merge">
      <topicdata name="Merge" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Merge" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.DictionaryExtensions.Merge``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1},System.Boolean)" />
        <element api="M:Zhaord.Extensions.DictionaryExtensions.Merge(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Object,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DictionaryExtensions" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Extensions.DictionaryExtensions.AddRange``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TU" />
      </templates>
      <parameters>
        <parameter name="values">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.DictionaryExtensions.AddRange``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
              <template name="TU" index="1" api="M:Zhaord.Extensions.DictionaryExtensions.AddRange``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="other">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <template name="T" index="0" api="M:Zhaord.Extensions.DictionaryExtensions.AddRange``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
                  <template name="TU" index="1" api="M:Zhaord.Extensions.DictionaryExtensions.AddRange``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DictionaryExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.DictionaryExtensions.AppendInValue(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="AppendInValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="separator">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DictionaryExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.DictionaryExtensions.GetValue``2(System.Collections.Generic.IDictionary{``0,System.Object},``0)">
      <topicdata group="api" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TK" />
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="instance">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <template name="TK" index="0" api="M:Zhaord.Extensions.DictionaryExtensions.GetValue``2(System.Collections.Generic.IDictionary{``0,System.Object},``0)" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="key">
          <template name="TK" index="0" api="M:Zhaord.Extensions.DictionaryExtensions.GetValue``2(System.Collections.Generic.IDictionary{``0,System.Object},``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="1" api="M:Zhaord.Extensions.DictionaryExtensions.GetValue``2(System.Collections.Generic.IDictionary{``0,System.Object},``0)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DictionaryExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.DictionaryExtensions.Merge(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Object,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Merge" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.DictionaryExtensions.Merge" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="replaceExisting" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DictionaryExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.DictionaryExtensions.Merge``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1},System.Boolean)">
      <topicdata group="api" />
      <apidata name="Merge" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.DictionaryExtensions.Merge" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TU" />
      </templates>
      <parameters>
        <parameter name="instance">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.DictionaryExtensions.Merge``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1},System.Boolean)" />
              <template name="TU" index="1" api="M:Zhaord.Extensions.DictionaryExtensions.Merge``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1},System.Boolean)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="from">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.DictionaryExtensions.Merge``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1},System.Boolean)" />
              <template name="TU" index="1" api="M:Zhaord.Extensions.DictionaryExtensions.Merge``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1},System.Boolean)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="replaceExisting" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DictionaryExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.DictionaryExtensions.PrependInValue(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="PrependInValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="separator">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DictionaryExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.DictionaryExtensions.ToExpandoObject(System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
      <topicdata group="api" />
      <apidata name="ToExpandoObject" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="castIfPossible" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Dynamic.ExpandoObject" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DictionaryExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Zhaord.Extensions.EnumerableExtensions">
      <topicdata group="api" />
      <apidata name="EnumerableExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.AddRange(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection)" />
        <element api="M:Zhaord.Extensions.EnumerableExtensions.AsReadOnly``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:Zhaord.Extensions.EnumerableExtensions.AsSerializable``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:Zhaord.Extensions.EnumerableExtensions.CastValid``1(System.Collections.IEnumerable)" />
        <element api="M:Zhaord.Extensions.EnumerableExtensions.Chunk``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
        <element api="Overload:Zhaord.Extensions.EnumerableExtensions.Each">
          <element api="M:Zhaord.Extensions.EnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" />
          <element api="M:Zhaord.Extensions.EnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Int32})" />
        </element>
        <element api="Overload:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal">
          <element api="M:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)" />
        </element>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Zhaord.Extensions.EnumerableExtensions">
      <topicdata name="EnumerableExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.EnumerableExtensions" />
      <apidata name="EnumerableExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.AddRange(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection)" />
        <element api="M:Zhaord.Extensions.EnumerableExtensions.AsReadOnly``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:Zhaord.Extensions.EnumerableExtensions.AsSerializable``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:Zhaord.Extensions.EnumerableExtensions.CastValid``1(System.Collections.IEnumerable)" />
        <element api="M:Zhaord.Extensions.EnumerableExtensions.Chunk``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
        <element api="Overload:Zhaord.Extensions.EnumerableExtensions.Each">
          <element api="M:Zhaord.Extensions.EnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" />
          <element api="M:Zhaord.Extensions.EnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Int32})" />
        </element>
        <element api="Overload:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal">
          <element api="M:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)" />
        </element>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumerableExtensions" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.EnumerableExtensions.Each">
      <topicdata name="Each" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Each" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" />
        <element api="M:Zhaord.Extensions.EnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal">
      <topicdata name="OrderByOrdinal" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="OrderByOrdinal" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Extensions.EnumerableExtensions.AddRange(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="initial">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </parameter>
        <parameter name="other">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.EnumerableExtensions.AsReadOnly``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="AsReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.AsReadOnly``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.AsReadOnly``1(System.Collections.Generic.IEnumerable{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.EnumerableExtensions.AsSerializable``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="AsSerializable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.AsSerializable``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.AsSerializable``1(System.Collections.Generic.IEnumerable{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.EnumerableExtensions.CastValid``1(System.Collections.IEnumerable)">
      <topicdata group="api" />
      <apidata name="CastValid" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.CastValid``1(System.Collections.IEnumerable)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.EnumerableExtensions.Chunk``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
      <topicdata group="api" />
      <apidata name="Chunk" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="items">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.Chunk``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="chunkSize" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>100</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.Chunk``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.EnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
      <topicdata group="api" />
      <apidata name="Each" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.EnumerableExtensions.Each" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.EnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Int32})">
      <topicdata group="api" />
      <apidata name="Each" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.EnumerableExtensions.Each" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Int32})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="action">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Int32})" />
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="OrderByOrdinal" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:Zhaord.IOrdered" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal``1(System.Collections.Generic.IEnumerable{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
      <topicdata group="api" />
      <apidata name="OrderByOrdinal" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:Zhaord.IOrdered" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="descending">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <topicdata group="api" />
      <apidata name="ToMultimap" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              <template name="TKey" index="1" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="valueSelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              <template name="TValue" index="2" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Zhaord.Collections.Multimap`2" ref="true">
          <specialization>
            <template name="TKey" index="1" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TValue" index="2" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Zhaord.Extensions.EnumExtensions">
      <topicdata group="api" />
      <apidata name="EnumExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.Extensions.EnumExtensions.GetDescription(System.Enum)" />
        <element api="M:Zhaord.Extensions.EnumExtensions.GetFriendlyName(System.Enum)" />
        <element api="M:Zhaord.Extensions.EnumExtensions.IsSet``1(``0,``0)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Zhaord.Extensions.EnumExtensions">
      <topicdata name="EnumExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.EnumExtensions" />
      <apidata name="EnumExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Extensions.EnumExtensions.GetDescription(System.Enum)" />
        <element api="M:Zhaord.Extensions.EnumExtensions.GetFriendlyName(System.Enum)" />
        <element api="M:Zhaord.Extensions.EnumExtensions.IsSet``1(``0,``0)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumExtensions" />
      </containers>
    </api>
    <api id="M:Zhaord.Extensions.EnumExtensions.GetDescription(System.Enum)">
      <topicdata group="api" />
      <apidata name="GetDescription" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Enum" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.EnumExtensions.GetFriendlyName(System.Enum)">
      <topicdata group="api" />
      <apidata name="GetFriendlyName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Enum" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.EnumExtensions.IsSet``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="IsSet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Zhaord.Extensions.EnumExtensions.IsSet``1(``0,``0)" />
        </parameter>
        <parameter name="flags">
          <template name="T" index="0" api="M:Zhaord.Extensions.EnumExtensions.IsSet``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Zhaord.Extensions.IoExtensions">
      <topicdata group="api" />
      <apidata name="IoExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.Extensions.IoExtensions.IsFileLocked(System.IO.FileInfo)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Zhaord.Extensions.IoExtensions">
      <topicdata name="IoExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.IoExtensions" />
      <apidata name="IoExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Extensions.IoExtensions.IsFileLocked(System.IO.FileInfo)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.IoExtensions" />
      </containers>
    </api>
    <api id="M:Zhaord.Extensions.IoExtensions.IsFileLocked(System.IO.FileInfo)">
      <topicdata group="api" />
      <apidata name="IsFileLocked" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file">
          <type api="T:System.IO.FileInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.IoExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Zhaord.Extensions.LinqExtensions">
      <topicdata group="api" />
      <apidata name="LinqExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.Extensions.LinqExtensions.ExtractFieldInfo(System.Linq.Expressions.LambdaExpression)" />
        <element api="M:Zhaord.Extensions.LinqExtensions.ExtractMemberInfo(System.Linq.Expressions.LambdaExpression)" />
        <element api="M:Zhaord.Extensions.LinqExtensions.ExtractPropertyInfo(System.Linq.Expressions.LambdaExpression)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Zhaord.Extensions.LinqExtensions">
      <topicdata name="LinqExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.LinqExtensions" />
      <apidata name="LinqExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Extensions.LinqExtensions.ExtractFieldInfo(System.Linq.Expressions.LambdaExpression)" />
        <element api="M:Zhaord.Extensions.LinqExtensions.ExtractMemberInfo(System.Linq.Expressions.LambdaExpression)" />
        <element api="M:Zhaord.Extensions.LinqExtensions.ExtractPropertyInfo(System.Linq.Expressions.LambdaExpression)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.LinqExtensions" />
      </containers>
    </api>
    <api id="M:Zhaord.Extensions.LinqExtensions.ExtractFieldInfo(System.Linq.Expressions.LambdaExpression)">
      <topicdata group="api" />
      <apidata name="ExtractFieldInfo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyAccessor">
          <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Reflection.FieldInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.LinqExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.LinqExtensions.ExtractMemberInfo(System.Linq.Expressions.LambdaExpression)">
      <topicdata group="api" />
      <apidata name="ExtractMemberInfo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyAccessor">
          <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Reflection.MemberInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.LinqExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.LinqExtensions.ExtractPropertyInfo(System.Linq.Expressions.LambdaExpression)">
      <topicdata group="api" />
      <apidata name="ExtractPropertyInfo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyAccessor">
          <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Reflection.PropertyInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.LinqExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Zhaord.Extensions.ListExtensions">
      <topicdata group="api" />
      <apidata name="ListExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Zhaord.Extensions.ListExtensions.Slice">
          <element api="M:Zhaord.Extensions.ListExtensions.Slice``1(System.Collections.Generic.IList{``0},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
          <element api="M:Zhaord.Extensions.ListExtensions.Slice``1(System.Collections.Generic.IList{``0},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
        </element>
        <element api="Overload:Zhaord.Extensions.ListExtensions.ToSeparatedString">
          <element api="M:Zhaord.Extensions.ListExtensions.ToSeparatedString``1(System.Collections.Generic.IList{``0})" />
          <element api="M:Zhaord.Extensions.ListExtensions.ToSeparatedString``1(System.Collections.Generic.IList{``0},System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Zhaord.Extensions.ListExtensions">
      <topicdata name="ListExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.ListExtensions" />
      <apidata name="ListExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:Zhaord.Extensions.ListExtensions.Slice">
          <element api="M:Zhaord.Extensions.ListExtensions.Slice``1(System.Collections.Generic.IList{``0},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
          <element api="M:Zhaord.Extensions.ListExtensions.Slice``1(System.Collections.Generic.IList{``0},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
        </element>
        <element api="Overload:Zhaord.Extensions.ListExtensions.ToSeparatedString">
          <element api="M:Zhaord.Extensions.ListExtensions.ToSeparatedString``1(System.Collections.Generic.IList{``0})" />
          <element api="M:Zhaord.Extensions.ListExtensions.ToSeparatedString``1(System.Collections.Generic.IList{``0},System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ListExtensions" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.ListExtensions.Slice">
      <topicdata name="Slice" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Slice" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.ListExtensions.Slice``1(System.Collections.Generic.IList{``0},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
        <element api="M:Zhaord.Extensions.ListExtensions.Slice``1(System.Collections.Generic.IList{``0},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ListExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.ListExtensions.ToSeparatedString">
      <topicdata name="ToSeparatedString" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ToSeparatedString" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.ListExtensions.ToSeparatedString``1(System.Collections.Generic.IList{``0})" />
        <element api="M:Zhaord.Extensions.ListExtensions.ToSeparatedString``1(System.Collections.Generic.IList{``0},System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ListExtensions" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Extensions.ListExtensions.Slice``1(System.Collections.Generic.IList{``0},System.Nullable{System.Int32},System.Nullable{System.Int32})">
      <topicdata group="api" />
      <apidata name="Slice" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ListExtensions.Slice" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="list">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.ListExtensions.Slice``1(System.Collections.Generic.IList{``0},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="start">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="end">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Zhaord.Extensions.ListExtensions.Slice``1(System.Collections.Generic.IList{``0},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ListExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ListExtensions.Slice``1(System.Collections.Generic.IList{``0},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
      <topicdata group="api" />
      <apidata name="Slice" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ListExtensions.Slice" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="list">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.ListExtensions.Slice``1(System.Collections.Generic.IList{``0},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="start">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="end">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="step">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Zhaord.Extensions.ListExtensions.Slice``1(System.Collections.Generic.IList{``0},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ListExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ListExtensions.ToSeparatedString``1(System.Collections.Generic.IList{``0})">
      <topicdata group="api" />
      <apidata name="ToSeparatedString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ListExtensions.ToSeparatedString" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.ListExtensions.ToSeparatedString``1(System.Collections.Generic.IList{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ListExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.ListExtensions.ToSeparatedString``1(System.Collections.Generic.IList{``0},System.String)">
      <topicdata group="api" />
      <apidata name="ToSeparatedString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ListExtensions.ToSeparatedString" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.ListExtensions.ToSeparatedString``1(System.Collections.Generic.IList{``0},System.String)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="separator">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ListExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Zhaord.Extensions.MiscExtensions">
      <topicdata group="api" />
      <apidata name="MiscExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.Extensions.MiscExtensions.CountExecute(System.Data.OleDb.OleDbConnection,System.String)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.Dump(System.Exception)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.GetDataType(System.Data.DataTable,System.String)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.GetMergedDataValue``1(Zhaord.IMergedData,System.String,``0)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.Grow(System.Text.StringBuilder,System.String,System.String)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.HasColumn(System.Data.DataView,System.String)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.IsEqual(System.ComponentModel.TypeConverter,System.String,System.Object)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.IsNullOrDefault``1(System.Nullable{``0})" />
        <element api="M:Zhaord.Extensions.MiscExtensions.SafeConvert(System.ComponentModel.TypeConverter,System.String)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.SafeGet(System.String[],System.Int32)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.ToAllMessages(System.Exception)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.ToElapsedMinutes(System.Diagnostics.Stopwatch)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.ToElapsedSeconds(System.Diagnostics.Stopwatch)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.ToHexString(System.Byte[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Zhaord.Extensions.MiscExtensions">
      <topicdata name="MiscExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.MiscExtensions" />
      <apidata name="MiscExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Extensions.MiscExtensions.CountExecute(System.Data.OleDb.OleDbConnection,System.String)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.Dump(System.Exception)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.GetDataType(System.Data.DataTable,System.String)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.GetMergedDataValue``1(Zhaord.IMergedData,System.String,``0)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.Grow(System.Text.StringBuilder,System.String,System.String)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.HasColumn(System.Data.DataView,System.String)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.IsEqual(System.ComponentModel.TypeConverter,System.String,System.Object)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.IsNullOrDefault``1(System.Nullable{``0})" />
        <element api="M:Zhaord.Extensions.MiscExtensions.SafeConvert(System.ComponentModel.TypeConverter,System.String)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.SafeGet(System.String[],System.Int32)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.ToAllMessages(System.Exception)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.ToElapsedMinutes(System.Diagnostics.Stopwatch)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.ToElapsedSeconds(System.Diagnostics.Stopwatch)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.ToHexString(System.Byte[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.MiscExtensions" />
      </containers>
    </api>
    <api id="M:Zhaord.Extensions.MiscExtensions.CountExecute(System.Data.OleDb.OleDbConnection,System.String)">
      <topicdata group="api" />
      <apidata name="CountExecute" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="conn">
          <type api="T:System.Data.OleDb.OleDbConnection" ref="true" />
        </parameter>
        <parameter name="sqlCount">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.MiscExtensions.Dump(System.Exception)">
      <topicdata group="api" />
      <apidata name="Dump" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="exc">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.MiscExtensions.GetDataType(System.Data.DataTable,System.String)">
      <topicdata group="api" />
      <apidata name="GetDataType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dt">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.MiscExtensions.GetMergedDataValue``1(Zhaord.IMergedData,System.String,``0)">
      <topicdata group="api" />
      <apidata name="GetMergedDataValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="mergedData">
          <type api="T:Zhaord.IMergedData" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultValue">
          <template name="T" index="0" api="M:Zhaord.Extensions.MiscExtensions.GetMergedDataValue``1(Zhaord.IMergedData,System.String,``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Extensions.MiscExtensions.GetMergedDataValue``1(Zhaord.IMergedData,System.String,``0)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.MiscExtensions.Grow(System.Text.StringBuilder,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Grow" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sb">
          <type api="T:System.Text.StringBuilder" ref="true" />
        </parameter>
        <parameter name="grow">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="delimiter">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.MiscExtensions.HasColumn(System.Data.DataView,System.String)">
      <topicdata group="api" />
      <apidata name="HasColumn" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dv">
          <type api="T:System.Data.DataView" ref="true" />
        </parameter>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.MiscExtensions.IsEqual(System.ComponentModel.TypeConverter,System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="IsEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="converter">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="compareWith">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.MiscExtensions.IsNullOrDefault``1(System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="IsNullOrDefault" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.MiscExtensions.IsNullOrDefault``1(System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.MiscExtensions.SafeConvert(System.ComponentModel.TypeConverter,System.String)">
      <topicdata group="api" />
      <apidata name="SafeConvert" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="converter">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.MiscExtensions.SafeGet(System.String[],System.Int32)">
      <topicdata group="api" />
      <apidata name="SafeGet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arr">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.MiscExtensions.ToAllMessages(System.Exception)">
      <topicdata group="api" />
      <apidata name="ToAllMessages" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="exc">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.MiscExtensions.ToElapsedMinutes(System.Diagnostics.Stopwatch)">
      <topicdata group="api" />
      <apidata name="ToElapsedMinutes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="watch">
          <type api="T:System.Diagnostics.Stopwatch" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.MiscExtensions.ToElapsedSeconds(System.Diagnostics.Stopwatch)">
      <topicdata group="api" />
      <apidata name="ToElapsedSeconds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="watch">
          <type api="T:System.Diagnostics.Stopwatch" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.MiscExtensions.ToHexString(System.Byte[],System.Int32)">
      <topicdata group="api" />
      <apidata name="ToHexString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bytes">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="length" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Zhaord.Extensions.StreamExtensions">
      <topicdata group="api" />
      <apidata name="StreamExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.Extensions.StreamExtensions.ContentsEqual(System.IO.Stream,System.IO.Stream)" />
        <element api="M:Zhaord.Extensions.StreamExtensions.ToFile(System.IO.Stream,System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Zhaord.Extensions.StreamExtensions">
      <topicdata name="StreamExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.StreamExtensions" />
      <apidata name="StreamExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Extensions.StreamExtensions.ContentsEqual(System.IO.Stream,System.IO.Stream)" />
        <element api="M:Zhaord.Extensions.StreamExtensions.ToFile(System.IO.Stream,System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StreamExtensions" />
      </containers>
    </api>
    <api id="M:Zhaord.Extensions.StreamExtensions.ContentsEqual(System.IO.Stream,System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="ContentsEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="src">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="other">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StreamExtensions.ToFile(System.IO.Stream,System.String)">
      <topicdata group="api" />
      <apidata name="ToFile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="srcStream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Zhaord.Extensions.StringExtensions">
      <topicdata group="api" />
      <apidata name="StringExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.Extensions.StringExtensions.AttributeEncode(System.String)" />
        <element api="F:Zhaord.Extensions.StringExtensions.CarriageReturn" />
        <element api="F:Zhaord.Extensions.StringExtensions.CarriageReturnLineFeed" />
        <element api="M:Zhaord.Extensions.StringExtensions.ContainsWhiteSpace(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.Dump(System.String,System.Boolean)" />
        <element api="F:Zhaord.Extensions.StringExtensions.Empty" />
        <element api="M:Zhaord.Extensions.StringExtensions.EmptyNull(System.String)" />
        <element api="Overload:Zhaord.Extensions.StringExtensions.EncodeJsString">
          <element api="M:Zhaord.Extensions.StringExtensions.EncodeJsString(System.String)" />
          <element api="M:Zhaord.Extensions.StringExtensions.EncodeJsString(System.String,System.Char,System.Boolean)" />
        </element>
        <element api="M:Zhaord.Extensions.StringExtensions.EnsureEndsWith(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.EnsureNumericOnly(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.EnsureStartsWith(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.FormatCurrent(System.String,System.Object[])" />
        <element api="M:Zhaord.Extensions.StringExtensions.FormatCurrentUI(System.String,System.Object[])" />
        <element api="M:Zhaord.Extensions.StringExtensions.FormatInvariant(System.String,System.Object[])" />
        <element api="Overload:Zhaord.Extensions.StringExtensions.FormatWith">
          <element api="M:Zhaord.Extensions.StringExtensions.FormatWith(System.String,System.Object[])" />
          <element api="M:Zhaord.Extensions.StringExtensions.FormatWith(System.String,System.IFormatProvider,System.Object[])" />
        </element>
        <element api="M:Zhaord.Extensions.StringExtensions.GetLength(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.Grow(System.String,System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.Hash(System.String,System.Text.Encoding,System.Boolean)" />
        <element api="M:Zhaord.Extensions.StringExtensions.HasValue(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.HtmlDecode(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.HtmlEncode(System.String)" />
        <element api="Overload:Zhaord.Extensions.StringExtensions.Indent">
          <element api="M:Zhaord.Extensions.StringExtensions.Indent(System.String,System.Int32)" />
          <element api="M:Zhaord.Extensions.StringExtensions.Indent(System.String,System.Int32,System.Char)" />
        </element>
        <element api="M:Zhaord.Extensions.StringExtensions.IsAlpha(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsAlphaNumeric(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsCaseInsensitiveEqual(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsCaseSensitiveEqual(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsEmail(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsEmpty(System.String)" />
        <element api="Overload:Zhaord.Extensions.StringExtensions.IsEnclosedIn">
          <element api="M:Zhaord.Extensions.StringExtensions.IsEnclosedIn(System.String,System.String)" />
          <element api="M:Zhaord.Extensions.StringExtensions.IsEnclosedIn(System.String,System.String,System.String)" />
          <element api="M:Zhaord.Extensions.StringExtensions.IsEnclosedIn(System.String,System.String,System.StringComparison)" />
          <element api="M:Zhaord.Extensions.StringExtensions.IsEnclosedIn(System.String,System.String,System.String,System.StringComparison)" />
        </element>
        <element api="Overload:Zhaord.Extensions.StringExtensions.IsMatch">
          <element api="M:Zhaord.Extensions.StringExtensions.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)" />
          <element api="M:Zhaord.Extensions.StringExtensions.IsMatch(System.String,System.String,System.Text.RegularExpressions.Match@,System.Text.RegularExpressions.RegexOptions)" />
        </element>
        <element api="M:Zhaord.Extensions.StringExtensions.IsNumeric(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsWebUrl(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsWhiteSpace(System.String)" />
        <element api="F:Zhaord.Extensions.StringExtensions.LineFeed" />
        <element api="M:Zhaord.Extensions.StringExtensions.Mask(System.String,System.Int32)" />
        <element api="M:Zhaord.Extensions.StringExtensions.NaIfEmpty(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.NullEmpty(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.NumberLines(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.Prettify(System.String,System.Boolean,System.Char[])" />
        <element api="M:Zhaord.Extensions.StringExtensions.RegexRemove(System.String,System.String,System.Text.RegularExpressions.RegexOptions)" />
        <element api="M:Zhaord.Extensions.StringExtensions.RegexReplace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)" />
        <element api="Overload:Zhaord.Extensions.StringExtensions.RemoveEncloser">
          <element api="M:Zhaord.Extensions.StringExtensions.RemoveEncloser(System.String,System.String)" />
          <element api="M:Zhaord.Extensions.StringExtensions.RemoveEncloser(System.String,System.String,System.String)" />
          <element api="M:Zhaord.Extensions.StringExtensions.RemoveEncloser(System.String,System.String,System.StringComparison)" />
          <element api="M:Zhaord.Extensions.StringExtensions.RemoveEncloser(System.String,System.String,System.String,System.StringComparison)" />
        </element>
        <element api="Overload:Zhaord.Extensions.StringExtensions.RemoveHtml">
          <element api="M:Zhaord.Extensions.StringExtensions.RemoveHtml(System.String)" />
          <element api="M:Zhaord.Extensions.StringExtensions.RemoveHtml(System.String,System.Collections.Generic.ICollection{System.String})" />
        </element>
        <element api="M:Zhaord.Extensions.StringExtensions.RemoveInvalidXmlChars(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.Replace(System.String,System.Int32,System.Int32,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ReplaceCsvChars(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ReplaceNewLines(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.SanitizeHtmlId(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.Sha(System.String,System.Text.Encoding)" />
        <element api="M:Zhaord.Extensions.StringExtensions.SplitPascalCase(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.SplitSafe(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.SplitToPair(System.String,System.String@,System.String@,System.String)" />
        <element api="F:Zhaord.Extensions.StringExtensions.Tab" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToAttribute(System.String,System.String,System.Boolean)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToCamelCase(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToEnum``1(System.String,``0)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToInt(System.Char)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToIntArray(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToIntArrayContains(System.String,System.Int32,System.Boolean)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToSafe(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToUnicode(System.Char)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToValidFileName(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToValidPath(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.TrimSafe(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.Truncate(System.String,System.Int32,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.UrlDecode(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.UrlEncode(System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Zhaord.Extensions.StringExtensions">
      <topicdata name="StringExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.StringExtensions" />
      <apidata name="StringExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Extensions.StringExtensions.AttributeEncode(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ContainsWhiteSpace(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.Dump(System.String,System.Boolean)" />
        <element api="M:Zhaord.Extensions.StringExtensions.EmptyNull(System.String)" />
        <element api="Overload:Zhaord.Extensions.StringExtensions.EncodeJsString">
          <element api="M:Zhaord.Extensions.StringExtensions.EncodeJsString(System.String)" />
          <element api="M:Zhaord.Extensions.StringExtensions.EncodeJsString(System.String,System.Char,System.Boolean)" />
        </element>
        <element api="M:Zhaord.Extensions.StringExtensions.EnsureEndsWith(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.EnsureNumericOnly(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.EnsureStartsWith(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.FormatCurrent(System.String,System.Object[])" />
        <element api="M:Zhaord.Extensions.StringExtensions.FormatCurrentUI(System.String,System.Object[])" />
        <element api="M:Zhaord.Extensions.StringExtensions.FormatInvariant(System.String,System.Object[])" />
        <element api="Overload:Zhaord.Extensions.StringExtensions.FormatWith">
          <element api="M:Zhaord.Extensions.StringExtensions.FormatWith(System.String,System.Object[])" />
          <element api="M:Zhaord.Extensions.StringExtensions.FormatWith(System.String,System.IFormatProvider,System.Object[])" />
        </element>
        <element api="M:Zhaord.Extensions.StringExtensions.GetLength(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.Grow(System.String,System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.Hash(System.String,System.Text.Encoding,System.Boolean)" />
        <element api="M:Zhaord.Extensions.StringExtensions.HasValue(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.HtmlDecode(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.HtmlEncode(System.String)" />
        <element api="Overload:Zhaord.Extensions.StringExtensions.Indent">
          <element api="M:Zhaord.Extensions.StringExtensions.Indent(System.String,System.Int32)" />
          <element api="M:Zhaord.Extensions.StringExtensions.Indent(System.String,System.Int32,System.Char)" />
        </element>
        <element api="M:Zhaord.Extensions.StringExtensions.IsAlpha(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsAlphaNumeric(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsCaseInsensitiveEqual(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsCaseSensitiveEqual(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsEmail(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsEmpty(System.String)" />
        <element api="Overload:Zhaord.Extensions.StringExtensions.IsEnclosedIn">
          <element api="M:Zhaord.Extensions.StringExtensions.IsEnclosedIn(System.String,System.String)" />
          <element api="M:Zhaord.Extensions.StringExtensions.IsEnclosedIn(System.String,System.String,System.String)" />
          <element api="M:Zhaord.Extensions.StringExtensions.IsEnclosedIn(System.String,System.String,System.StringComparison)" />
          <element api="M:Zhaord.Extensions.StringExtensions.IsEnclosedIn(System.String,System.String,System.String,System.StringComparison)" />
        </element>
        <element api="Overload:Zhaord.Extensions.StringExtensions.IsMatch">
          <element api="M:Zhaord.Extensions.StringExtensions.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)" />
          <element api="M:Zhaord.Extensions.StringExtensions.IsMatch(System.String,System.String,System.Text.RegularExpressions.Match@,System.Text.RegularExpressions.RegexOptions)" />
        </element>
        <element api="M:Zhaord.Extensions.StringExtensions.IsNumeric(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsWebUrl(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsWhiteSpace(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.Mask(System.String,System.Int32)" />
        <element api="M:Zhaord.Extensions.StringExtensions.NaIfEmpty(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.NullEmpty(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.NumberLines(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.Prettify(System.String,System.Boolean,System.Char[])" />
        <element api="M:Zhaord.Extensions.StringExtensions.RegexRemove(System.String,System.String,System.Text.RegularExpressions.RegexOptions)" />
        <element api="M:Zhaord.Extensions.StringExtensions.RegexReplace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)" />
        <element api="Overload:Zhaord.Extensions.StringExtensions.RemoveEncloser">
          <element api="M:Zhaord.Extensions.StringExtensions.RemoveEncloser(System.String,System.String)" />
          <element api="M:Zhaord.Extensions.StringExtensions.RemoveEncloser(System.String,System.String,System.String)" />
          <element api="M:Zhaord.Extensions.StringExtensions.RemoveEncloser(System.String,System.String,System.StringComparison)" />
          <element api="M:Zhaord.Extensions.StringExtensions.RemoveEncloser(System.String,System.String,System.String,System.StringComparison)" />
        </element>
        <element api="Overload:Zhaord.Extensions.StringExtensions.RemoveHtml">
          <element api="M:Zhaord.Extensions.StringExtensions.RemoveHtml(System.String)" />
          <element api="M:Zhaord.Extensions.StringExtensions.RemoveHtml(System.String,System.Collections.Generic.ICollection{System.String})" />
        </element>
        <element api="M:Zhaord.Extensions.StringExtensions.RemoveInvalidXmlChars(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.Replace(System.String,System.Int32,System.Int32,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ReplaceCsvChars(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ReplaceNewLines(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.SanitizeHtmlId(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.Sha(System.String,System.Text.Encoding)" />
        <element api="M:Zhaord.Extensions.StringExtensions.SplitPascalCase(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.SplitSafe(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.SplitToPair(System.String,System.String@,System.String@,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToAttribute(System.String,System.String,System.Boolean)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToCamelCase(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToEnum``1(System.String,``0)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToInt(System.Char)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToIntArray(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToIntArrayContains(System.String,System.Int32,System.Boolean)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToSafe(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToUnicode(System.Char)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToValidFileName(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToValidPath(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.TrimSafe(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.Truncate(System.String,System.Int32,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.UrlDecode(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.UrlEncode(System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" />
      </containers>
    </api>
    <api id="Fields.T:Zhaord.Extensions.StringExtensions">
      <topicdata name="StringExtensions" group="list" subgroup="Fields" typeTopicId="T:Zhaord.Extensions.StringExtensions" />
      <apidata name="StringExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:Zhaord.Extensions.StringExtensions.CarriageReturn" />
        <element api="F:Zhaord.Extensions.StringExtensions.CarriageReturnLineFeed" />
        <element api="F:Zhaord.Extensions.StringExtensions.Empty" />
        <element api="F:Zhaord.Extensions.StringExtensions.LineFeed" />
        <element api="F:Zhaord.Extensions.StringExtensions.Tab" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.StringExtensions.EncodeJsString">
      <topicdata name="EncodeJsString" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="EncodeJsString" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.StringExtensions.EncodeJsString(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.EncodeJsString(System.String,System.Char,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.StringExtensions.FormatWith">
      <topicdata name="FormatWith" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="FormatWith" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.StringExtensions.FormatWith(System.String,System.Object[])" />
        <element api="M:Zhaord.Extensions.StringExtensions.FormatWith(System.String,System.IFormatProvider,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.StringExtensions.Indent">
      <topicdata name="Indent" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Indent" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.StringExtensions.Indent(System.String,System.Int32)" />
        <element api="M:Zhaord.Extensions.StringExtensions.Indent(System.String,System.Int32,System.Char)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.StringExtensions.IsEnclosedIn">
      <topicdata name="IsEnclosedIn" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="IsEnclosedIn" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.StringExtensions.IsEnclosedIn(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsEnclosedIn(System.String,System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsEnclosedIn(System.String,System.String,System.StringComparison)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsEnclosedIn(System.String,System.String,System.String,System.StringComparison)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.StringExtensions.IsMatch">
      <topicdata name="IsMatch" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="IsMatch" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.StringExtensions.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsMatch(System.String,System.String,System.Text.RegularExpressions.Match@,System.Text.RegularExpressions.RegexOptions)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.StringExtensions.RemoveEncloser">
      <topicdata name="RemoveEncloser" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="RemoveEncloser" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.StringExtensions.RemoveEncloser(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.RemoveEncloser(System.String,System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.RemoveEncloser(System.String,System.String,System.StringComparison)" />
        <element api="M:Zhaord.Extensions.StringExtensions.RemoveEncloser(System.String,System.String,System.String,System.StringComparison)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.StringExtensions.RemoveHtml">
      <topicdata name="RemoveHtml" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="RemoveHtml" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.StringExtensions.RemoveHtml(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.RemoveHtml(System.String,System.Collections.Generic.ICollection{System.String})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.AttributeEncode(System.String)">
      <topicdata group="api" />
      <apidata name="AttributeEncode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:Zhaord.Extensions.StringExtensions.CarriageReturn">
      <topicdata group="api" />
      <apidata name="CarriageReturn" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <value />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
    </api>
    <api id="F:Zhaord.Extensions.StringExtensions.CarriageReturnLineFeed">
      <topicdata group="api" />
      <apidata name="CarriageReturnLineFeed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.ContainsWhiteSpace(System.String)">
      <topicdata group="api" />
      <apidata name="ContainsWhiteSpace" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.Dump(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dump" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="appendMarks" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:Zhaord.Extensions.StringExtensions.Empty">
      <topicdata group="api" />
      <apidata name="Empty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.EmptyNull(System.String)">
      <topicdata group="api" />
      <apidata name="EmptyNull" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.EncodeJsString(System.String)">
      <topicdata group="api" />
      <apidata name="EncodeJsString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.EncodeJsString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.EncodeJsString(System.String,System.Char,System.Boolean)">
      <topicdata group="api" />
      <apidata name="EncodeJsString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.EncodeJsString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="delimiter">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="appendDelimiters">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.EnsureEndsWith(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="EnsureEndsWith" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="endWith">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.EnsureNumericOnly(System.String)">
      <topicdata group="api" />
      <apidata name="EnsureNumericOnly" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="str">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.EnsureStartsWith(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="EnsureStartsWith" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="startsWith">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.FormatCurrent(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="FormatCurrent" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="objects" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.FormatCurrentUI(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="FormatCurrentUI" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="objects" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.FormatInvariant(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="FormatInvariant" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="objects" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.FormatWith(System.String,System.IFormatProvider,System.Object[])">
      <topicdata group="api" />
      <apidata name="FormatWith" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.FormatWith" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.FormatWith(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="FormatWith" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.FormatWith" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.GetLength(System.String)">
      <topicdata group="api" />
      <apidata name="GetLength" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.Grow(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Grow" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="grow">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="delimiter">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.Hash(System.String,System.Text.Encoding,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Hash" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
        <parameter name="toBase64" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.HasValue(System.String)">
      <topicdata group="api" />
      <apidata name="HasValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.HtmlDecode(System.String)">
      <topicdata group="api" />
      <apidata name="HtmlDecode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.HtmlEncode(System.String)">
      <topicdata group="api" />
      <apidata name="HtmlEncode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.Indent(System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Indent" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.Indent" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="indentation">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.Indent(System.String,System.Int32,System.Char)">
      <topicdata group="api" />
      <apidata name="Indent" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.Indent" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="indentation">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="indentChar">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.IsAlpha(System.String)">
      <topicdata group="api" />
      <apidata name="IsAlpha" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.IsAlphaNumeric(System.String)">
      <topicdata group="api" />
      <apidata name="IsAlphaNumeric" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.IsCaseInsensitiveEqual(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="IsCaseInsensitiveEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="comparing">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.IsCaseSensitiveEqual(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="IsCaseSensitiveEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="comparing">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.IsEmail(System.String)">
      <topicdata group="api" />
      <apidata name="IsEmail" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.IsEmpty(System.String)">
      <topicdata group="api" />
      <apidata name="IsEmpty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.IsEnclosedIn(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="IsEnclosedIn" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.IsEnclosedIn" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="enclosedIn">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.IsEnclosedIn(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="IsEnclosedIn" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.IsEnclosedIn" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="start">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="end">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.IsEnclosedIn(System.String,System.String,System.String,System.StringComparison)">
      <topicdata group="api" />
      <apidata name="IsEnclosedIn" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.IsEnclosedIn" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="start">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="end">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="comparisonType">
          <type api="T:System.StringComparison" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.IsEnclosedIn(System.String,System.String,System.StringComparison)">
      <topicdata group="api" />
      <apidata name="IsEnclosedIn" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.IsEnclosedIn" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="enclosedIn">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="comparisonType">
          <type api="T:System.StringComparison" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.IsMatch(System.String,System.String,System.Text.RegularExpressions.Match@,System.Text.RegularExpressions.RegexOptions)">
      <topicdata group="api" />
      <apidata name="IsMatch" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.IsMatch" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pattern">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="match" out="true">
          <referenceTo>
            <type api="T:System.Text.RegularExpressions.Match" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="options" optional="true">
          <type api="T:System.Text.RegularExpressions.RegexOptions" ref="false" />
          <argument>
            <type api="T:System.Text.RegularExpressions.RegexOptions" ref="false" />
            <enumValue>
              <field name="None" />
              <field name="IgnoreCase" />
              <field name="Multiline" />
            </enumValue>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <topicdata group="api" />
      <apidata name="IsMatch" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.IsMatch" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pattern">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options" optional="true">
          <type api="T:System.Text.RegularExpressions.RegexOptions" ref="false" />
          <argument>
            <type api="T:System.Text.RegularExpressions.RegexOptions" ref="false" />
            <enumValue>
              <field name="None" />
              <field name="IgnoreCase" />
              <field name="Multiline" />
            </enumValue>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.IsNumeric(System.String)">
      <topicdata group="api" />
      <apidata name="IsNumeric" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.IsWebUrl(System.String)">
      <topicdata group="api" />
      <apidata name="IsWebUrl" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.IsWhiteSpace(System.String)">
      <topicdata group="api" />
      <apidata name="IsWhiteSpace" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:Zhaord.Extensions.StringExtensions.LineFeed">
      <topicdata group="api" />
      <apidata name="LineFeed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <value />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.Mask(System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Mask" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.NaIfEmpty(System.String)">
      <topicdata group="api" />
      <apidata name="NaIfEmpty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.NullEmpty(System.String)">
      <topicdata group="api" />
      <apidata name="NullEmpty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.NumberLines(System.String)">
      <topicdata group="api" />
      <apidata name="NumberLines" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.Prettify(System.String,System.Boolean,System.Char[])">
      <topicdata group="api" />
      <apidata name="Prettify" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="allowSpace" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
        <parameter name="allowChars" optional="true">
          <arrayOf rank="1">
            <type api="T:System.Char" ref="false" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.RegexRemove(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <topicdata group="api" />
      <apidata name="RegexRemove" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pattern">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options" optional="true">
          <type api="T:System.Text.RegularExpressions.RegexOptions" ref="false" />
          <argument>
            <type api="T:System.Text.RegularExpressions.RegexOptions" ref="false" />
            <enumValue>
              <field name="None" />
              <field name="IgnoreCase" />
              <field name="Multiline" />
            </enumValue>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.RegexReplace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <topicdata group="api" />
      <apidata name="RegexReplace" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pattern">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="replacement">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options" optional="true">
          <type api="T:System.Text.RegularExpressions.RegexOptions" ref="false" />
          <argument>
            <type api="T:System.Text.RegularExpressions.RegexOptions" ref="false" />
            <enumValue>
              <field name="None" />
              <field name="IgnoreCase" />
              <field name="Multiline" />
            </enumValue>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.RemoveEncloser(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="RemoveEncloser" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.RemoveEncloser" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encloser">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.RemoveEncloser(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="RemoveEncloser" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.RemoveEncloser" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="start">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="end">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.RemoveEncloser(System.String,System.String,System.String,System.StringComparison)">
      <topicdata group="api" />
      <apidata name="RemoveEncloser" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.RemoveEncloser" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="start">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="end">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="comparisonType">
          <type api="T:System.StringComparison" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.RemoveEncloser(System.String,System.String,System.StringComparison)">
      <topicdata group="api" />
      <apidata name="RemoveEncloser" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.RemoveEncloser" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encloser">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="comparisonType">
          <type api="T:System.StringComparison" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.RemoveHtml(System.String)">
      <topicdata group="api" />
      <apidata name="RemoveHtml" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.RemoveHtml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.RemoveHtml(System.String,System.Collections.Generic.ICollection{System.String})">
      <topicdata group="api" />
      <apidata name="RemoveHtml" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.RemoveHtml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="removeTags">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.RemoveInvalidXmlChars(System.String)">
      <topicdata group="api" />
      <apidata name="RemoveInvalidXmlChars" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.Replace(System.String,System.Int32,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="Replace" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="x1">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="x2">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="replaceBy" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.ReplaceCsvChars(System.String)">
      <topicdata group="api" />
      <apidata name="ReplaceCsvChars" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.ReplaceNewLines(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ReplaceNewLines" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="replacement">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.SanitizeHtmlId(System.String)">
      <topicdata group="api" />
      <apidata name="SanitizeHtmlId" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.Sha(System.String,System.Text.Encoding)">
      <topicdata group="api" />
      <apidata name="Sha" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.SplitPascalCase(System.String)">
      <topicdata group="api" />
      <apidata name="SplitPascalCase" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.SplitSafe(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="SplitSafe" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="separator">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.SplitToPair(System.String,System.String@,System.String@,System.String)">
      <topicdata group="api" />
      <apidata name="SplitToPair" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="strLeft" out="true">
          <referenceTo>
            <type api="T:System.String" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="strRight" out="true">
          <referenceTo>
            <type api="T:System.String" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="delimiter">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:Zhaord.Extensions.StringExtensions.Tab">
      <topicdata group="api" />
      <apidata name="Tab" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <value />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.ToAttribute(System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="ToAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="htmlEncode" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.ToCamelCase(System.String)">
      <topicdata group="api" />
      <apidata name="ToCamelCase" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.ToEnum``1(System.String,``0)">
      <topicdata group="api" />
      <apidata name="ToEnum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultValue">
          <template name="T" index="0" api="M:Zhaord.Extensions.StringExtensions.ToEnum``1(System.String,``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Extensions.StringExtensions.ToEnum``1(System.String,``0)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.ToInt(System.Char)">
      <topicdata group="api" />
      <apidata name="ToInt" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.ToIntArray(System.String)">
      <topicdata group="api" />
      <apidata name="ToIntArray" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Int32" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.ToIntArrayContains(System.String,System.Int32,System.Boolean)">
      <topicdata group="api" />
      <apidata name="ToIntArrayContains" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="defaultValue">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.ToSafe(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ToSafe" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultValue" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.ToUnicode(System.Char)">
      <topicdata group="api" />
      <apidata name="ToUnicode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="c">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.ToValidFileName(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ToValidFileName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="replacement" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>-</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.ToValidPath(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ToValidPath" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="replacement" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>-</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.TrimSafe(System.String)">
      <topicdata group="api" />
      <apidata name="TrimSafe" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.Truncate(System.String,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="Truncate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="maxLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="suffix" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.UrlDecode(System.String)">
      <topicdata group="api" />
      <apidata name="UrlDecode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.UrlEncode(System.String)">
      <topicdata group="api" />
      <apidata name="UrlEncode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Zhaord.Extensions.TypeDescriptorExtensions">
      <topicdata group="api" />
      <apidata name="TypeDescriptorExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes">
          <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes``1(System.ComponentModel.ICustomTypeDescriptor)" />
          <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes``1(System.ComponentModel.PropertyDescriptor)" />
          <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes``1(System.ComponentModel.PropertyDescriptor,System.Func{``0,System.Boolean})" />
        </element>
        <element api="Overload:Zhaord.Extensions.TypeDescriptorExtensions.GetPropertiesWith">
          <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetPropertiesWith``1(System.ComponentModel.ICustomTypeDescriptor)" />
          <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetPropertiesWith``1(System.ComponentModel.ICustomTypeDescriptor,System.Func{``0,System.Boolean})" />
        </element>
        <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetProperty(System.ComponentModel.ICustomTypeDescriptor,System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Zhaord.Extensions.TypeDescriptorExtensions">
      <topicdata name="TypeDescriptorExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.TypeDescriptorExtensions" />
      <apidata name="TypeDescriptorExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes">
          <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes``1(System.ComponentModel.ICustomTypeDescriptor)" />
          <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes``1(System.ComponentModel.PropertyDescriptor)" />
          <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes``1(System.ComponentModel.PropertyDescriptor,System.Func{``0,System.Boolean})" />
        </element>
        <element api="Overload:Zhaord.Extensions.TypeDescriptorExtensions.GetPropertiesWith">
          <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetPropertiesWith``1(System.ComponentModel.ICustomTypeDescriptor)" />
          <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetPropertiesWith``1(System.ComponentModel.ICustomTypeDescriptor,System.Func{``0,System.Boolean})" />
        </element>
        <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetProperty(System.ComponentModel.ICustomTypeDescriptor,System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeDescriptorExtensions" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes">
      <topicdata name="GetAttributes" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="GetAttributes" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes``1(System.ComponentModel.ICustomTypeDescriptor)" />
        <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes``1(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes``1(System.ComponentModel.PropertyDescriptor,System.Func{``0,System.Boolean})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeDescriptorExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.TypeDescriptorExtensions.GetPropertiesWith">
      <topicdata name="GetPropertiesWith" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="GetPropertiesWith" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetPropertiesWith``1(System.ComponentModel.ICustomTypeDescriptor)" />
        <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetPropertiesWith``1(System.ComponentModel.ICustomTypeDescriptor,System.Func{``0,System.Boolean})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeDescriptorExtensions" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes``1(System.ComponentModel.ICustomTypeDescriptor)">
      <topicdata group="api" />
      <apidata name="GetAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAttribute">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="td">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TAttribute" index="0" api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes``1(System.ComponentModel.ICustomTypeDescriptor)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeDescriptorExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes``1(System.ComponentModel.PropertyDescriptor)">
      <topicdata group="api" />
      <apidata name="GetAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAttribute">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="pd">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TAttribute" index="0" api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes``1(System.ComponentModel.PropertyDescriptor)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeDescriptorExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes``1(System.ComponentModel.PropertyDescriptor,System.Func{``0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="GetAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAttribute">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="pd">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TAttribute" index="0" api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes``1(System.ComponentModel.PropertyDescriptor,System.Func{``0,System.Boolean})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TAttribute" index="0" api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes``1(System.ComponentModel.PropertyDescriptor,System.Func{``0,System.Boolean})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeDescriptorExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeDescriptorExtensions.GetPropertiesWith``1(System.ComponentModel.ICustomTypeDescriptor)">
      <topicdata group="api" />
      <apidata name="GetPropertiesWith" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.TypeDescriptorExtensions.GetPropertiesWith" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAttribute">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="td">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeDescriptorExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeDescriptorExtensions.GetPropertiesWith``1(System.ComponentModel.ICustomTypeDescriptor,System.Func{``0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="GetPropertiesWith" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.TypeDescriptorExtensions.GetPropertiesWith" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAttribute">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="td">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TAttribute" index="0" api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetPropertiesWith``1(System.ComponentModel.ICustomTypeDescriptor,System.Func{``0,System.Boolean})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeDescriptorExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeDescriptorExtensions.GetProperty(System.ComponentModel.ICustomTypeDescriptor,System.String)">
      <topicdata group="api" />
      <apidata name="GetProperty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="td">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeDescriptorExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Zhaord.Extensions.TypeExtensions">
      <topicdata group="api" />
      <apidata name="TypeExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.Extensions.TypeExtensions.AssemblyQualifiedNameWithoutVersion(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.CanReadValue(System.Reflection.MemberInfo)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.CanSetValue(System.Reflection.MemberInfo)" />
        <element api="Overload:Zhaord.Extensions.TypeExtensions.CreateGeneric">
          <element api="M:Zhaord.Extensions.TypeExtensions.CreateGeneric(System.Type,System.Type,System.Object[])" />
          <element api="M:Zhaord.Extensions.TypeExtensions.CreateGeneric(System.Type,System.Type[],System.Object[])" />
          <element api="M:Zhaord.Extensions.TypeExtensions.CreateGeneric(System.Type,System.Type[],System.Func{System.Type,System.Object[],System.Object},System.Object[])" />
        </element>
        <element api="M:Zhaord.Extensions.TypeExtensions.CreateGenericList(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.FindMembers(System.Type,System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetAllAttributes``1(System.Reflection.MemberInfo,System.Boolean)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetAttribute``1(System.Reflection.ICustomAttributeProvider,System.Boolean)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetAttributes``1(System.Reflection.ICustomAttributeProvider,System.Boolean)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetFieldOrProperty(System.Type,System.String,System.Boolean)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetFieldsAndProperties(System.Type,System.Reflection.BindingFlags)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetNameAndAssemblyName(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetNonNullableType(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetPropertyFromMethod(System.Reflection.MethodBase)" />
        <element api="Overload:Zhaord.Extensions.TypeExtensions.GetSingleMember">
          <element api="M:Zhaord.Extensions.TypeExtensions.GetSingleMember(System.Type,System.String,System.Reflection.MemberTypes)" />
          <element api="M:Zhaord.Extensions.TypeExtensions.GetSingleMember(System.Type,System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" />
        </element>
        <element api="M:Zhaord.Extensions.TypeExtensions.GetValue(System.Reflection.MemberInfo,System.Object)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.HasAttribute``1(System.Reflection.ICustomAttributeProvider,System.Boolean)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.HasDefaultConstructor(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsAnonymous(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsConstructable(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsEnumerable(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsGenericDictionary(System.Type)" />
        <element api="Overload:Zhaord.Extensions.TypeExtensions.IsIndexed">
          <element api="M:Zhaord.Extensions.TypeExtensions.IsIndexed(System.Reflection.MemberInfo)" />
          <element api="M:Zhaord.Extensions.TypeExtensions.IsIndexed(System.Reflection.PropertyInfo)" />
        </element>
        <element api="M:Zhaord.Extensions.TypeExtensions.IsInteger(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsNullable(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsNullAssignable(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsPredefinedGenericType(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsPredefinedSimpleType(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsPredefinedType(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsSequenceType(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsStruct(System.Type)" />
        <element api="Overload:Zhaord.Extensions.TypeExtensions.IsSubClass">
          <element api="M:Zhaord.Extensions.TypeExtensions.IsSubClass(System.Type,System.Type)" />
          <element api="M:Zhaord.Extensions.TypeExtensions.IsSubClass(System.Type,System.Type,System.Type@)" />
        </element>
        <element api="M:Zhaord.Extensions.TypeExtensions.IsType``1(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.SetValue(System.Reflection.MemberInfo,System.Object,System.Object)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Zhaord.Extensions.TypeExtensions">
      <topicdata name="TypeExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.TypeExtensions" />
      <apidata name="TypeExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Extensions.TypeExtensions.AssemblyQualifiedNameWithoutVersion(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.CanReadValue(System.Reflection.MemberInfo)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.CanSetValue(System.Reflection.MemberInfo)" />
        <element api="Overload:Zhaord.Extensions.TypeExtensions.CreateGeneric">
          <element api="M:Zhaord.Extensions.TypeExtensions.CreateGeneric(System.Type,System.Type,System.Object[])" />
          <element api="M:Zhaord.Extensions.TypeExtensions.CreateGeneric(System.Type,System.Type[],System.Object[])" />
          <element api="M:Zhaord.Extensions.TypeExtensions.CreateGeneric(System.Type,System.Type[],System.Func{System.Type,System.Object[],System.Object},System.Object[])" />
        </element>
        <element api="M:Zhaord.Extensions.TypeExtensions.CreateGenericList(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.FindMembers(System.Type,System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetAllAttributes``1(System.Reflection.MemberInfo,System.Boolean)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetAttribute``1(System.Reflection.ICustomAttributeProvider,System.Boolean)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetAttributes``1(System.Reflection.ICustomAttributeProvider,System.Boolean)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetFieldOrProperty(System.Type,System.String,System.Boolean)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetFieldsAndProperties(System.Type,System.Reflection.BindingFlags)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetNameAndAssemblyName(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetNonNullableType(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetPropertyFromMethod(System.Reflection.MethodBase)" />
        <element api="Overload:Zhaord.Extensions.TypeExtensions.GetSingleMember">
          <element api="M:Zhaord.Extensions.TypeExtensions.GetSingleMember(System.Type,System.String,System.Reflection.MemberTypes)" />
          <element api="M:Zhaord.Extensions.TypeExtensions.GetSingleMember(System.Type,System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" />
        </element>
        <element api="M:Zhaord.Extensions.TypeExtensions.GetValue(System.Reflection.MemberInfo,System.Object)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.HasAttribute``1(System.Reflection.ICustomAttributeProvider,System.Boolean)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.HasDefaultConstructor(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsAnonymous(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsConstructable(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsEnumerable(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsGenericDictionary(System.Type)" />
        <element api="Overload:Zhaord.Extensions.TypeExtensions.IsIndexed">
          <element api="M:Zhaord.Extensions.TypeExtensions.IsIndexed(System.Reflection.MemberInfo)" />
          <element api="M:Zhaord.Extensions.TypeExtensions.IsIndexed(System.Reflection.PropertyInfo)" />
        </element>
        <element api="M:Zhaord.Extensions.TypeExtensions.IsInteger(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsNullable(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsNullAssignable(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsPredefinedGenericType(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsPredefinedSimpleType(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsPredefinedType(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsSequenceType(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsStruct(System.Type)" />
        <element api="Overload:Zhaord.Extensions.TypeExtensions.IsSubClass">
          <element api="M:Zhaord.Extensions.TypeExtensions.IsSubClass(System.Type,System.Type)" />
          <element api="M:Zhaord.Extensions.TypeExtensions.IsSubClass(System.Type,System.Type,System.Type@)" />
        </element>
        <element api="M:Zhaord.Extensions.TypeExtensions.IsType``1(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.SetValue(System.Reflection.MemberInfo,System.Object,System.Object)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.TypeExtensions.CreateGeneric">
      <topicdata name="CreateGeneric" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="CreateGeneric" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.TypeExtensions.CreateGeneric(System.Type,System.Type,System.Object[])" />
        <element api="M:Zhaord.Extensions.TypeExtensions.CreateGeneric(System.Type,System.Type[],System.Object[])" />
        <element api="M:Zhaord.Extensions.TypeExtensions.CreateGeneric(System.Type,System.Type[],System.Func{System.Type,System.Object[],System.Object},System.Object[])" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.TypeExtensions.GetSingleMember">
      <topicdata name="GetSingleMember" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="GetSingleMember" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.TypeExtensions.GetSingleMember(System.Type,System.String,System.Reflection.MemberTypes)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetSingleMember(System.Type,System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.TypeExtensions.IsIndexed">
      <topicdata name="IsIndexed" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="IsIndexed" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.TypeExtensions.IsIndexed(System.Reflection.MemberInfo)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsIndexed(System.Reflection.PropertyInfo)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.TypeExtensions.IsSubClass">
      <topicdata name="IsSubClass" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="IsSubClass" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.TypeExtensions.IsSubClass(System.Type,System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsSubClass(System.Type,System.Type,System.Type@)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.AssemblyQualifiedNameWithoutVersion(System.Type)">
      <topicdata group="api" />
      <apidata name="AssemblyQualifiedNameWithoutVersion" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.CanReadValue(System.Reflection.MemberInfo)">
      <topicdata group="api" />
      <apidata name="CanReadValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="member">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.CanSetValue(System.Reflection.MemberInfo)">
      <topicdata group="api" />
      <apidata name="CanSetValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="member">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.CreateGeneric(System.Type,System.Type,System.Object[])">
      <topicdata group="api" />
      <apidata name="CreateGeneric" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.TypeExtensions.CreateGeneric" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="genericTypeDefinition">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="innerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.CreateGeneric(System.Type,System.Type[],System.Func{System.Type,System.Object[],System.Object},System.Object[])">
      <topicdata group="api" />
      <apidata name="CreateGeneric" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.TypeExtensions.CreateGeneric" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="genericTypeDefinition">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="innerTypes">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="instanceCreator">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
              <arrayOf rank="1">
                <type api="T:System.Object" ref="true" />
              </arrayOf>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.CreateGeneric(System.Type,System.Type[],System.Object[])">
      <topicdata group="api" />
      <apidata name="CreateGeneric" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.TypeExtensions.CreateGeneric" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="genericTypeDefinition">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="innerTypes">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.CreateGenericList(System.Type)">
      <topicdata group="api" />
      <apidata name="CreateGenericList" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="listType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.IList" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.FindMembers(System.Type,System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
      <topicdata group="api" />
      <apidata name="FindMembers" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="memberType">
          <type api="T:System.Reflection.MemberTypes" ref="false" />
        </parameter>
        <parameter name="bindingAttr">
          <type api="T:System.Reflection.BindingFlags" ref="false" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.Reflection.MemberFilter" ref="true" />
        </parameter>
        <parameter name="filterCriteria">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Reflection.MemberInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.GetAllAttributes``1(System.Reflection.MemberInfo,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetAllAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAttribute">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="member">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
        <parameter name="inherits">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <template name="TAttribute" index="0" api="M:Zhaord.Extensions.TypeExtensions.GetAllAttributes``1(System.Reflection.MemberInfo,System.Boolean)" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.GetAttribute``1(System.Reflection.ICustomAttributeProvider,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAttribute">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="target">
          <type api="T:System.Reflection.ICustomAttributeProvider" ref="true" />
        </parameter>
        <parameter name="inherits">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="TAttribute" index="0" api="M:Zhaord.Extensions.TypeExtensions.GetAttribute``1(System.Reflection.ICustomAttributeProvider,System.Boolean)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.GetAttributes``1(System.Reflection.ICustomAttributeProvider,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAttribute">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="target">
          <type api="T:System.Reflection.ICustomAttributeProvider" ref="true" />
        </parameter>
        <parameter name="inherits">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <template name="TAttribute" index="0" api="M:Zhaord.Extensions.TypeExtensions.GetAttributes``1(System.Reflection.ICustomAttributeProvider,System.Boolean)" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.GetFieldOrProperty(System.Type,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetFieldOrProperty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ignoreCase">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Reflection.MemberInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.GetFieldsAndProperties(System.Type,System.Reflection.BindingFlags)">
      <topicdata group="api" />
      <apidata name="GetFieldsAndProperties" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="bindingAttr">
          <type api="T:System.Reflection.BindingFlags" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Reflection.MemberInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.GetNameAndAssemblyName(System.Type)">
      <topicdata group="api" />
      <apidata name="GetNameAndAssemblyName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.GetNonNullableType(System.Type)">
      <topicdata group="api" />
      <apidata name="GetNonNullableType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.GetPropertyFromMethod(System.Reflection.MethodBase)">
      <topicdata group="api" />
      <apidata name="GetPropertyFromMethod" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="method">
          <type api="T:System.Reflection.MethodBase" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Reflection.PropertyInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.GetSingleMember(System.Type,System.String,System.Reflection.MemberTypes)">
      <topicdata group="api" />
      <apidata name="GetSingleMember" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.TypeExtensions.GetSingleMember" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="memberTypes">
          <type api="T:System.Reflection.MemberTypes" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Reflection.MemberInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.GetSingleMember(System.Type,System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
      <topicdata group="api" />
      <apidata name="GetSingleMember" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.TypeExtensions.GetSingleMember" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="memberTypes">
          <type api="T:System.Reflection.MemberTypes" ref="false" />
        </parameter>
        <parameter name="bindingAttr">
          <type api="T:System.Reflection.BindingFlags" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Reflection.MemberInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.GetValue(System.Reflection.MemberInfo,System.Object)">
      <topicdata group="api" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="member">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.HasAttribute``1(System.Reflection.ICustomAttributeProvider,System.Boolean)">
      <topicdata group="api" />
      <apidata name="HasAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAttribute">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="target">
          <type api="T:System.Reflection.ICustomAttributeProvider" ref="true" />
        </parameter>
        <parameter name="inherits">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.HasDefaultConstructor(System.Type)">
      <topicdata group="api" />
      <apidata name="HasDefaultConstructor" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsAnonymous(System.Type)">
      <topicdata group="api" />
      <apidata name="IsAnonymous" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsConstructable(System.Type)">
      <topicdata group="api" />
      <apidata name="IsConstructable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsEnumerable(System.Type)">
      <topicdata group="api" />
      <apidata name="IsEnumerable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsGenericDictionary(System.Type)">
      <topicdata group="api" />
      <apidata name="IsGenericDictionary" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsIndexed(System.Reflection.MemberInfo)">
      <topicdata group="api" />
      <apidata name="IsIndexed" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.TypeExtensions.IsIndexed" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="member">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsIndexed(System.Reflection.PropertyInfo)">
      <topicdata group="api" />
      <apidata name="IsIndexed" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.TypeExtensions.IsIndexed" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="property">
          <type api="T:System.Reflection.PropertyInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsInteger(System.Type)">
      <topicdata group="api" />
      <apidata name="IsInteger" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsNullable(System.Type)">
      <topicdata group="api" />
      <apidata name="IsNullable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsNullAssignable(System.Type)">
      <topicdata group="api" />
      <apidata name="IsNullAssignable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsPredefinedGenericType(System.Type)">
      <topicdata group="api" />
      <apidata name="IsPredefinedGenericType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsPredefinedSimpleType(System.Type)">
      <topicdata group="api" />
      <apidata name="IsPredefinedSimpleType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsPredefinedType(System.Type)">
      <topicdata group="api" />
      <apidata name="IsPredefinedType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsSequenceType(System.Type)">
      <topicdata group="api" />
      <apidata name="IsSequenceType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="seqType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsStruct(System.Type)">
      <topicdata group="api" />
      <apidata name="IsStruct" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsSubClass(System.Type,System.Type)">
      <topicdata group="api" />
      <apidata name="IsSubClass" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.TypeExtensions.IsSubClass" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="check">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsSubClass(System.Type,System.Type,System.Type@)">
      <topicdata group="api" />
      <apidata name="IsSubClass" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.TypeExtensions.IsSubClass" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="check">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="implementingType" out="true">
          <referenceTo>
            <type api="T:System.Type" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsType``1(System.Type)">
      <topicdata group="api" />
      <apidata name="IsType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TType" />
      </templates>
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.SetValue(System.Reflection.MemberInfo,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="SetValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="member">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Zhaord.Extensions.XmlNodeExtensions">
      <topicdata group="api" />
      <apidata name="XmlNodeExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Zhaord.Extensions.XmlNodeExtensions.GetAttributeText">
          <element api="M:Zhaord.Extensions.XmlNodeExtensions.GetAttributeText(System.Xml.XmlNode,System.String)" />
          <element api="M:Zhaord.Extensions.XmlNodeExtensions.GetAttributeText``1(System.Xml.XmlNode,System.String,``0)" />
        </element>
        <element api="Overload:Zhaord.Extensions.XmlNodeExtensions.GetText">
          <element api="M:Zhaord.Extensions.XmlNodeExtensions.GetText(System.Xml.XmlNode,System.String,System.String)" />
          <element api="M:Zhaord.Extensions.XmlNodeExtensions.GetText``1(System.Xml.XmlNode,System.String,``0)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Zhaord.Extensions.XmlNodeExtensions">
      <topicdata name="XmlNodeExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.XmlNodeExtensions" />
      <apidata name="XmlNodeExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:Zhaord.Extensions.XmlNodeExtensions.GetAttributeText">
          <element api="M:Zhaord.Extensions.XmlNodeExtensions.GetAttributeText(System.Xml.XmlNode,System.String)" />
          <element api="M:Zhaord.Extensions.XmlNodeExtensions.GetAttributeText``1(System.Xml.XmlNode,System.String,``0)" />
        </element>
        <element api="Overload:Zhaord.Extensions.XmlNodeExtensions.GetText">
          <element api="M:Zhaord.Extensions.XmlNodeExtensions.GetText(System.Xml.XmlNode,System.String,System.String)" />
          <element api="M:Zhaord.Extensions.XmlNodeExtensions.GetText``1(System.Xml.XmlNode,System.String,``0)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.XmlNodeExtensions" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.XmlNodeExtensions.GetAttributeText">
      <topicdata name="GetAttributeText" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="GetAttributeText" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.XmlNodeExtensions.GetAttributeText(System.Xml.XmlNode,System.String)" />
        <element api="M:Zhaord.Extensions.XmlNodeExtensions.GetAttributeText``1(System.Xml.XmlNode,System.String,``0)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.XmlNodeExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Extensions.XmlNodeExtensions.GetText">
      <topicdata name="GetText" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="GetText" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.XmlNodeExtensions.GetText(System.Xml.XmlNode,System.String,System.String)" />
        <element api="M:Zhaord.Extensions.XmlNodeExtensions.GetText``1(System.Xml.XmlNode,System.String,``0)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.XmlNodeExtensions" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Extensions.XmlNodeExtensions.GetAttributeText(System.Xml.XmlNode,System.String)">
      <topicdata group="api" />
      <apidata name="GetAttributeText" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.XmlNodeExtensions.GetAttributeText" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
        <parameter name="attributeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.XmlNodeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.XmlNodeExtensions.GetAttributeText``1(System.Xml.XmlNode,System.String,``0)">
      <topicdata group="api" />
      <apidata name="GetAttributeText" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.XmlNodeExtensions.GetAttributeText" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="node">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
        <parameter name="attributeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultValue" optional="true">
          <template name="T" index="0" api="M:Zhaord.Extensions.XmlNodeExtensions.GetAttributeText``1(System.Xml.XmlNode,System.String,``0)" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Extensions.XmlNodeExtensions.GetAttributeText``1(System.Xml.XmlNode,System.String,``0)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.XmlNodeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.XmlNodeExtensions.GetText(System.Xml.XmlNode,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="GetText" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.XmlNodeExtensions.GetText" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
        <parameter name="xpath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="defaultValue" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.XmlNodeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.XmlNodeExtensions.GetText``1(System.Xml.XmlNode,System.String,``0)">
      <topicdata group="api" />
      <apidata name="GetText" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.XmlNodeExtensions.GetText" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="node">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
        <parameter name="xpath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="defaultValue" optional="true">
          <template name="T" index="0" api="M:Zhaord.Extensions.XmlNodeExtensions.GetText``1(System.Xml.XmlNode,System.String,``0)" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Extensions.XmlNodeExtensions.GetText``1(System.Xml.XmlNode,System.String,``0)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.XmlNodeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Zhaord.Extensions.XmlWriterExtensions">
      <topicdata group="api" />
      <apidata name="XmlWriterExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.Extensions.XmlWriterExtensions.WriteCData(System.Xml.XmlWriter,System.String,System.String,System.String,System.String)" />
        <element api="M:Zhaord.Extensions.XmlWriterExtensions.WriteNode(System.Xml.XmlWriter,System.String,System.Action)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Zhaord.Extensions.XmlWriterExtensions">
      <topicdata name="XmlWriterExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.XmlWriterExtensions" />
      <apidata name="XmlWriterExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Extensions.XmlWriterExtensions.WriteCData(System.Xml.XmlWriter,System.String,System.String,System.String,System.String)" />
        <element api="M:Zhaord.Extensions.XmlWriterExtensions.WriteNode(System.Xml.XmlWriter,System.String,System.Action)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.XmlWriterExtensions" />
      </containers>
    </api>
    <api id="M:Zhaord.Extensions.XmlWriterExtensions.WriteCData(System.Xml.XmlWriter,System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteCData" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="prefix" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="ns" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.XmlWriterExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Extensions.XmlWriterExtensions.WriteNode(System.Xml.XmlWriter,System.String,System.Action)">
      <topicdata group="api" />
      <apidata name="WriteNode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="content">
          <type api="T:System.Action" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.XmlWriterExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="N:Zhaord.Localization">
      <topicdata group="api" />
      <apidata name="Zhaord.Localization" group="namespace" />
      <elements>
        <element api="T:Zhaord.Localization.LocalizedString" />
        <element api="T:Zhaord.Localization.Localizer" />
        <element api="T:Zhaord.Localization.NullLocalizer" />
      </elements>
    </api>
    <api id="T:Zhaord.Localization.LocalizedString">
      <topicdata group="api" />
      <apidata name="LocalizedString" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Web.IHtmlString" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.Localization.LocalizedString.#ctor">
          <element api="M:Zhaord.Localization.LocalizedString.#ctor(System.String)" />
          <element api="M:Zhaord.Localization.LocalizedString.#ctor(System.String,System.String,System.Object[])" />
        </element>
        <element api="P:Zhaord.Localization.LocalizedString.Args" />
        <element api="M:Zhaord.Localization.LocalizedString.Equals(System.Object)" />
        <element api="M:Zhaord.Localization.LocalizedString.GetHashCode" />
        <element api="Overload:Zhaord.Localization.LocalizedString.op_Implicit">
          <element api="M:Zhaord.Localization.LocalizedString.op_Implicit(System.String)~Zhaord.Localization.LocalizedString" />
          <element api="M:Zhaord.Localization.LocalizedString.op_Implicit(Zhaord.Localization.LocalizedString)~System.String" />
        </element>
        <element api="P:Zhaord.Localization.LocalizedString.Text" />
        <element api="P:Zhaord.Localization.LocalizedString.TextHint" />
        <element api="M:Zhaord.Localization.LocalizedString.TextOrDefault(System.String,Zhaord.Localization.LocalizedString)" />
        <element api="M:Zhaord.Localization.LocalizedString.ToHtmlString" />
        <element api="M:Zhaord.Localization.LocalizedString.ToString" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Localization" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Localization.LocalizedString">
      <topicdata name="LocalizedString" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Localization.LocalizedString" />
      <apidata name="LocalizedString" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Localization.LocalizedString.Equals(System.Object)" />
        <element api="M:Zhaord.Localization.LocalizedString.GetHashCode" />
        <element api="M:Zhaord.Localization.LocalizedString.TextOrDefault(System.String,Zhaord.Localization.LocalizedString)" />
        <element api="M:Zhaord.Localization.LocalizedString.ToHtmlString" />
        <element api="M:Zhaord.Localization.LocalizedString.ToString" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" />
      </containers>
    </api>
    <api id="Operators.T:Zhaord.Localization.LocalizedString">
      <topicdata name="LocalizedString" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:Zhaord.Localization.LocalizedString" />
      <apidata name="LocalizedString" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="Overload:Zhaord.Localization.LocalizedString.op_Implicit">
          <element api="M:Zhaord.Localization.LocalizedString.op_Implicit(System.String)~Zhaord.Localization.LocalizedString" />
          <element api="M:Zhaord.Localization.LocalizedString.op_Implicit(Zhaord.Localization.LocalizedString)~System.String" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.Localization.LocalizedString">
      <topicdata name="LocalizedString" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Localization.LocalizedString" />
      <apidata name="LocalizedString" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:Zhaord.Localization.LocalizedString.Args" />
        <element api="P:Zhaord.Localization.LocalizedString.Text" />
        <element api="P:Zhaord.Localization.LocalizedString.TextHint" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Localization.LocalizedString.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Zhaord.Localization.LocalizedString.#ctor(System.String)" />
        <element api="M:Zhaord.Localization.LocalizedString.#ctor(System.String,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Localization.LocalizedString.op_Implicit">
      <topicdata name="Implicit" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Zhaord.Localization.LocalizedString.op_Implicit(System.String)~Zhaord.Localization.LocalizedString" />
        <element api="M:Zhaord.Localization.LocalizedString.op_Implicit(Zhaord.Localization.LocalizedString)~System.String" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Localization.LocalizedString.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.Localization.LocalizedString.#ctor" />
      <parameters>
        <parameter name="localized">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Localization.LocalizedString.#ctor(System.String,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.Localization.LocalizedString.#ctor" />
      <parameters>
        <parameter name="localized">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="textHint">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Localization.LocalizedString.Args">
      <topicdata group="api" />
      <apidata name="Args" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Args" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Localization.LocalizedString.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Localization.LocalizedString.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Localization.LocalizedString.op_Implicit(System.String)~Zhaord.Localization.LocalizedString">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:Zhaord.Localization.LocalizedString.op_Implicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Localization.LocalizedString.op_Implicit(Zhaord.Localization.LocalizedString)~System.String">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:Zhaord.Localization.LocalizedString.op_Implicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Localization.LocalizedString.Text">
      <topicdata group="api" />
      <apidata name="Text" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Text" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Localization.LocalizedString.TextHint">
      <topicdata group="api" />
      <apidata name="TextHint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TextHint" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Localization.LocalizedString.TextOrDefault(System.String,Zhaord.Localization.LocalizedString)">
      <topicdata group="api" />
      <apidata name="TextOrDefault" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultValue">
          <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Localization.LocalizedString.ToHtmlString">
      <topicdata group="api" />
      <apidata name="ToHtmlString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Web.IHtmlString.ToHtmlString">
          <type api="T:System.Web.IHtmlString" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Localization.LocalizedString.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.Localization.Localizer">
      <topicdata group="api" />
      <apidata name="Localizer" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Localization" />
      </containers>
    </api>
    <api id="T:Zhaord.Localization.NullLocalizer">
      <topicdata group="api" />
      <apidata name="NullLocalizer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:Zhaord.Localization.NullLocalizer.Instance" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Localization" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.Localization.NullLocalizer">
      <topicdata name="NullLocalizer" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Localization.NullLocalizer" />
      <apidata name="NullLocalizer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.Localization.NullLocalizer.Instance" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.NullLocalizer" />
      </containers>
    </api>
    <api id="P:Zhaord.Localization.NullLocalizer.Instance">
      <topicdata group="api" />
      <apidata name="Instance" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Instance" />
      <returns>
        <type api="T:Zhaord.Localization.Localizer" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.NullLocalizer" ref="true" />
      </containers>
    </api>
    <api id="N:Zhaord.Singletons">
      <topicdata group="api" />
      <apidata name="Zhaord.Singletons" group="namespace" />
      <elements>
        <element api="T:Zhaord.Singletons.Singleton" />
        <element api="T:Zhaord.Singletons.Singleton`1" />
        <element api="T:Zhaord.Singletons.SingletonDictionary`2" />
        <element api="T:Zhaord.Singletons.SingletonList`1" />
      </elements>
    </api>
    <api id="T:Zhaord.Singletons.Singleton">
      <topicdata group="api" />
      <apidata name="Singleton" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Zhaord.Singletons.Singleton`1" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Singletons.Singleton.#ctor" />
        <element api="P:Zhaord.Singletons.Singleton.AllSingletons" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Singletons" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Singletons.Singleton">
      <topicdata name="Singleton" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Singletons.Singleton" />
      <apidata name="Singleton" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Singletons" />
        <type api="T:Zhaord.Singletons.Singleton" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.Singletons.Singleton">
      <topicdata name="Singleton" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Singletons.Singleton" />
      <apidata name="Singleton" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Zhaord.Singletons.Singleton.AllSingletons" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Singletons" />
        <type api="T:Zhaord.Singletons.Singleton" />
      </containers>
    </api>
    <api id="M:Zhaord.Singletons.Singleton.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Singletons" />
        <type api="T:Zhaord.Singletons.Singleton" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Singletons.Singleton.AllSingletons">
      <topicdata group="api" />
      <apidata name="AllSingletons" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AllSingletons" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Singletons" />
        <type api="T:Zhaord.Singletons.Singleton" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.Singletons.Singleton`1">
      <topicdata group="api" />
      <apidata name="Singleton" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Zhaord.Singletons.Singleton" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Zhaord.Singletons.SingletonDictionary`2" ref="true" />
          <type api="T:Zhaord.Singletons.SingletonList`1" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Singletons.Singleton`1.#ctor" />
        <element api="P:Zhaord.Singletons.Singleton`1.Instance" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Singletons" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Singletons.Singleton`1">
      <topicdata name="Singleton" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Singletons.Singleton`1" />
      <apidata name="Singleton" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Singletons" />
        <type api="T:Zhaord.Singletons.Singleton`1" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.Singletons.Singleton`1">
      <topicdata name="Singleton" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Singletons.Singleton`1" />
      <apidata name="Singleton" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:Zhaord.Singletons.Singleton`1.Instance" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Singletons" />
        <type api="T:Zhaord.Singletons.Singleton`1" />
      </containers>
    </api>
    <api id="M:Zhaord.Singletons.Singleton`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Singletons" />
        <type api="T:Zhaord.Singletons.Singleton`1" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Singletons.Singleton`1.Instance">
      <topicdata group="api" />
      <apidata name="Instance" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Instance" />
      <setter name="set_Instance" />
      <returns>
        <template name="T" index="0" api="T:Zhaord.Singletons.Singleton`1" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Singletons" />
        <type api="T:Zhaord.Singletons.Singleton`1" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.Singletons.SingletonDictionary`2">
      <topicdata group="api" />
      <apidata name="SingletonDictionary" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Zhaord.Singletons.Singleton`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <template name="TKey" index="0" api="T:Zhaord.Singletons.SingletonDictionary`2" />
                  <template name="TValue" index="1" api="T:Zhaord.Singletons.SingletonDictionary`2" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:Zhaord.Singletons.Singleton" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Singletons.SingletonDictionary`2.#ctor" />
        <element api="P:Zhaord.Singletons.SingletonDictionary`2.Instance" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Singletons" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Singletons.SingletonDictionary`2">
      <topicdata name="SingletonDictionary" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Singletons.SingletonDictionary`2" />
      <apidata name="SingletonDictionary" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Singletons" />
        <type api="T:Zhaord.Singletons.SingletonDictionary`2" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.Singletons.SingletonDictionary`2">
      <topicdata name="SingletonDictionary" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Singletons.SingletonDictionary`2" />
      <apidata name="SingletonDictionary" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Zhaord.Singletons.SingletonDictionary`2.Instance" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Singletons" />
        <type api="T:Zhaord.Singletons.SingletonDictionary`2" />
      </containers>
    </api>
    <api id="M:Zhaord.Singletons.SingletonDictionary`2.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Singletons" />
        <type api="T:Zhaord.Singletons.SingletonDictionary`2" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Singletons.SingletonDictionary`2.Instance">
      <topicdata group="api" />
      <apidata name="Instance" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Instance" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <template name="TKey" index="0" api="T:Zhaord.Singletons.SingletonDictionary`2" />
            <template name="TValue" index="1" api="T:Zhaord.Singletons.SingletonDictionary`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Singletons" />
        <type api="T:Zhaord.Singletons.SingletonDictionary`2" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.Singletons.SingletonList`1">
      <topicdata group="api" />
      <apidata name="SingletonList" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Zhaord.Singletons.Singleton`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Zhaord.Singletons.SingletonList`1" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:Zhaord.Singletons.Singleton" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Singletons.SingletonList`1.#ctor" />
        <element api="P:Zhaord.Singletons.SingletonList`1.Instance" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Singletons" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Singletons.SingletonList`1">
      <topicdata name="SingletonList" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Singletons.SingletonList`1" />
      <apidata name="SingletonList" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Singletons" />
        <type api="T:Zhaord.Singletons.SingletonList`1" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.Singletons.SingletonList`1">
      <topicdata name="SingletonList" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Singletons.SingletonList`1" />
      <apidata name="SingletonList" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:Zhaord.Singletons.SingletonList`1.Instance" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Singletons" />
        <type api="T:Zhaord.Singletons.SingletonList`1" />
      </containers>
    </api>
    <api id="M:Zhaord.Singletons.SingletonList`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Singletons" />
        <type api="T:Zhaord.Singletons.SingletonList`1" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Singletons.SingletonList`1.Instance">
      <topicdata group="api" />
      <apidata name="Instance" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Instance" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.Singletons.SingletonList`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Singletons" />
        <type api="T:Zhaord.Singletons.SingletonList`1" ref="true" />
      </containers>
    </api>
    <api id="N:Zhaord.TypeFinders">
      <topicdata group="api" />
      <apidata name="Zhaord.TypeFinders" group="namespace" />
      <elements>
        <element api="T:Zhaord.TypeFinders.ITypeFinder" />
        <element api="T:Zhaord.TypeFinders.AppDomainTypeFinder" />
        <element api="T:Zhaord.TypeFinders.WebAppTypeFinder" />
        <element api="T:Zhaord.TypeFinders.TypeFinderExtensions" />
      </elements>
    </api>
    <api id="T:Zhaord.TypeFinders.AppDomainTypeFinder">
      <topicdata group="api" />
      <apidata name="AppDomainTypeFinder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Zhaord.TypeFinders.WebAppTypeFinder" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:Zhaord.TypeFinders.ITypeFinder" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType``1(Zhaord.TypeFinders.ITypeFinder,System.Boolean,System.Boolean)" source="extension" overload="true">
          <apidata name="FindClassesOfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="onlyConcreteClasses" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
            <parameter name="ignoreInactivePlugins" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.TypeFinders" />
            <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType``1(Zhaord.TypeFinders.ITypeFinder,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)" source="extension" overload="true">
          <apidata name="FindClassesOfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="assemblies">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Reflection.Assembly" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="onlyConcreteClasses" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.TypeFinders" />
            <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType(Zhaord.TypeFinders.ITypeFinder,System.Type,System.Boolean,System.Boolean)" source="extension" overload="true">
          <apidata name="FindClassesOfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="assignTypeFrom">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="onlyConcreteClasses" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
            <parameter name="ignoreInactivePlugins" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.TypeFinders" />
            <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.#ctor" />
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.AddCustomAssemblies(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Reflection.Assembly})" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.App" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.AssemblyRestrictToLoadingPattern" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.AssemblySkipLoadingPattern" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.CustomAssemblyNames" />
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.DoesTypeImplementOpenGeneric(System.Type,System.Type)" />
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.FindClassesOfType(System.Type,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)" />
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.GetAssemblies(System.Boolean)" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.LoadAppDomainAssemblies" />
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.LoadMatchingAssemblies(System.String)" />
        <element api="Overload:Zhaord.TypeFinders.AppDomainTypeFinder.Matches">
          <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.Matches(System.String)" />
          <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.Matches(System.String,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.TypeFinders.AppDomainTypeFinder">
      <topicdata name="AppDomainTypeFinder" group="list" subgroup="Methods" typeTopicId="T:Zhaord.TypeFinders.AppDomainTypeFinder" />
      <apidata name="AppDomainTypeFinder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType``1(Zhaord.TypeFinders.ITypeFinder,System.Boolean,System.Boolean)" source="extension" overload="true">
          <apidata name="FindClassesOfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="onlyConcreteClasses" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
            <parameter name="ignoreInactivePlugins" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.TypeFinders" />
            <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType``1(Zhaord.TypeFinders.ITypeFinder,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)" source="extension" overload="true">
          <apidata name="FindClassesOfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="assemblies">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Reflection.Assembly" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="onlyConcreteClasses" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.TypeFinders" />
            <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType(Zhaord.TypeFinders.ITypeFinder,System.Type,System.Boolean,System.Boolean)" source="extension" overload="true">
          <apidata name="FindClassesOfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="assignTypeFrom">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="onlyConcreteClasses" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
            <parameter name="ignoreInactivePlugins" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.TypeFinders" />
            <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.AddCustomAssemblies(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Reflection.Assembly})" />
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.DoesTypeImplementOpenGeneric(System.Type,System.Type)" />
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.FindClassesOfType(System.Type,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)" />
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.GetAssemblies(System.Boolean)" />
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.LoadMatchingAssemblies(System.String)" />
        <element api="Overload:Zhaord.TypeFinders.AppDomainTypeFinder.Matches">
          <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.Matches(System.String)" />
          <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.Matches(System.String,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.TypeFinders.AppDomainTypeFinder">
      <topicdata name="AppDomainTypeFinder" group="list" subgroup="Properties" typeTopicId="T:Zhaord.TypeFinders.AppDomainTypeFinder" />
      <apidata name="AppDomainTypeFinder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.App" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.AssemblyRestrictToLoadingPattern" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.AssemblySkipLoadingPattern" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.CustomAssemblyNames" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.LoadAppDomainAssemblies" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" />
      </containers>
    </api>
    <api id="Overload:Zhaord.TypeFinders.AppDomainTypeFinder.Matches">
      <topicdata name="Matches" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Matches" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.Matches(System.String)" />
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.Matches(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.TypeFinders.AppDomainTypeFinder.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.TypeFinders.AppDomainTypeFinder.AddCustomAssemblies(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Reflection.Assembly})">
      <topicdata group="api" />
      <apidata name="AddCustomAssemblies" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="addedAssemblyNames">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="assemblies">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.Assembly" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.TypeFinders.AppDomainTypeFinder.App">
      <topicdata group="api" />
      <apidata name="App" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_App" />
      <returns>
        <type api="T:System.AppDomain" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.TypeFinders.AppDomainTypeFinder.AssemblyRestrictToLoadingPattern">
      <topicdata group="api" />
      <apidata name="AssemblyRestrictToLoadingPattern" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AssemblyRestrictToLoadingPattern" />
      <setter name="set_AssemblyRestrictToLoadingPattern" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.TypeFinders.AppDomainTypeFinder.AssemblySkipLoadingPattern">
      <topicdata group="api" />
      <apidata name="AssemblySkipLoadingPattern" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AssemblySkipLoadingPattern" />
      <setter name="set_AssemblySkipLoadingPattern" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.TypeFinders.AppDomainTypeFinder.CustomAssemblyNames">
      <topicdata group="api" />
      <apidata name="CustomAssemblyNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CustomAssemblyNames" />
      <setter name="set_CustomAssemblyNames" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.TypeFinders.AppDomainTypeFinder.DoesTypeImplementOpenGeneric(System.Type,System.Type)">
      <topicdata group="api" />
      <apidata name="DoesTypeImplementOpenGeneric" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="openGeneric">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.TypeFinders.AppDomainTypeFinder.FindClassesOfType(System.Type,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)">
      <topicdata group="api" />
      <apidata name="FindClassesOfType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="assignTypeFrom">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="assemblies">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.Assembly" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="onlyConcreteClasses" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Zhaord.TypeFinders.ITypeFinder.FindClassesOfType(System.Type,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)">
          <type api="T:Zhaord.TypeFinders.ITypeFinder" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.TypeFinders.AppDomainTypeFinder.GetAssemblies(System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetAssemblies" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="ignoreInactivePlugins" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Reflection.Assembly" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Zhaord.TypeFinders.ITypeFinder.GetAssemblies(System.Boolean)">
          <type api="T:Zhaord.TypeFinders.ITypeFinder" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.TypeFinders.AppDomainTypeFinder.LoadAppDomainAssemblies">
      <topicdata group="api" />
      <apidata name="LoadAppDomainAssemblies" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LoadAppDomainAssemblies" />
      <setter name="set_LoadAppDomainAssemblies" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.TypeFinders.AppDomainTypeFinder.LoadMatchingAssemblies(System.String)">
      <topicdata group="api" />
      <apidata name="LoadMatchingAssemblies" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="directoryPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.TypeFinders.AppDomainTypeFinder.Matches(System.String)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.TypeFinders.AppDomainTypeFinder.Matches" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="assemblyFullName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.TypeFinders.AppDomainTypeFinder.Matches(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Zhaord.TypeFinders.AppDomainTypeFinder.Matches" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="assemblyFullName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pattern">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.TypeFinders.ITypeFinder">
      <topicdata group="api" />
      <apidata name="ITypeFinder" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
      </implementors>
      <elements>
        <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType``1(Zhaord.TypeFinders.ITypeFinder,System.Boolean,System.Boolean)" source="extension" overload="true">
          <apidata name="FindClassesOfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="onlyConcreteClasses" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
            <parameter name="ignoreInactivePlugins" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.TypeFinders" />
            <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType``1(Zhaord.TypeFinders.ITypeFinder,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)" source="extension" overload="true">
          <apidata name="FindClassesOfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="assemblies">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Reflection.Assembly" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="onlyConcreteClasses" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.TypeFinders" />
            <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType(Zhaord.TypeFinders.ITypeFinder,System.Type,System.Boolean,System.Boolean)" source="extension" overload="true">
          <apidata name="FindClassesOfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="assignTypeFrom">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="onlyConcreteClasses" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
            <parameter name="ignoreInactivePlugins" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.TypeFinders" />
            <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.TypeFinders.ITypeFinder.FindClassesOfType(System.Type,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)" />
        <element api="M:Zhaord.TypeFinders.ITypeFinder.GetAssemblies(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.TypeFinders.ITypeFinder">
      <topicdata name="ITypeFinder" group="list" subgroup="Methods" typeTopicId="T:Zhaord.TypeFinders.ITypeFinder" />
      <apidata name="ITypeFinder" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType``1(Zhaord.TypeFinders.ITypeFinder,System.Boolean,System.Boolean)" source="extension" overload="true">
          <apidata name="FindClassesOfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="onlyConcreteClasses" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
            <parameter name="ignoreInactivePlugins" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.TypeFinders" />
            <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType``1(Zhaord.TypeFinders.ITypeFinder,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)" source="extension" overload="true">
          <apidata name="FindClassesOfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="assemblies">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Reflection.Assembly" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="onlyConcreteClasses" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.TypeFinders" />
            <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType(Zhaord.TypeFinders.ITypeFinder,System.Type,System.Boolean,System.Boolean)" source="extension" overload="true">
          <apidata name="FindClassesOfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="assignTypeFrom">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="onlyConcreteClasses" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
            <parameter name="ignoreInactivePlugins" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.TypeFinders" />
            <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.TypeFinders.ITypeFinder.FindClassesOfType(System.Type,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)" />
        <element api="M:Zhaord.TypeFinders.ITypeFinder.GetAssemblies(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.ITypeFinder" />
      </containers>
    </api>
    <api id="M:Zhaord.TypeFinders.ITypeFinder.FindClassesOfType(System.Type,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)">
      <topicdata group="api" />
      <apidata name="FindClassesOfType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="assignTypeFrom">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="assemblies">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.Assembly" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="onlyConcreteClasses" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.ITypeFinder" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.TypeFinders.ITypeFinder.GetAssemblies(System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetAssemblies" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="ignoreInactivePlugins" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Reflection.Assembly" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.ITypeFinder" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.TypeFinders.TypeFinderExtensions">
      <topicdata group="api" />
      <apidata name="TypeFinderExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType">
          <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType``1(Zhaord.TypeFinders.ITypeFinder,System.Boolean,System.Boolean)" />
          <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType``1(Zhaord.TypeFinders.ITypeFinder,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)" />
          <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType(Zhaord.TypeFinders.ITypeFinder,System.Type,System.Boolean,System.Boolean)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Zhaord.TypeFinders.TypeFinderExtensions">
      <topicdata name="TypeFinderExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.TypeFinders.TypeFinderExtensions" />
      <apidata name="TypeFinderExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType">
          <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType``1(Zhaord.TypeFinders.ITypeFinder,System.Boolean,System.Boolean)" />
          <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType``1(Zhaord.TypeFinders.ITypeFinder,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)" />
          <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType(Zhaord.TypeFinders.ITypeFinder,System.Type,System.Boolean,System.Boolean)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" />
      </containers>
    </api>
    <api id="Overload:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType">
      <topicdata name="FindClassesOfType" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="FindClassesOfType" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType``1(Zhaord.TypeFinders.ITypeFinder,System.Boolean,System.Boolean)" />
        <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType``1(Zhaord.TypeFinders.ITypeFinder,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)" />
        <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType(Zhaord.TypeFinders.ITypeFinder,System.Type,System.Boolean,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType``1(Zhaord.TypeFinders.ITypeFinder,System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name="FindClassesOfType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="finder">
          <type api="T:Zhaord.TypeFinders.ITypeFinder" ref="true" />
        </parameter>
        <parameter name="onlyConcreteClasses" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
        <parameter name="ignoreInactivePlugins" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType``1(Zhaord.TypeFinders.ITypeFinder,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)">
      <topicdata group="api" />
      <apidata name="FindClassesOfType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="finder">
          <type api="T:Zhaord.TypeFinders.ITypeFinder" ref="true" />
        </parameter>
        <parameter name="assemblies">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.Assembly" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="onlyConcreteClasses" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType(Zhaord.TypeFinders.ITypeFinder,System.Type,System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name="FindClassesOfType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="finder">
          <type api="T:Zhaord.TypeFinders.ITypeFinder" ref="true" />
        </parameter>
        <parameter name="assignTypeFrom">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="onlyConcreteClasses" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
        <parameter name="ignoreInactivePlugins" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Zhaord.TypeFinders.WebAppTypeFinder">
      <topicdata group="api" />
      <apidata name="WebAppTypeFinder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.AddCustomAssemblies(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Reflection.Assembly})" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.App" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.AssemblyRestrictToLoadingPattern" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.AssemblySkipLoadingPattern" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.CustomAssemblyNames" />
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.DoesTypeImplementOpenGeneric(System.Type,System.Type)" />
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.FindClassesOfType(System.Type,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.LoadAppDomainAssemblies" />
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.LoadMatchingAssemblies(System.String)" />
        <element api="Overload:Zhaord.TypeFinders.WebAppTypeFinder.Matches">
          <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.Matches(System.String)" />
          <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.Matches(System.String,System.String)" />
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.TypeFinders.WebAppTypeFinder.#ctor" />
        <element api="P:Zhaord.TypeFinders.WebAppTypeFinder.EnsureBinFolderAssembliesLoaded" />
        <element api="M:Zhaord.TypeFinders.WebAppTypeFinder.GetAssemblies(System.Boolean)" />
        <element api="M:Zhaord.TypeFinders.WebAppTypeFinder.GetBinDirectory" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.TypeFinders.WebAppTypeFinder">
      <topicdata name="WebAppTypeFinder" group="list" subgroup="Methods" typeTopicId="T:Zhaord.TypeFinders.WebAppTypeFinder" />
      <apidata name="WebAppTypeFinder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.AddCustomAssemblies(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Reflection.Assembly})" />
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.DoesTypeImplementOpenGeneric(System.Type,System.Type)" />
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.FindClassesOfType(System.Type,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)" />
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.LoadMatchingAssemblies(System.String)" />
        <element api="Overload:Zhaord.TypeFinders.WebAppTypeFinder.Matches">
          <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.Matches(System.String)" />
          <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.Matches(System.String,System.String)" />
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.TypeFinders.WebAppTypeFinder.GetAssemblies(System.Boolean)" />
        <element api="M:Zhaord.TypeFinders.WebAppTypeFinder.GetBinDirectory" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.WebAppTypeFinder" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.TypeFinders.WebAppTypeFinder">
      <topicdata name="WebAppTypeFinder" group="list" subgroup="Properties" typeTopicId="T:Zhaord.TypeFinders.WebAppTypeFinder" />
      <apidata name="WebAppTypeFinder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.App" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.AssemblyRestrictToLoadingPattern" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.AssemblySkipLoadingPattern" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.CustomAssemblyNames" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.LoadAppDomainAssemblies" />
        <element api="P:Zhaord.TypeFinders.WebAppTypeFinder.EnsureBinFolderAssembliesLoaded" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.WebAppTypeFinder" />
      </containers>
    </api>
    <api id="M:Zhaord.TypeFinders.WebAppTypeFinder.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.WebAppTypeFinder" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.TypeFinders.WebAppTypeFinder.EnsureBinFolderAssembliesLoaded">
      <topicdata group="api" />
      <apidata name="EnsureBinFolderAssembliesLoaded" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EnsureBinFolderAssembliesLoaded" />
      <setter name="set_EnsureBinFolderAssembliesLoaded" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.WebAppTypeFinder" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.TypeFinders.WebAppTypeFinder.GetAssemblies(System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetAssemblies" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Zhaord.TypeFinders.AppDomainTypeFinder.GetAssemblies(System.Boolean)">
          <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ignoreInactivePlugins" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Reflection.Assembly" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Zhaord.TypeFinders.ITypeFinder.GetAssemblies(System.Boolean)">
          <type api="T:Zhaord.TypeFinders.ITypeFinder" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.WebAppTypeFinder" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.TypeFinders.WebAppTypeFinder.GetBinDirectory">
      <topicdata group="api" />
      <apidata name="GetBinDirectory" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.WebAppTypeFinder" ref="true" />
      </containers>
    </api>
    <api id="N:Zhaord.Utilities">
      <topicdata group="api" />
      <apidata name="Zhaord.Utilities" group="namespace" />
      <elements>
        <element api="T:Zhaord.Utilities.CommonHelper" />
        <element api="T:Zhaord.Utilities.ActionDisposable" />
      </elements>
    </api>
    <api id="T:Zhaord.Utilities.ActionDisposable">
      <topicdata group="api" />
      <apidata name="ActionDisposable" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.ValueType.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.ValueType.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.ValueType.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Utilities.ActionDisposable.#ctor(System.Action)" />
        <element api="M:Zhaord.Utilities.ActionDisposable.Dispose" />
        <element api="F:Zhaord.Utilities.ActionDisposable.Empty" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Utilities.ActionDisposable">
      <topicdata name="ActionDisposable" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Utilities.ActionDisposable" />
      <apidata name="ActionDisposable" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.ValueType.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.ValueType.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.ValueType.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Utilities.ActionDisposable.Dispose" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.ActionDisposable" />
      </containers>
    </api>
    <api id="Fields.T:Zhaord.Utilities.ActionDisposable">
      <topicdata name="ActionDisposable" group="list" subgroup="Fields" typeTopicId="T:Zhaord.Utilities.ActionDisposable" />
      <apidata name="ActionDisposable" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Zhaord.Utilities.ActionDisposable.Empty" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.ActionDisposable" />
      </containers>
    </api>
    <api id="M:Zhaord.Utilities.ActionDisposable.#ctor(System.Action)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.ActionDisposable" ref="false" />
      </containers>
    </api>
    <api id="M:Zhaord.Utilities.ActionDisposable.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.ActionDisposable" ref="false" />
      </containers>
    </api>
    <api id="F:Zhaord.Utilities.ActionDisposable.Empty">
      <topicdata group="api" />
      <apidata name="Empty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Zhaord.Utilities.ActionDisposable" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.ActionDisposable" ref="false" />
      </containers>
    </api>
    <api id="T:Zhaord.Utilities.CommonHelper">
      <topicdata group="api" />
      <apidata name="CommonHelper" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.Utilities.CommonHelper.GenerateRandomDigitCode(System.Int32)" />
        <element api="M:Zhaord.Utilities.CommonHelper.GenerateRandomInteger(System.Int32,System.Int32)" />
        <element api="M:Zhaord.Utilities.CommonHelper.GetAppSetting``1(System.String,``0)" />
        <element api="M:Zhaord.Utilities.CommonHelper.GetTypeConverter(System.Type)" />
        <element api="P:Zhaord.Utilities.CommonHelper.IsDevEnvironment" />
        <element api="M:Zhaord.Utilities.CommonHelper.MapPath(System.String,System.Boolean)" />
        <element api="Overload:Zhaord.Utilities.CommonHelper.TryConvert">
          <element api="M:Zhaord.Utilities.CommonHelper.TryConvert``1(System.Object,``0@)" />
          <element api="M:Zhaord.Utilities.CommonHelper.TryConvert``1(System.Object,System.Globalization.CultureInfo,``0@)" />
          <element api="M:Zhaord.Utilities.CommonHelper.TryConvert(System.Object,System.Type,System.Object@)" />
          <element api="M:Zhaord.Utilities.CommonHelper.TryConvert(System.Object,System.Type,System.Globalization.CultureInfo,System.Object@)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Utilities.CommonHelper">
      <topicdata name="CommonHelper" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Utilities.CommonHelper" />
      <apidata name="CommonHelper" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Utilities.CommonHelper.GenerateRandomDigitCode(System.Int32)" />
        <element api="M:Zhaord.Utilities.CommonHelper.GenerateRandomInteger(System.Int32,System.Int32)" />
        <element api="M:Zhaord.Utilities.CommonHelper.GetAppSetting``1(System.String,``0)" />
        <element api="M:Zhaord.Utilities.CommonHelper.GetTypeConverter(System.Type)" />
        <element api="M:Zhaord.Utilities.CommonHelper.MapPath(System.String,System.Boolean)" />
        <element api="Overload:Zhaord.Utilities.CommonHelper.TryConvert">
          <element api="M:Zhaord.Utilities.CommonHelper.TryConvert``1(System.Object,``0@)" />
          <element api="M:Zhaord.Utilities.CommonHelper.TryConvert``1(System.Object,System.Globalization.CultureInfo,``0@)" />
          <element api="M:Zhaord.Utilities.CommonHelper.TryConvert(System.Object,System.Type,System.Object@)" />
          <element api="M:Zhaord.Utilities.CommonHelper.TryConvert(System.Object,System.Type,System.Globalization.CultureInfo,System.Object@)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.CommonHelper" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.Utilities.CommonHelper">
      <topicdata name="CommonHelper" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Utilities.CommonHelper" />
      <apidata name="CommonHelper" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.Utilities.CommonHelper.IsDevEnvironment" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.CommonHelper" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Utilities.CommonHelper.TryConvert">
      <topicdata name="TryConvert" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="TryConvert" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Utilities.CommonHelper.TryConvert``1(System.Object,``0@)" />
        <element api="M:Zhaord.Utilities.CommonHelper.TryConvert``1(System.Object,System.Globalization.CultureInfo,``0@)" />
        <element api="M:Zhaord.Utilities.CommonHelper.TryConvert(System.Object,System.Type,System.Object@)" />
        <element api="M:Zhaord.Utilities.CommonHelper.TryConvert(System.Object,System.Type,System.Globalization.CultureInfo,System.Object@)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.CommonHelper" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Utilities.CommonHelper.GenerateRandomDigitCode(System.Int32)">
      <topicdata group="api" />
      <apidata name="GenerateRandomDigitCode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.CommonHelper" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Utilities.CommonHelper.GenerateRandomInteger(System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="GenerateRandomInteger" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="min" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
        <parameter name="max" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>2147483647</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.CommonHelper" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Utilities.CommonHelper.GetAppSetting``1(System.String,``0)">
      <topicdata group="api" />
      <apidata name="GetAppSetting" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defValue" optional="true">
          <template name="T" index="0" api="M:Zhaord.Utilities.CommonHelper.GetAppSetting``1(System.String,``0)" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Utilities.CommonHelper.GetAppSetting``1(System.String,``0)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.CommonHelper" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Utilities.CommonHelper.GetTypeConverter(System.Type)">
      <topicdata group="api" />
      <apidata name="GetTypeConverter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.CommonHelper" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Utilities.CommonHelper.IsDevEnvironment">
      <topicdata group="api" />
      <apidata name="IsDevEnvironment" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsDevEnvironment" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.CommonHelper" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Utilities.CommonHelper.MapPath(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="MapPath" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="findAppRoot" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.CommonHelper" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Utilities.CommonHelper.TryConvert``1(System.Object,System.Globalization.CultureInfo,``0@)">
      <topicdata group="api" />
      <apidata name="TryConvert" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.CommonHelper.TryConvert" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="convertedValue" out="true">
          <referenceTo>
            <template name="T" index="0" api="M:Zhaord.Utilities.CommonHelper.TryConvert``1(System.Object,System.Globalization.CultureInfo,``0@)" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.CommonHelper" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Utilities.CommonHelper.TryConvert(System.Object,System.Type,System.Globalization.CultureInfo,System.Object@)">
      <topicdata group="api" />
      <apidata name="TryConvert" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.CommonHelper.TryConvert" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="to">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="convertedValue" out="true">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.CommonHelper" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Utilities.CommonHelper.TryConvert(System.Object,System.Type,System.Object@)">
      <topicdata group="api" />
      <apidata name="TryConvert" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.CommonHelper.TryConvert" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="to">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="convertedValue" out="true">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.CommonHelper" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Utilities.CommonHelper.TryConvert``1(System.Object,``0@)">
      <topicdata group="api" />
      <apidata name="TryConvert" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.CommonHelper.TryConvert" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="convertedValue" out="true">
          <referenceTo>
            <template name="T" index="0" api="M:Zhaord.Utilities.CommonHelper.TryConvert``1(System.Object,``0@)" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.CommonHelper" ref="true" />
      </containers>
    </api>
    <api id="N:Zhaord.Utilities.Converts">
      <topicdata group="api" />
      <apidata name="Zhaord.Utilities.Converts" group="namespace" />
      <elements>
        <element api="T:Zhaord.Utilities.Converts.ConvertProblem" />
        <element api="T:Zhaord.Utilities.Converts.DateTimeConvert" />
        <element api="T:Zhaord.Utilities.Converts.DictionaryConverter" />
        <element api="T:Zhaord.Utilities.Converts.DictionaryConvertException" />
      </elements>
    </api>
    <api id="T:Zhaord.Utilities.Converts.ConvertProblem">
      <topicdata group="api" />
      <apidata name="ConvertProblem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Utilities.Converts.ConvertProblem.#ctor" />
        <element api="P:Zhaord.Utilities.Converts.ConvertProblem.AttemptedValue" />
        <element api="P:Zhaord.Utilities.Converts.ConvertProblem.Exception" />
        <element api="P:Zhaord.Utilities.Converts.ConvertProblem.Item" />
        <element api="P:Zhaord.Utilities.Converts.ConvertProblem.Property" />
        <element api="M:Zhaord.Utilities.Converts.ConvertProblem.ToString" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Utilities.Converts.ConvertProblem">
      <topicdata name="ConvertProblem" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Utilities.Converts.ConvertProblem" />
      <apidata name="ConvertProblem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Utilities.Converts.ConvertProblem.ToString" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.ConvertProblem" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.Utilities.Converts.ConvertProblem">
      <topicdata name="ConvertProblem" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Utilities.Converts.ConvertProblem" />
      <apidata name="ConvertProblem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:Zhaord.Utilities.Converts.ConvertProblem.AttemptedValue" />
        <element api="P:Zhaord.Utilities.Converts.ConvertProblem.Exception" />
        <element api="P:Zhaord.Utilities.Converts.ConvertProblem.Item" />
        <element api="P:Zhaord.Utilities.Converts.ConvertProblem.Property" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.ConvertProblem" />
      </containers>
    </api>
    <api id="M:Zhaord.Utilities.Converts.ConvertProblem.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.ConvertProblem" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Utilities.Converts.ConvertProblem.AttemptedValue">
      <topicdata group="api" />
      <apidata name="AttemptedValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AttemptedValue" />
      <setter name="set_AttemptedValue" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.ConvertProblem" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Utilities.Converts.ConvertProblem.Exception">
      <topicdata group="api" />
      <apidata name="Exception" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Exception" />
      <setter name="set_Exception" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.ConvertProblem" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Utilities.Converts.ConvertProblem.Item">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.ConvertProblem" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Utilities.Converts.ConvertProblem.Property">
      <topicdata group="api" />
      <apidata name="Property" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Property" />
      <setter name="set_Property" />
      <returns>
        <type api="T:System.Reflection.PropertyInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.ConvertProblem" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Utilities.Converts.ConvertProblem.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.ConvertProblem" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.Utilities.Converts.DateTimeConvert">
      <topicdata group="api" />
      <apidata name="DateTimeConvert" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:Zhaord.Utilities.Converts.DateTimeConvert.DateTimeFormat" />
        <element api="M:Zhaord.Utilities.Converts.DateTimeConvert.Parse(System.String)" />
        <element api="M:Zhaord.Utilities.Converts.DateTimeConvert.ParseNullable(System.String)" />
        <element api="Overload:Zhaord.Utilities.Converts.DateTimeConvert.ToString">
          <element api="M:Zhaord.Utilities.Converts.DateTimeConvert.ToString(System.DateTime)" />
          <element api="M:Zhaord.Utilities.Converts.DateTimeConvert.ToString(System.Nullable{System.DateTime})" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Utilities.Converts.DateTimeConvert">
      <topicdata name="DateTimeConvert" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Utilities.Converts.DateTimeConvert" />
      <apidata name="DateTimeConvert" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Utilities.Converts.DateTimeConvert.Parse(System.String)" />
        <element api="M:Zhaord.Utilities.Converts.DateTimeConvert.ParseNullable(System.String)" />
        <element api="Overload:Zhaord.Utilities.Converts.DateTimeConvert.ToString">
          <element api="M:Zhaord.Utilities.Converts.DateTimeConvert.ToString(System.DateTime)" />
          <element api="M:Zhaord.Utilities.Converts.DateTimeConvert.ToString(System.Nullable{System.DateTime})" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DateTimeConvert" />
      </containers>
    </api>
    <api id="Fields.T:Zhaord.Utilities.Converts.DateTimeConvert">
      <topicdata name="DateTimeConvert" group="list" subgroup="Fields" typeTopicId="T:Zhaord.Utilities.Converts.DateTimeConvert" />
      <apidata name="DateTimeConvert" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:Zhaord.Utilities.Converts.DateTimeConvert.DateTimeFormat" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DateTimeConvert" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Utilities.Converts.DateTimeConvert.ToString">
      <topicdata name="ToString" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ToString" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Utilities.Converts.DateTimeConvert.ToString(System.DateTime)" />
        <element api="M:Zhaord.Utilities.Converts.DateTimeConvert.ToString(System.Nullable{System.DateTime})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DateTimeConvert" ref="true" />
      </containers>
    </api>
    <api id="F:Zhaord.Utilities.Converts.DateTimeConvert.DateTimeFormat">
      <topicdata group="api" />
      <apidata name="DateTimeFormat" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DateTimeConvert" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Utilities.Converts.DateTimeConvert.Parse(System.String)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="date">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DateTimeConvert" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Utilities.Converts.DateTimeConvert.ParseNullable(System.String)">
      <topicdata group="api" />
      <apidata name="ParseNullable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DateTimeConvert" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Utilities.Converts.DateTimeConvert.ToString(System.DateTime)">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.Converts.DateTimeConvert.ToString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DateTimeConvert" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Utilities.Converts.DateTimeConvert.ToString(System.Nullable{System.DateTime})">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.Converts.DateTimeConvert.ToString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DateTimeConvert" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.Utilities.Converts.DictionaryConverter">
      <topicdata group="api" />
      <apidata name="DictionaryConverter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.CanCreateType(System.Type)" />
        <element api="Overload:Zhaord.Utilities.Converts.DictionaryConverter.CreateAndPopulate">
          <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.CreateAndPopulate``1(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem}@)" />
          <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.CreateAndPopulate(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem}@)" />
        </element>
        <element api="Overload:Zhaord.Utilities.Converts.DictionaryConverter.Populate">
          <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.Populate(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object,System.Object[])" />
          <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.Populate(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object,System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem}@,System.Object[])" />
        </element>
        <element api="Overload:Zhaord.Utilities.Converts.DictionaryConverter.SafeCreateAndPopulate">
          <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.SafeCreateAndPopulate``1(System.Collections.Generic.IDictionary{System.String,System.Object})" />
          <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.SafeCreateAndPopulate(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Utilities.Converts.DictionaryConverter">
      <topicdata name="DictionaryConverter" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Utilities.Converts.DictionaryConverter" />
      <apidata name="DictionaryConverter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.CanCreateType(System.Type)" />
        <element api="Overload:Zhaord.Utilities.Converts.DictionaryConverter.CreateAndPopulate">
          <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.CreateAndPopulate``1(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem}@)" />
          <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.CreateAndPopulate(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem}@)" />
        </element>
        <element api="Overload:Zhaord.Utilities.Converts.DictionaryConverter.Populate">
          <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.Populate(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object,System.Object[])" />
          <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.Populate(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object,System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem}@,System.Object[])" />
        </element>
        <element api="Overload:Zhaord.Utilities.Converts.DictionaryConverter.SafeCreateAndPopulate">
          <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.SafeCreateAndPopulate``1(System.Collections.Generic.IDictionary{System.String,System.Object})" />
          <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.SafeCreateAndPopulate(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConverter" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Utilities.Converts.DictionaryConverter.CreateAndPopulate">
      <topicdata name="CreateAndPopulate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="CreateAndPopulate" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.CreateAndPopulate``1(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem}@)" />
        <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.CreateAndPopulate(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem}@)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Utilities.Converts.DictionaryConverter.Populate">
      <topicdata name="Populate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Populate" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.Populate(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object,System.Object[])" />
        <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.Populate(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object,System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem}@,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Utilities.Converts.DictionaryConverter.SafeCreateAndPopulate">
      <topicdata name="SafeCreateAndPopulate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="SafeCreateAndPopulate" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.SafeCreateAndPopulate``1(System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.SafeCreateAndPopulate(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConverter" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Utilities.Converts.DictionaryConverter.CanCreateType(System.Type)">
      <topicdata group="api" />
      <apidata name="CanCreateType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="itemType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConverter" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Utilities.Converts.DictionaryConverter.CreateAndPopulate``1(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem}@)">
      <topicdata group="api" />
      <apidata name="CreateAndPopulate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.Converts.DictionaryConverter.CreateAndPopulate" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="problems" out="true">
          <referenceTo>
            <type api="T:System.Collections.Generic.ICollection`1" ref="true">
              <specialization>
                <type api="T:Zhaord.Utilities.Converts.ConvertProblem" ref="true" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Utilities.Converts.DictionaryConverter.CreateAndPopulate``1(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem}@)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConverter" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Utilities.Converts.DictionaryConverter.CreateAndPopulate(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem}@)">
      <topicdata group="api" />
      <apidata name="CreateAndPopulate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.Converts.DictionaryConverter.CreateAndPopulate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="problems" out="true">
          <referenceTo>
            <type api="T:System.Collections.Generic.ICollection`1" ref="true">
              <specialization>
                <type api="T:Zhaord.Utilities.Converts.ConvertProblem" ref="true" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConverter" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Utilities.Converts.DictionaryConverter.Populate(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object,System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem}@,System.Object[])">
      <topicdata group="api" />
      <apidata name="Populate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.Converts.DictionaryConverter.Populate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="problems" out="true">
          <referenceTo>
            <type api="T:System.Collections.Generic.ICollection`1" ref="true">
              <specialization>
                <type api="T:Zhaord.Utilities.Converts.ConvertProblem" ref="true" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="populated" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConverter" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Utilities.Converts.DictionaryConverter.Populate(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object,System.Object[])">
      <topicdata group="api" />
      <apidata name="Populate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.Converts.DictionaryConverter.Populate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="populated" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConverter" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Utilities.Converts.DictionaryConverter.SafeCreateAndPopulate``1(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <topicdata group="api" />
      <apidata name="SafeCreateAndPopulate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.Converts.DictionaryConverter.SafeCreateAndPopulate" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Utilities.Converts.DictionaryConverter.SafeCreateAndPopulate``1(System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConverter" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Utilities.Converts.DictionaryConverter.SafeCreateAndPopulate(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <topicdata group="api" />
      <apidata name="SafeCreateAndPopulate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.Converts.DictionaryConverter.SafeCreateAndPopulate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConverter" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.Utilities.Converts.DictionaryConvertException">
      <topicdata group="api" />
      <apidata name="DictionaryConvertException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.MiscExtensions.Dump(System.Exception)" source="extension">
          <apidata name="Dump" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.MiscExtensions.ToAllMessages(System.Exception)" source="extension">
          <apidata name="ToAllMessages" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.Utilities.Converts.DictionaryConvertException.#ctor">
          <element api="M:Zhaord.Utilities.Converts.DictionaryConvertException.#ctor(System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem})" />
          <element api="M:Zhaord.Utilities.Converts.DictionaryConvertException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:Zhaord.Utilities.Converts.DictionaryConvertException.#ctor(System.String,System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem})" />
        </element>
        <element api="P:Zhaord.Utilities.Converts.DictionaryConvertException.Problems" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Utilities.Converts.DictionaryConvertException">
      <topicdata name="DictionaryConvertException" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Utilities.Converts.DictionaryConvertException" />
      <apidata name="DictionaryConvertException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.MiscExtensions.Dump(System.Exception)" source="extension">
          <apidata name="Dump" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.MiscExtensions.ToAllMessages(System.Exception)" source="extension">
          <apidata name="ToAllMessages" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConvertException" />
      </containers>
    </api>
    <api id="Properties.T:Zhaord.Utilities.Converts.DictionaryConvertException">
      <topicdata name="DictionaryConvertException" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Utilities.Converts.DictionaryConvertException" />
      <apidata name="DictionaryConvertException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:Zhaord.Utilities.Converts.DictionaryConvertException.Problems" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConvertException" />
      </containers>
    </api>
    <api id="Events.T:Zhaord.Utilities.Converts.DictionaryConvertException">
      <topicdata name="DictionaryConvertException" group="list" subgroup="Events" typeTopicId="T:Zhaord.Utilities.Converts.DictionaryConvertException" />
      <apidata name="DictionaryConvertException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConvertException" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Utilities.Converts.DictionaryConvertException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Zhaord.Utilities.Converts.DictionaryConvertException.#ctor(System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem})" />
        <element api="M:Zhaord.Utilities.Converts.DictionaryConvertException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Zhaord.Utilities.Converts.DictionaryConvertException.#ctor(System.String,System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConvertException" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Utilities.Converts.DictionaryConvertException.#ctor(System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.Utilities.Converts.DictionaryConvertException.#ctor" />
      <parameters>
        <parameter name="problems">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:Zhaord.Utilities.Converts.ConvertProblem" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConvertException" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Utilities.Converts.DictionaryConvertException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.Utilities.Converts.DictionaryConvertException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConvertException" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Utilities.Converts.DictionaryConvertException.#ctor(System.String,System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.Utilities.Converts.DictionaryConvertException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="problems">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:Zhaord.Utilities.Converts.ConvertProblem" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConvertException" ref="true" />
      </containers>
    </api>
    <api id="P:Zhaord.Utilities.Converts.DictionaryConvertException.Problems">
      <topicdata group="api" />
      <apidata name="Problems" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Problems" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Zhaord.Utilities.Converts.ConvertProblem" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConvertException" ref="true" />
      </containers>
    </api>
    <api id="N:Zhaord.Utilities.Threading">
      <topicdata group="api" />
      <apidata name="Zhaord.Utilities.Threading" group="namespace" />
      <elements>
        <element api="T:Zhaord.Utilities.Threading.LockExtensions" />
        <element api="T:Zhaord.Utilities.Threading.ReadLockDisposable" />
        <element api="T:Zhaord.Utilities.Threading.UpgradeableReadLockDisposable" />
        <element api="T:Zhaord.Utilities.Threading.WriteLockDisposable" />
      </elements>
    </api>
    <api id="T:Zhaord.Utilities.Threading.LockExtensions">
      <topicdata group="api" />
      <apidata name="LockExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Zhaord.Utilities.Threading.LockExtensions.GetReadLock">
          <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetReadLock(System.Threading.ReaderWriterLockSlim)" />
          <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetReadLock(System.Threading.ReaderWriterLockSlim,System.Int32)" />
        </element>
        <element api="Overload:Zhaord.Utilities.Threading.LockExtensions.GetUpgradeableReadLock">
          <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetUpgradeableReadLock(System.Threading.ReaderWriterLockSlim)" />
          <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetUpgradeableReadLock(System.Threading.ReaderWriterLockSlim,System.Int32)" />
        </element>
        <element api="Overload:Zhaord.Utilities.Threading.LockExtensions.GetWriteLock">
          <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetWriteLock(System.Threading.ReaderWriterLockSlim)" />
          <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetWriteLock(System.Threading.ReaderWriterLockSlim,System.Int32)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Zhaord.Utilities.Threading.LockExtensions">
      <topicdata name="LockExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Utilities.Threading.LockExtensions" />
      <apidata name="LockExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:Zhaord.Utilities.Threading.LockExtensions.GetReadLock">
          <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetReadLock(System.Threading.ReaderWriterLockSlim)" />
          <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetReadLock(System.Threading.ReaderWriterLockSlim,System.Int32)" />
        </element>
        <element api="Overload:Zhaord.Utilities.Threading.LockExtensions.GetUpgradeableReadLock">
          <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetUpgradeableReadLock(System.Threading.ReaderWriterLockSlim)" />
          <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetUpgradeableReadLock(System.Threading.ReaderWriterLockSlim,System.Int32)" />
        </element>
        <element api="Overload:Zhaord.Utilities.Threading.LockExtensions.GetWriteLock">
          <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetWriteLock(System.Threading.ReaderWriterLockSlim)" />
          <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetWriteLock(System.Threading.ReaderWriterLockSlim,System.Int32)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
        <type api="T:Zhaord.Utilities.Threading.LockExtensions" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Utilities.Threading.LockExtensions.GetReadLock">
      <topicdata name="GetReadLock" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="GetReadLock" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetReadLock(System.Threading.ReaderWriterLockSlim)" />
        <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetReadLock(System.Threading.ReaderWriterLockSlim,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
        <type api="T:Zhaord.Utilities.Threading.LockExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Utilities.Threading.LockExtensions.GetUpgradeableReadLock">
      <topicdata name="GetUpgradeableReadLock" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="GetUpgradeableReadLock" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetUpgradeableReadLock(System.Threading.ReaderWriterLockSlim)" />
        <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetUpgradeableReadLock(System.Threading.ReaderWriterLockSlim,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
        <type api="T:Zhaord.Utilities.Threading.LockExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Zhaord.Utilities.Threading.LockExtensions.GetWriteLock">
      <topicdata name="GetWriteLock" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="GetWriteLock" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetWriteLock(System.Threading.ReaderWriterLockSlim)" />
        <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetWriteLock(System.Threading.ReaderWriterLockSlim,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
        <type api="T:Zhaord.Utilities.Threading.LockExtensions" ref="true" />
      </containers>
    </api>
    <api id="M:Zhaord.Utilities.Threading.LockExtensions.GetReadLock(System.Threading.ReaderWriterLockSlim)">
      <topicdata group="api" />
      <apidata name="GetReadLock" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.Threading.LockExtensions.GetReadLock" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="readerWriterLock">
          <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IDisposable" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
        <type api="T:Zhaord.Utilities.Threading.LockExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Utilities.Threading.LockExtensions.GetReadLock(System.Threading.ReaderWriterLockSlim,System.Int32)">
      <topicdata group="api" />
      <apidata name="GetReadLock" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.Threading.LockExtensions.GetReadLock" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="readerWriterLock">
          <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
        </parameter>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IDisposable" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
        <type api="T:Zhaord.Utilities.Threading.LockExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Utilities.Threading.LockExtensions.GetUpgradeableReadLock(System.Threading.ReaderWriterLockSlim)">
      <topicdata group="api" />
      <apidata name="GetUpgradeableReadLock" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.Threading.LockExtensions.GetUpgradeableReadLock" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="readerWriterLock">
          <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IDisposable" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
        <type api="T:Zhaord.Utilities.Threading.LockExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Utilities.Threading.LockExtensions.GetUpgradeableReadLock(System.Threading.ReaderWriterLockSlim,System.Int32)">
      <topicdata group="api" />
      <apidata name="GetUpgradeableReadLock" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.Threading.LockExtensions.GetUpgradeableReadLock" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="readerWriterLock">
          <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
        </parameter>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IDisposable" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
        <type api="T:Zhaord.Utilities.Threading.LockExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Utilities.Threading.LockExtensions.GetWriteLock(System.Threading.ReaderWriterLockSlim)">
      <topicdata group="api" />
      <apidata name="GetWriteLock" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.Threading.LockExtensions.GetWriteLock" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="readerWriterLock">
          <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IDisposable" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
        <type api="T:Zhaord.Utilities.Threading.LockExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Zhaord.Utilities.Threading.LockExtensions.GetWriteLock(System.Threading.ReaderWriterLockSlim,System.Int32)">
      <topicdata group="api" />
      <apidata name="GetWriteLock" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.Threading.LockExtensions.GetWriteLock" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="readerWriterLock">
          <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
        </parameter>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IDisposable" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
        <type api="T:Zhaord.Utilities.Threading.LockExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Zhaord.Utilities.Threading.ReadLockDisposable">
      <topicdata group="api" />
      <apidata name="ReadLockDisposable" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Utilities.Threading.ReadLockDisposable.#ctor(System.Threading.ReaderWriterLockSlim)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Utilities.Threading.ReadLockDisposable">
      <topicdata name="ReadLockDisposable" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Utilities.Threading.ReadLockDisposable" />
      <apidata name="ReadLockDisposable" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
        <type api="T:Zhaord.Utilities.Threading.ReadLockDisposable" />
      </containers>
    </api>
    <api id="M:Zhaord.Utilities.Threading.ReadLockDisposable.#ctor(System.Threading.ReaderWriterLockSlim)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="readerWriterLock">
          <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
        <type api="T:Zhaord.Utilities.Threading.ReadLockDisposable" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.Utilities.Threading.UpgradeableReadLockDisposable">
      <topicdata group="api" />
      <apidata name="UpgradeableReadLockDisposable" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Utilities.Threading.UpgradeableReadLockDisposable.#ctor(System.Threading.ReaderWriterLockSlim)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Utilities.Threading.UpgradeableReadLockDisposable">
      <topicdata name="UpgradeableReadLockDisposable" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Utilities.Threading.UpgradeableReadLockDisposable" />
      <apidata name="UpgradeableReadLockDisposable" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
        <type api="T:Zhaord.Utilities.Threading.UpgradeableReadLockDisposable" />
      </containers>
    </api>
    <api id="M:Zhaord.Utilities.Threading.UpgradeableReadLockDisposable.#ctor(System.Threading.ReaderWriterLockSlim)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="readerWriterLock">
          <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
        <type api="T:Zhaord.Utilities.Threading.UpgradeableReadLockDisposable" ref="true" />
      </containers>
    </api>
    <api id="T:Zhaord.Utilities.Threading.WriteLockDisposable">
      <topicdata group="api" />
      <apidata name="WriteLockDisposable" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Utilities.Threading.WriteLockDisposable.#ctor(System.Threading.ReaderWriterLockSlim)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
      </containers>
    </api>
    <api id="Methods.T:Zhaord.Utilities.Threading.WriteLockDisposable">
      <topicdata name="WriteLockDisposable" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Utilities.Threading.WriteLockDisposable" />
      <apidata name="WriteLockDisposable" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
        <type api="T:Zhaord.Utilities.Threading.WriteLockDisposable" />
      </containers>
    </api>
    <api id="M:Zhaord.Utilities.Threading.WriteLockDisposable.#ctor(System.Threading.ReaderWriterLockSlim)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="readerWriterLock">
          <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
        <type api="T:Zhaord.Utilities.Threading.WriteLockDisposable" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>