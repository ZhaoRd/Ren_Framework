<?xml version="1.0" encoding="utf-8"?>
<reflection xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:ddue="urn:ddue-extensions">
  <assemblies>
    <assembly name="Zhaord.Infrastructure">
      <assemblydata version="1.0.5653.33943" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.*</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:Zhaord">
      <topicdata group="api" />
      <apidata name="Zhaord" group="namespace" />
      <elements>
        <element api="T:Zhaord.ICloneable`1" />
        <element api="T:Zhaord.ComparableObject" />
        <element api="T:Zhaord.ComparableObject`1" />
        <element api="T:Zhaord.DisposableObject" />
        <element api="T:Zhaord.Error" />
        <element api="T:Zhaord.Guard" />
        <element api="T:Zhaord.IApplicationServiceContract" />
        <element api="T:Zhaord.IMergedData" />
        <element api="T:Zhaord.IOrdered" />
        <element api="T:Zhaord.IStartupTask" />
        <element api="T:Zhaord.IWorkContext" />
        <element api="T:Zhaord.OperationResult" />
        <element api="T:Zhaord.OperationResultType" />
        <element api="T:Zhaord.ZhaordException" />
        <element api="T:Zhaord.ZhaordValidationException" />
      </elements>
      <file name="5d17576c-0241-272c-8522-3e89fd8c1d96" />
    </api>
    <api id="T:Zhaord.ComparableObject">
      <topicdata group="api" />
      <apidata name="ComparableObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Zhaord.ComparableObject`1" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.ComparableObject.#ctor" />
        <element api="M:Zhaord.ComparableObject.Equals(System.Object)" />
        <element api="M:Zhaord.ComparableObject.GetHashCode" />
        <element api="M:Zhaord.ComparableObject.GetSignatureProperties" />
        <element api="M:Zhaord.ComparableObject.GetSignaturePropertiesCore" />
        <element api="M:Zhaord.ComparableObject.GetTypeUnproxied" />
        <element api="F:Zhaord.ComparableObject.HashMultiplier" />
        <element api="M:Zhaord.ComparableObject.HasSameSignatureAs(Zhaord.ComparableObject)" />
        <element api="Overload:Zhaord.ComparableObject.RegisterSignatureProperty">
          <element api="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.Reflection.PropertyInfo)" />
          <element api="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
      </containers>
      <file name="6df34f98-2450-67d0-0ab1-8ba2420ca0f0" />
    </api>
    <api id="Methods.T:Zhaord.ComparableObject">
      <topicdata name="ComparableObject" group="list" subgroup="Methods" typeTopicId="T:Zhaord.ComparableObject" />
      <apidata name="ComparableObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.ComparableObject.Equals(System.Object)" />
        <element api="M:Zhaord.ComparableObject.GetHashCode" />
        <element api="M:Zhaord.ComparableObject.GetSignatureProperties" />
        <element api="M:Zhaord.ComparableObject.GetSignaturePropertiesCore" />
        <element api="M:Zhaord.ComparableObject.GetTypeUnproxied" />
        <element api="M:Zhaord.ComparableObject.HasSameSignatureAs(Zhaord.ComparableObject)" />
        <element api="Overload:Zhaord.ComparableObject.RegisterSignatureProperty">
          <element api="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.Reflection.PropertyInfo)" />
          <element api="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject" />
      </containers>
      <file name="969a5016-356b-ff6b-3cbd-ebe2b03e227c" />
    </api>
    <api id="Fields.T:Zhaord.ComparableObject">
      <topicdata name="ComparableObject" group="list" subgroup="Fields" typeTopicId="T:Zhaord.ComparableObject" />
      <apidata name="ComparableObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="F:Zhaord.ComparableObject.HashMultiplier" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject" />
      </containers>
      <file name="90415570-ba3f-a4cd-4a66-076cf2c4b907" />
    </api>
    <api id="Overload:Zhaord.ComparableObject.RegisterSignatureProperty">
      <topicdata name="RegisterSignatureProperty" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="RegisterSignatureProperty" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.Reflection.PropertyInfo)" />
        <element api="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject" ref="true" />
      </containers>
      <file name="ce0bca86-5ddc-69d0-c498-d906743b3c8f" />
    </api>
    <api id="M:Zhaord.ComparableObject.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject" ref="true" />
      </containers>
      <file name="92dda2dc-8e9a-e1cc-627b-d2e8ae7254c6" />
    </api>
    <api id="M:Zhaord.ComparableObject.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject" ref="true" />
      </containers>
      <file name="4c228d2d-c24b-8d8e-c306-a61904cb3381" />
    </api>
    <api id="M:Zhaord.ComparableObject.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject" ref="true" />
      </containers>
      <file name="c6ee11ed-1607-10b2-5649-721af5888783" />
    </api>
    <api id="M:Zhaord.ComparableObject.GetSignatureProperties">
      <topicdata group="api" />
      <apidata name="GetSignatureProperties" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Reflection.PropertyInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject" ref="true" />
      </containers>
      <file name="edf947aa-1880-cf45-aec0-aedb845cdcd1" />
    </api>
    <api id="M:Zhaord.ComparableObject.GetSignaturePropertiesCore">
      <topicdata group="api" />
      <apidata name="GetSignaturePropertiesCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Reflection.PropertyInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject" ref="true" />
      </containers>
      <file name="6ce6c3b0-2436-89d2-4a7f-6ec62d93534e" />
    </api>
    <api id="M:Zhaord.ComparableObject.GetTypeUnproxied">
      <topicdata group="api" />
      <apidata name="GetTypeUnproxied" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject" ref="true" />
      </containers>
      <file name="960e7ef7-df44-9b36-184b-d3d398b7b1fd" />
    </api>
    <api id="F:Zhaord.ComparableObject.HashMultiplier">
      <topicdata group="api" />
      <apidata name="HashMultiplier" group="member" subgroup="field" />
      <memberdata visibility="family" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>31</value>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject" ref="true" />
      </containers>
      <file name="5ac3ff99-dd7c-3d39-f322-d069fb059c65" />
    </api>
    <api id="M:Zhaord.ComparableObject.HasSameSignatureAs(Zhaord.ComparableObject)">
      <topicdata group="api" />
      <apidata name="HasSameSignatureAs" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="compareTo">
          <type api="T:Zhaord.ComparableObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject" ref="true" />
      </containers>
      <file name="45e8bf61-c89a-ad0f-b6e9-6ae4260b23a9" />
    </api>
    <api id="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.Reflection.PropertyInfo)">
      <topicdata group="api" />
      <apidata name="RegisterSignatureProperty" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Zhaord.ComparableObject.RegisterSignatureProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyInfo">
          <type api="T:System.Reflection.PropertyInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject" ref="true" />
      </containers>
      <file name="95c600b2-43a9-293e-fac3-3c60674607b4" />
    </api>
    <api id="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.String)">
      <topicdata group="api" />
      <apidata name="RegisterSignatureProperty" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Zhaord.ComparableObject.RegisterSignatureProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject" ref="true" />
      </containers>
      <file name="901cba7e-87d4-4a4a-313b-c3a2499eac07" />
    </api>
    <api id="T:Zhaord.ComparableObject`1">
      <topicdata group="api" />
      <apidata name="ComparableObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Zhaord.ComparableObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Zhaord.Data.Notifies.NotifyEntry" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.ComparableObject`1" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="Overload:Zhaord.ComparableObject`1.Equals">
          <element api="M:Zhaord.ComparableObject.Equals(System.Object)" />
          <element api="M:Zhaord.ComparableObject`1.Equals(`0)" />
        </element>
        <element api="M:Zhaord.ComparableObject.GetHashCode" />
        <element api="M:Zhaord.ComparableObject.GetSignatureProperties" />
        <element api="M:Zhaord.ComparableObject.GetSignaturePropertiesCore" />
        <element api="M:Zhaord.ComparableObject.GetTypeUnproxied" />
        <element api="M:Zhaord.ComparableObject.HasSameSignatureAs(Zhaord.ComparableObject)" />
        <element api="Overload:Zhaord.ComparableObject`1.RegisterSignatureProperty">
          <element api="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.Reflection.PropertyInfo)" />
          <element api="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.String)" />
          <element api="M:Zhaord.ComparableObject`1.RegisterSignatureProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.ComparableObject`1.#ctor" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
      </containers>
      <file name="77f3a60a-db2b-d7e0-c335-55f0b8d74dfd" />
    </api>
    <api id="Methods.T:Zhaord.ComparableObject`1">
      <topicdata name="ComparableObject" group="list" subgroup="Methods" typeTopicId="T:Zhaord.ComparableObject`1" />
      <apidata name="ComparableObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="Overload:Zhaord.ComparableObject`1.Equals">
          <element api="M:Zhaord.ComparableObject.Equals(System.Object)" />
          <element api="M:Zhaord.ComparableObject`1.Equals(`0)" />
        </element>
        <element api="M:Zhaord.ComparableObject.GetHashCode" />
        <element api="M:Zhaord.ComparableObject.GetSignatureProperties" />
        <element api="M:Zhaord.ComparableObject.GetSignaturePropertiesCore" />
        <element api="M:Zhaord.ComparableObject.GetTypeUnproxied" />
        <element api="M:Zhaord.ComparableObject.HasSameSignatureAs(Zhaord.ComparableObject)" />
        <element api="Overload:Zhaord.ComparableObject`1.RegisterSignatureProperty">
          <element api="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.Reflection.PropertyInfo)" />
          <element api="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.String)" />
          <element api="M:Zhaord.ComparableObject`1.RegisterSignatureProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject`1" />
      </containers>
      <file name="a678355d-7f58-8caf-1d2b-612f3e4a18b4" />
    </api>
    <api id="Overload:Zhaord.ComparableObject`1.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.ComparableObject.Equals(System.Object)" />
        <element api="M:Zhaord.ComparableObject`1.Equals(`0)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject`1" ref="true" />
      </containers>
      <file name="3f08b25d-71ab-be69-f291-b1c02fcb1c75" />
    </api>
    <api id="Overload:Zhaord.ComparableObject`1.RegisterSignatureProperty">
      <topicdata name="RegisterSignatureProperty" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="RegisterSignatureProperty" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.Reflection.PropertyInfo)" />
        <element api="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.String)" />
        <element api="M:Zhaord.ComparableObject`1.RegisterSignatureProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject`1" ref="true" />
      </containers>
      <file name="e4c7e343-4f25-d6d3-7fc9-83b5bbaf47aa" />
    </api>
    <api id="M:Zhaord.ComparableObject`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject`1" ref="true" />
      </containers>
      <file name="1d087370-9c23-cb52-ca11-3bb4abdd8725" />
    </api>
    <api id="M:Zhaord.ComparableObject`1.Equals(`0)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.ComparableObject`1.Equals" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="other">
          <template name="T" index="0" api="T:Zhaord.ComparableObject`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Zhaord.ComparableObject`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject`1" ref="true" />
      </containers>
      <file name="b24e0264-e214-a1d4-a2fe-210bd2b3267c" />
    </api>
    <api id="M:Zhaord.ComparableObject`1.RegisterSignatureProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
      <topicdata group="api" />
      <apidata name="RegisterSignatureProperty" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Zhaord.ComparableObject`1.RegisterSignatureProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Zhaord.ComparableObject`1" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ComparableObject`1" ref="true" />
      </containers>
      <file name="fa515862-2ca4-022d-eb4b-0402fe481d9b" />
    </api>
    <api id="T:Zhaord.DisposableObject">
      <topicdata group="api" />
      <apidata name="DisposableObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.DisposableObject.#ctor" />
        <element api="Overload:Zhaord.DisposableObject.CheckDisposed">
          <element api="M:Zhaord.DisposableObject.CheckDisposed" />
          <element api="M:Zhaord.DisposableObject.CheckDisposed(System.String)" />
        </element>
        <element api="Overload:Zhaord.DisposableObject.Dispose">
          <element api="M:Zhaord.DisposableObject.Dispose" />
          <element api="M:Zhaord.DisposableObject.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:Zhaord.DisposableObject.DisposeDictionary">
          <element api="M:Zhaord.DisposableObject.DisposeDictionary``2(System.Collections.Generic.IDictionary{``0,``1})" />
          <element api="M:Zhaord.DisposableObject.DisposeDictionary(System.Collections.IDictionary)" />
        </element>
        <element api="M:Zhaord.DisposableObject.DisposeEnumerable(System.Collections.IEnumerable)" />
        <element api="M:Zhaord.DisposableObject.DisposeMember(System.Object)" />
        <element api="M:Zhaord.DisposableObject.Finalize" />
        <element api="P:Zhaord.DisposableObject.IsDisposed" />
        <element api="M:Zhaord.DisposableObject.OnDispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
      </containers>
      <file name="5853672e-d20c-752e-ad07-004afa28da8b" />
    </api>
    <api id="Methods.T:Zhaord.DisposableObject">
      <topicdata name="DisposableObject" group="list" subgroup="Methods" typeTopicId="T:Zhaord.DisposableObject" />
      <apidata name="DisposableObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.DisposableObject.CheckDisposed">
          <element api="M:Zhaord.DisposableObject.CheckDisposed" />
          <element api="M:Zhaord.DisposableObject.CheckDisposed(System.String)" />
        </element>
        <element api="Overload:Zhaord.DisposableObject.Dispose">
          <element api="M:Zhaord.DisposableObject.Dispose" />
          <element api="M:Zhaord.DisposableObject.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:Zhaord.DisposableObject.DisposeDictionary">
          <element api="M:Zhaord.DisposableObject.DisposeDictionary``2(System.Collections.Generic.IDictionary{``0,``1})" />
          <element api="M:Zhaord.DisposableObject.DisposeDictionary(System.Collections.IDictionary)" />
        </element>
        <element api="M:Zhaord.DisposableObject.DisposeEnumerable(System.Collections.IEnumerable)" />
        <element api="M:Zhaord.DisposableObject.DisposeMember(System.Object)" />
        <element api="M:Zhaord.DisposableObject.Finalize" />
        <element api="M:Zhaord.DisposableObject.OnDispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" />
      </containers>
      <file name="c3903697-43ee-9b15-c601-3be03cbd7faa" />
    </api>
    <api id="Properties.T:Zhaord.DisposableObject">
      <topicdata name="DisposableObject" group="list" subgroup="Properties" typeTopicId="T:Zhaord.DisposableObject" />
      <apidata name="DisposableObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.DisposableObject.IsDisposed" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" />
      </containers>
      <file name="a7de8dce-e7e8-bc2e-a929-3cb0a7c8cee0" />
    </api>
    <api id="Overload:Zhaord.DisposableObject.CheckDisposed">
      <topicdata name="CheckDisposed" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="CheckDisposed" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.DisposableObject.CheckDisposed" />
        <element api="M:Zhaord.DisposableObject.CheckDisposed(System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" ref="true" />
      </containers>
      <file name="321c4c58-10cc-e207-678b-fcfca236bbab" />
    </api>
    <api id="Overload:Zhaord.DisposableObject.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.DisposableObject.Dispose" />
        <element api="M:Zhaord.DisposableObject.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" ref="true" />
      </containers>
      <file name="6934ca43-9868-97c5-8be6-dae12989507e" />
    </api>
    <api id="Overload:Zhaord.DisposableObject.DisposeDictionary">
      <topicdata name="DisposeDictionary" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="DisposeDictionary" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.DisposableObject.DisposeDictionary``2(System.Collections.Generic.IDictionary{``0,``1})" />
        <element api="M:Zhaord.DisposableObject.DisposeDictionary(System.Collections.IDictionary)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" ref="true" />
      </containers>
      <file name="ee18e7ef-dbb7-7c70-66eb-ce5f69eb00ff" />
    </api>
    <api id="M:Zhaord.DisposableObject.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" ref="true" />
      </containers>
      <file name="596552d2-052e-5533-32c8-9bdeb13fc022" />
    </api>
    <api id="M:Zhaord.DisposableObject.CheckDisposed">
      <topicdata group="api" />
      <apidata name="CheckDisposed" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Zhaord.DisposableObject.CheckDisposed" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" ref="true" />
      </containers>
      <file name="47d93e1e-d65f-ebe0-44c3-1284449caae9" />
    </api>
    <api id="M:Zhaord.DisposableObject.CheckDisposed(System.String)">
      <topicdata group="api" />
      <apidata name="CheckDisposed" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Zhaord.DisposableObject.CheckDisposed" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="errorMessage">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" ref="true" />
      </containers>
      <file name="7b38d58a-feef-07df-9461-83e995454f12" />
    </api>
    <api id="M:Zhaord.DisposableObject.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.DisposableObject.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" ref="true" />
      </containers>
      <file name="a3b389c6-17ef-d80c-c6fc-3629df3073b5" />
    </api>
    <api id="M:Zhaord.DisposableObject.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Zhaord.DisposableObject.Dispose" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" ref="true" />
      </containers>
      <file name="8e5abde1-ca01-b34f-9e60-09c5be986c72" />
    </api>
    <api id="M:Zhaord.DisposableObject.DisposeDictionary``2(System.Collections.Generic.IDictionary{``0,``1})">
      <topicdata group="api" />
      <apidata name="DisposeDictionary" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:Zhaord.DisposableObject.DisposeDictionary" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TK" />
        <template name="TV" />
      </templates>
      <parameters>
        <parameter name="dictionary">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <template name="TK" index="0" api="M:Zhaord.DisposableObject.DisposeDictionary``2(System.Collections.Generic.IDictionary{``0,``1})" />
              <template name="TV" index="1" api="M:Zhaord.DisposableObject.DisposeDictionary``2(System.Collections.Generic.IDictionary{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" ref="true" />
      </containers>
      <file name="c69e95dd-6fe7-64d4-53b9-72c2229eff25" />
    </api>
    <api id="M:Zhaord.DisposableObject.DisposeDictionary(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="DisposeDictionary" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:Zhaord.DisposableObject.DisposeDictionary" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dictionary">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" ref="true" />
      </containers>
      <file name="4e5fea0b-2355-be21-a10e-b0cf10dc9b79" />
    </api>
    <api id="M:Zhaord.DisposableObject.DisposeEnumerable(System.Collections.IEnumerable)">
      <topicdata group="api" />
      <apidata name="DisposeEnumerable" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="enumerable">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" ref="true" />
      </containers>
      <file name="8b004a16-b412-20a4-3c2f-20c5c71feb19" />
    </api>
    <api id="M:Zhaord.DisposableObject.DisposeMember(System.Object)">
      <topicdata group="api" />
      <apidata name="DisposeMember" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="member">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" ref="true" />
      </containers>
      <file name="c3bf19bc-2c1b-0754-6ed7-159a62ce7152" />
    </api>
    <api id="M:Zhaord.DisposableObject.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" ref="true" />
      </containers>
      <file name="1c525a19-62d1-d413-c0a3-8b6dc19e0d0a" />
    </api>
    <api id="P:Zhaord.DisposableObject.IsDisposed">
      <topicdata group="api" />
      <apidata name="IsDisposed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsDisposed" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" ref="true" />
      </containers>
      <file name="ed0e3d57-c8b7-2354-85e8-fbb10e7bcf6e" />
    </api>
    <api id="M:Zhaord.DisposableObject.OnDispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="OnDispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.DisposableObject" ref="true" />
      </containers>
      <file name="abdb1573-97f7-376c-27e0-d954884dfa7d" />
    </api>
    <api id="T:Zhaord.Error">
      <topicdata group="api" />
      <apidata name="Error" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Zhaord.Error.Application">
          <element api="M:Zhaord.Error.Application(System.String,System.Object[])" />
          <element api="M:Zhaord.Error.Application(System.Exception,System.String,System.Object[])" />
        </element>
        <element api="Overload:Zhaord.Error.Argument">
          <element api="M:Zhaord.Error.Argument``1(System.Func{``0},System.String,System.Object[])" />
          <element api="M:Zhaord.Error.Argument(System.String,System.String,System.Object[])" />
        </element>
        <element api="Overload:Zhaord.Error.ArgumentNull">
          <element api="M:Zhaord.Error.ArgumentNull``1(System.Func{``0})" />
          <element api="M:Zhaord.Error.ArgumentNull(System.String)" />
        </element>
        <element api="M:Zhaord.Error.ArgumentNullOrEmpty(System.Func{System.String})" />
        <element api="Overload:Zhaord.Error.ArgumentOutOfRange">
          <element api="M:Zhaord.Error.ArgumentOutOfRange``1(System.Func{``0})" />
          <element api="M:Zhaord.Error.ArgumentOutOfRange(System.String)" />
          <element api="M:Zhaord.Error.ArgumentOutOfRange(System.String,System.String,System.Object[])" />
        </element>
        <element api="Overload:Zhaord.Error.InvalidCast">
          <element api="M:Zhaord.Error.InvalidCast(System.Type,System.Type)" />
          <element api="M:Zhaord.Error.InvalidCast(System.Type,System.Type,System.Exception)" />
        </element>
        <element api="Overload:Zhaord.Error.InvalidOperation">
          <element api="M:Zhaord.Error.InvalidOperation``1(System.String,System.Func{``0})" />
          <element api="M:Zhaord.Error.InvalidOperation(System.String,System.Object[])" />
          <element api="M:Zhaord.Error.InvalidOperation``1(System.String,System.Exception,System.Func{``0})" />
          <element api="M:Zhaord.Error.InvalidOperation(System.String,System.Exception,System.Object[])" />
        </element>
        <element api="M:Zhaord.Error.MoreThanOneElement" />
        <element api="M:Zhaord.Error.NoElements" />
        <element api="M:Zhaord.Error.NotImplemented" />
        <element api="M:Zhaord.Error.NotSupported" />
        <element api="Overload:Zhaord.Error.ObjectDisposed">
          <element api="M:Zhaord.Error.ObjectDisposed(System.String)" />
          <element api="M:Zhaord.Error.ObjectDisposed(System.String,System.String,System.Object[])" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
      </containers>
      <file name="74eec030-e170-39c3-9322-12e63b910cb3" />
    </api>
    <api id="Methods.T:Zhaord.Error">
      <topicdata name="Error" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Error" />
      <apidata name="Error" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:Zhaord.Error.Application">
          <element api="M:Zhaord.Error.Application(System.String,System.Object[])" />
          <element api="M:Zhaord.Error.Application(System.Exception,System.String,System.Object[])" />
        </element>
        <element api="Overload:Zhaord.Error.Argument">
          <element api="M:Zhaord.Error.Argument``1(System.Func{``0},System.String,System.Object[])" />
          <element api="M:Zhaord.Error.Argument(System.String,System.String,System.Object[])" />
        </element>
        <element api="Overload:Zhaord.Error.ArgumentNull">
          <element api="M:Zhaord.Error.ArgumentNull``1(System.Func{``0})" />
          <element api="M:Zhaord.Error.ArgumentNull(System.String)" />
        </element>
        <element api="M:Zhaord.Error.ArgumentNullOrEmpty(System.Func{System.String})" />
        <element api="Overload:Zhaord.Error.ArgumentOutOfRange">
          <element api="M:Zhaord.Error.ArgumentOutOfRange``1(System.Func{``0})" />
          <element api="M:Zhaord.Error.ArgumentOutOfRange(System.String)" />
          <element api="M:Zhaord.Error.ArgumentOutOfRange(System.String,System.String,System.Object[])" />
        </element>
        <element api="Overload:Zhaord.Error.InvalidCast">
          <element api="M:Zhaord.Error.InvalidCast(System.Type,System.Type)" />
          <element api="M:Zhaord.Error.InvalidCast(System.Type,System.Type,System.Exception)" />
        </element>
        <element api="Overload:Zhaord.Error.InvalidOperation">
          <element api="M:Zhaord.Error.InvalidOperation``1(System.String,System.Func{``0})" />
          <element api="M:Zhaord.Error.InvalidOperation(System.String,System.Object[])" />
          <element api="M:Zhaord.Error.InvalidOperation``1(System.String,System.Exception,System.Func{``0})" />
          <element api="M:Zhaord.Error.InvalidOperation(System.String,System.Exception,System.Object[])" />
        </element>
        <element api="M:Zhaord.Error.MoreThanOneElement" />
        <element api="M:Zhaord.Error.NoElements" />
        <element api="M:Zhaord.Error.NotImplemented" />
        <element api="M:Zhaord.Error.NotSupported" />
        <element api="Overload:Zhaord.Error.ObjectDisposed">
          <element api="M:Zhaord.Error.ObjectDisposed(System.String)" />
          <element api="M:Zhaord.Error.ObjectDisposed(System.String,System.String,System.Object[])" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" />
      </containers>
      <file name="ee55087a-e0da-0642-935a-938e2eeecb40" />
    </api>
    <api id="Overload:Zhaord.Error.Application">
      <topicdata name="Application" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Application" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Error.Application(System.String,System.Object[])" />
        <element api="M:Zhaord.Error.Application(System.Exception,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
      <file name="a669f710-bb48-0558-1a5d-e73f7f4426b6" />
    </api>
    <api id="Overload:Zhaord.Error.Argument">
      <topicdata name="Argument" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Argument" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Error.Argument``1(System.Func{``0},System.String,System.Object[])" />
        <element api="M:Zhaord.Error.Argument(System.String,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
      <file name="0275dcde-53e6-01e2-6efd-c9172977c599" />
    </api>
    <api id="Overload:Zhaord.Error.ArgumentNull">
      <topicdata name="ArgumentNull" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ArgumentNull" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Error.ArgumentNull``1(System.Func{``0})" />
        <element api="M:Zhaord.Error.ArgumentNull(System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
      <file name="4e5432b4-a52f-c6ca-4276-623707b4e080" />
    </api>
    <api id="Overload:Zhaord.Error.ArgumentOutOfRange">
      <topicdata name="ArgumentOutOfRange" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ArgumentOutOfRange" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Error.ArgumentOutOfRange``1(System.Func{``0})" />
        <element api="M:Zhaord.Error.ArgumentOutOfRange(System.String)" />
        <element api="M:Zhaord.Error.ArgumentOutOfRange(System.String,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
      <file name="bba57a1d-922a-c9eb-4229-0215488bf12e" />
    </api>
    <api id="Overload:Zhaord.Error.InvalidCast">
      <topicdata name="InvalidCast" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="InvalidCast" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Error.InvalidCast(System.Type,System.Type)" />
        <element api="M:Zhaord.Error.InvalidCast(System.Type,System.Type,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
      <file name="20b54c03-708a-f858-21e9-b9007cea3737" />
    </api>
    <api id="Overload:Zhaord.Error.InvalidOperation">
      <topicdata name="InvalidOperation" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="InvalidOperation" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Error.InvalidOperation``1(System.String,System.Func{``0})" />
        <element api="M:Zhaord.Error.InvalidOperation(System.String,System.Object[])" />
        <element api="M:Zhaord.Error.InvalidOperation``1(System.String,System.Exception,System.Func{``0})" />
        <element api="M:Zhaord.Error.InvalidOperation(System.String,System.Exception,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
      <file name="413a491b-1270-e037-3976-80be665be1c9" />
    </api>
    <api id="Overload:Zhaord.Error.ObjectDisposed">
      <topicdata name="ObjectDisposed" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ObjectDisposed" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Error.ObjectDisposed(System.String)" />
        <element api="M:Zhaord.Error.ObjectDisposed(System.String,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
      <file name="393df6de-570b-5603-1bf3-ca3e67296c85" />
    </api>
    <api id="M:Zhaord.Error.Application(System.Exception,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="Application" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.Application" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
      <file name="4d8194dd-d7ca-496f-fa47-14bf2ebdaab1" />
    </api>
    <api id="M:Zhaord.Error.Application(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="Application" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.Application" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
      <file name="26a78f2a-cd22-32f9-fe86-956fcbf128c2" />
    </api>
    <api id="M:Zhaord.Error.Argument``1(System.Func{``0},System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="Argument" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.Argument" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="arg">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Error.Argument``1(System.Func{``0},System.String,System.Object[])" />
            </specialization>
          </type>
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
      <file name="a785cfbc-0a9d-ab1f-0e5b-4b740a0b30cf" />
    </api>
    <api id="M:Zhaord.Error.Argument(System.String,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="Argument" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.Argument" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
      <file name="bbd214ed-a221-51b7-fe3f-05b2bc211ffb" />
    </api>
    <api id="M:Zhaord.Error.ArgumentNull``1(System.Func{``0})">
      <topicdata group="api" />
      <apidata name="ArgumentNull" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.ArgumentNull" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="arg">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Error.ArgumentNull``1(System.Func{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
      <file name="4a529e8c-3a49-3bf1-042b-c877a99c5a43" />
    </api>
    <api id="M:Zhaord.Error.ArgumentNull(System.String)">
      <topicdata group="api" />
      <apidata name="ArgumentNull" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.ArgumentNull" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
      <file name="e8492a77-6731-783c-ecfc-b62cc74f98d5" />
    </api>
    <api id="M:Zhaord.Error.ArgumentNullOrEmpty(System.Func{System.String})">
      <topicdata group="api" />
      <apidata name="ArgumentNullOrEmpty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arg">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
      <file name="d1177397-d120-2541-b9b3-26a2809edd0c" />
    </api>
    <api id="M:Zhaord.Error.ArgumentOutOfRange``1(System.Func{``0})">
      <topicdata group="api" />
      <apidata name="ArgumentOutOfRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.ArgumentOutOfRange" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="arg">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Error.ArgumentOutOfRange``1(System.Func{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
      <file name="73dc37b1-8196-2e2b-1d11-4d1ea63c982b" />
    </api>
    <api id="M:Zhaord.Error.ArgumentOutOfRange(System.String)">
      <topicdata group="api" />
      <apidata name="ArgumentOutOfRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.ArgumentOutOfRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
      <file name="607e27e5-5a5f-bdc6-0848-ffce81376bac" />
    </api>
    <api id="M:Zhaord.Error.ArgumentOutOfRange(System.String,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ArgumentOutOfRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.ArgumentOutOfRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
      <file name="eac7a64e-da7c-80bb-6948-4f9035ce34bc" />
    </api>
    <api id="M:Zhaord.Error.InvalidCast(System.Type,System.Type)">
      <topicdata group="api" />
      <apidata name="InvalidCast" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.InvalidCast" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fromType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="toType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
      <file name="ec683939-6b40-7e5b-5aee-3fe6016fd23b" />
    </api>
    <api id="M:Zhaord.Error.InvalidCast(System.Type,System.Type,System.Exception)">
      <topicdata group="api" />
      <apidata name="InvalidCast" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.InvalidCast" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fromType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="toType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
      <file name="7e603340-52aa-2f57-447d-ea2941fef958" />
    </api>
    <api id="M:Zhaord.Error.InvalidOperation``1(System.String,System.Exception,System.Func{``0})">
      <topicdata group="api" />
      <apidata name="InvalidOperation" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.InvalidOperation" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="member">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Error.InvalidOperation``1(System.String,System.Exception,System.Func{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
      <file name="b899e8fa-5b37-dd55-b9ba-d1c8aa23bfc7" />
    </api>
    <api id="M:Zhaord.Error.InvalidOperation(System.String,System.Exception,System.Object[])">
      <topicdata group="api" />
      <apidata name="InvalidOperation" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.InvalidOperation" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
      <file name="777746a0-ce52-50d5-5c97-0e57b06214d7" />
    </api>
    <api id="M:Zhaord.Error.InvalidOperation``1(System.String,System.Func{``0})">
      <topicdata group="api" />
      <apidata name="InvalidOperation" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.InvalidOperation" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="member">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Error.InvalidOperation``1(System.String,System.Func{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
      <file name="32140934-a753-cf9d-621f-5fc10374ab0d" />
    </api>
    <api id="M:Zhaord.Error.InvalidOperation(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="InvalidOperation" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.InvalidOperation" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
      <file name="c057ec23-252c-f012-b1d7-d90987e8ce44" />
    </api>
    <api id="M:Zhaord.Error.MoreThanOneElement">
      <topicdata group="api" />
      <apidata name="MoreThanOneElement" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
      <file name="bf0c1202-be9b-10fa-a154-21759499c72c" />
    </api>
    <api id="M:Zhaord.Error.NoElements">
      <topicdata group="api" />
      <apidata name="NoElements" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
      <file name="db0b0baf-196f-0b0e-3442-9de62f168a40" />
    </api>
    <api id="M:Zhaord.Error.NotImplemented">
      <topicdata group="api" />
      <apidata name="NotImplemented" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
      <file name="a8d5dc40-28cd-bf7a-0cfc-b54710d9c337" />
    </api>
    <api id="M:Zhaord.Error.NotSupported">
      <topicdata group="api" />
      <apidata name="NotSupported" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
      <file name="d02df291-cefa-b397-4605-41bf8fc6b15e" />
    </api>
    <api id="M:Zhaord.Error.ObjectDisposed(System.String)">
      <topicdata group="api" />
      <apidata name="ObjectDisposed" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.ObjectDisposed" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="objectName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
      <file name="15491f12-1c77-2906-dfbd-725f9bac06f6" />
    </api>
    <api id="M:Zhaord.Error.ObjectDisposed(System.String,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ObjectDisposed" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Error.ObjectDisposed" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="objectName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Error" ref="true" />
      </containers>
      <file name="a1812fe5-2d76-f8d6-a654-5f12f4b7af2c" />
    </api>
    <api id="T:Zhaord.Guard">
      <topicdata group="api" />
      <apidata name="Guard" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.Guard.Against">
          <element api="M:Zhaord.Guard.Against``1(System.Boolean,System.String)" />
          <element api="M:Zhaord.Guard.Against``1(System.Func{System.Boolean},System.String)" />
        </element>
        <element api="M:Zhaord.Guard.ArgumentInRange``1(``0,``0,``0,System.String)" />
        <element api="Overload:Zhaord.Guard.ArgumentIsEnumType">
          <element api="M:Zhaord.Guard.ArgumentIsEnumType(System.Type,System.String)" />
          <element api="M:Zhaord.Guard.ArgumentIsEnumType(System.Type,System.Object,System.String)" />
        </element>
        <element api="M:Zhaord.Guard.ArgumentIsPositive``1(``0,System.String,System.String)" />
        <element api="M:Zhaord.Guard.ArgumentIsTrue(System.Boolean,System.String,System.String)" />
        <element api="M:Zhaord.Guard.ArgumentNotDisposed(Zhaord.DisposableObject,System.String)" />
        <element api="Overload:Zhaord.Guard.ArgumentNotEmpty">
          <element api="M:Zhaord.Guard.ArgumentNotEmpty(System.Func{System.Guid})" />
          <element api="M:Zhaord.Guard.ArgumentNotEmpty(System.Func{System.String})" />
          <element api="M:Zhaord.Guard.ArgumentNotEmpty``1(System.Collections.Generic.ICollection{``0},System.String)" />
          <element api="M:Zhaord.Guard.ArgumentNotEmpty(System.Guid,System.String)" />
          <element api="M:Zhaord.Guard.ArgumentNotEmpty(System.String,System.String)" />
        </element>
        <element api="M:Zhaord.Guard.ArgumentNotNegative``1(``0,System.String,System.String)" />
        <element api="Overload:Zhaord.Guard.ArgumentNotNull">
          <element api="M:Zhaord.Guard.ArgumentNotNull``1(System.Func{``0})" />
          <element api="M:Zhaord.Guard.ArgumentNotNull(System.Object,System.String)" />
        </element>
        <element api="M:Zhaord.Guard.ArgumentNotOutOfLength(System.String,System.Int32,System.String)" />
        <element api="M:Zhaord.Guard.ArgumentNotZero``1(``0,System.String)" />
        <element api="Overload:Zhaord.Guard.Arguments">
          <element api="M:Zhaord.Guard.Arguments``2(System.Func{``0},System.Func{``1})" />
          <element api="M:Zhaord.Guard.Arguments``3(System.Func{``0},System.Func{``1},System.Func{``2})" />
          <element api="M:Zhaord.Guard.Arguments``4(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3})" />
          <element api="M:Zhaord.Guard.Arguments``5(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3},System.Func{``4})" />
        </element>
        <element api="Overload:Zhaord.Guard.HasDefaultConstructor">
          <element api="M:Zhaord.Guard.HasDefaultConstructor``1" />
          <element api="M:Zhaord.Guard.HasDefaultConstructor(System.Type)" />
        </element>
        <element api="M:Zhaord.Guard.Implements``1(System.Type,System.String)" />
        <element api="Overload:Zhaord.Guard.InheritsFrom">
          <element api="M:Zhaord.Guard.InheritsFrom``1(System.Type)" />
          <element api="M:Zhaord.Guard.InheritsFrom``1(System.Type,System.String)" />
        </element>
        <element api="M:Zhaord.Guard.IsEqual``1(System.Object,System.Object,System.String)" />
        <element api="M:Zhaord.Guard.IsSubclassOf``1(System.Type)" />
        <element api="Overload:Zhaord.Guard.IsTypeOf">
          <element api="M:Zhaord.Guard.IsTypeOf``1(System.Object)" />
          <element api="M:Zhaord.Guard.IsTypeOf``1(System.Object,System.String)" />
        </element>
        <element api="M:Zhaord.Guard.NotNull``1(System.Func{``0})" />
        <element api="M:Zhaord.Guard.PagingArgsValid(System.Int32,System.Int32,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
      </containers>
      <file name="9e918b00-f9df-3ef4-9764-229e8a437e89" />
    </api>
    <api id="Methods.T:Zhaord.Guard">
      <topicdata name="Guard" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Guard" />
      <apidata name="Guard" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.Guard.Against">
          <element api="M:Zhaord.Guard.Against``1(System.Boolean,System.String)" />
          <element api="M:Zhaord.Guard.Against``1(System.Func{System.Boolean},System.String)" />
        </element>
        <element api="M:Zhaord.Guard.ArgumentInRange``1(``0,``0,``0,System.String)" />
        <element api="Overload:Zhaord.Guard.ArgumentIsEnumType">
          <element api="M:Zhaord.Guard.ArgumentIsEnumType(System.Type,System.String)" />
          <element api="M:Zhaord.Guard.ArgumentIsEnumType(System.Type,System.Object,System.String)" />
        </element>
        <element api="M:Zhaord.Guard.ArgumentIsPositive``1(``0,System.String,System.String)" />
        <element api="M:Zhaord.Guard.ArgumentIsTrue(System.Boolean,System.String,System.String)" />
        <element api="M:Zhaord.Guard.ArgumentNotDisposed(Zhaord.DisposableObject,System.String)" />
        <element api="Overload:Zhaord.Guard.ArgumentNotEmpty">
          <element api="M:Zhaord.Guard.ArgumentNotEmpty(System.Func{System.Guid})" />
          <element api="M:Zhaord.Guard.ArgumentNotEmpty(System.Func{System.String})" />
          <element api="M:Zhaord.Guard.ArgumentNotEmpty``1(System.Collections.Generic.ICollection{``0},System.String)" />
          <element api="M:Zhaord.Guard.ArgumentNotEmpty(System.Guid,System.String)" />
          <element api="M:Zhaord.Guard.ArgumentNotEmpty(System.String,System.String)" />
        </element>
        <element api="M:Zhaord.Guard.ArgumentNotNegative``1(``0,System.String,System.String)" />
        <element api="Overload:Zhaord.Guard.ArgumentNotNull">
          <element api="M:Zhaord.Guard.ArgumentNotNull``1(System.Func{``0})" />
          <element api="M:Zhaord.Guard.ArgumentNotNull(System.Object,System.String)" />
        </element>
        <element api="M:Zhaord.Guard.ArgumentNotOutOfLength(System.String,System.Int32,System.String)" />
        <element api="M:Zhaord.Guard.ArgumentNotZero``1(``0,System.String)" />
        <element api="Overload:Zhaord.Guard.Arguments">
          <element api="M:Zhaord.Guard.Arguments``2(System.Func{``0},System.Func{``1})" />
          <element api="M:Zhaord.Guard.Arguments``3(System.Func{``0},System.Func{``1},System.Func{``2})" />
          <element api="M:Zhaord.Guard.Arguments``4(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3})" />
          <element api="M:Zhaord.Guard.Arguments``5(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3},System.Func{``4})" />
        </element>
        <element api="Overload:Zhaord.Guard.HasDefaultConstructor">
          <element api="M:Zhaord.Guard.HasDefaultConstructor``1" />
          <element api="M:Zhaord.Guard.HasDefaultConstructor(System.Type)" />
        </element>
        <element api="M:Zhaord.Guard.Implements``1(System.Type,System.String)" />
        <element api="Overload:Zhaord.Guard.InheritsFrom">
          <element api="M:Zhaord.Guard.InheritsFrom``1(System.Type)" />
          <element api="M:Zhaord.Guard.InheritsFrom``1(System.Type,System.String)" />
        </element>
        <element api="M:Zhaord.Guard.IsEqual``1(System.Object,System.Object,System.String)" />
        <element api="M:Zhaord.Guard.IsSubclassOf``1(System.Type)" />
        <element api="Overload:Zhaord.Guard.IsTypeOf">
          <element api="M:Zhaord.Guard.IsTypeOf``1(System.Object)" />
          <element api="M:Zhaord.Guard.IsTypeOf``1(System.Object,System.String)" />
        </element>
        <element api="M:Zhaord.Guard.NotNull``1(System.Func{``0})" />
        <element api="M:Zhaord.Guard.PagingArgsValid(System.Int32,System.Int32,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" />
      </containers>
      <file name="1eb67d34-cab5-4c8c-549d-6f8e782b6de0" />
    </api>
    <api id="Overload:Zhaord.Guard.Against">
      <topicdata name="Against" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Against" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Guard.Against``1(System.Boolean,System.String)" />
        <element api="M:Zhaord.Guard.Against``1(System.Func{System.Boolean},System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="448ccd94-0805-319c-da2d-f37990735377" />
    </api>
    <api id="Overload:Zhaord.Guard.ArgumentIsEnumType">
      <topicdata name="ArgumentIsEnumType" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ArgumentIsEnumType" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Guard.ArgumentIsEnumType(System.Type,System.String)" />
        <element api="M:Zhaord.Guard.ArgumentIsEnumType(System.Type,System.Object,System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="48d1a5b6-aeab-137a-2c15-3559a16c9fac" />
    </api>
    <api id="Overload:Zhaord.Guard.ArgumentNotEmpty">
      <topicdata name="ArgumentNotEmpty" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ArgumentNotEmpty" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Guard.ArgumentNotEmpty(System.Func{System.Guid})" />
        <element api="M:Zhaord.Guard.ArgumentNotEmpty(System.Func{System.String})" />
        <element api="M:Zhaord.Guard.ArgumentNotEmpty``1(System.Collections.Generic.ICollection{``0},System.String)" />
        <element api="M:Zhaord.Guard.ArgumentNotEmpty(System.Guid,System.String)" />
        <element api="M:Zhaord.Guard.ArgumentNotEmpty(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="fa90d04f-10c6-9765-0321-74eedbb45a89" />
    </api>
    <api id="Overload:Zhaord.Guard.ArgumentNotNull">
      <topicdata name="ArgumentNotNull" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ArgumentNotNull" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Guard.ArgumentNotNull``1(System.Func{``0})" />
        <element api="M:Zhaord.Guard.ArgumentNotNull(System.Object,System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="1efd37a2-f682-3238-9c78-7b071c7cb2f3" />
    </api>
    <api id="Overload:Zhaord.Guard.Arguments">
      <topicdata name="Arguments" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Arguments" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Guard.Arguments``2(System.Func{``0},System.Func{``1})" />
        <element api="M:Zhaord.Guard.Arguments``3(System.Func{``0},System.Func{``1},System.Func{``2})" />
        <element api="M:Zhaord.Guard.Arguments``4(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3})" />
        <element api="M:Zhaord.Guard.Arguments``5(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3},System.Func{``4})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="6cfa2e2f-2897-f2ec-6fca-582d195c6ed2" />
    </api>
    <api id="Overload:Zhaord.Guard.HasDefaultConstructor">
      <topicdata name="HasDefaultConstructor" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="HasDefaultConstructor" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Guard.HasDefaultConstructor``1" />
        <element api="M:Zhaord.Guard.HasDefaultConstructor(System.Type)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="e2ffb5f4-95c9-253b-f32f-44edfa0dc333" />
    </api>
    <api id="Overload:Zhaord.Guard.InheritsFrom">
      <topicdata name="InheritsFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="InheritsFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Guard.InheritsFrom``1(System.Type)" />
        <element api="M:Zhaord.Guard.InheritsFrom``1(System.Type,System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="2ad1e198-a396-bf4c-72c3-7cc4fe831e6c" />
    </api>
    <api id="Overload:Zhaord.Guard.IsTypeOf">
      <topicdata name="IsTypeOf" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="IsTypeOf" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Guard.IsTypeOf``1(System.Object)" />
        <element api="M:Zhaord.Guard.IsTypeOf``1(System.Object,System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="e26bcd8d-4b3d-7dfe-7c71-be011e9caaa5" />
    </api>
    <api id="M:Zhaord.Guard.Against``1(System.Boolean,System.String)">
      <topicdata group="api" />
      <apidata name="Against" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.Against" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TException">
          <constrained>
            <type api="T:System.Exception" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="assertion">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="message" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Assertion evaluation failed with 'false'.</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="bde94d77-ad63-680d-a273-1331b04644ee" />
    </api>
    <api id="M:Zhaord.Guard.Against``1(System.Func{System.Boolean},System.String)">
      <topicdata group="api" />
      <apidata name="Against" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.Against" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TException">
          <constrained>
            <type api="T:System.Exception" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="assertion">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="message" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Assertion evaluation failed with 'false'.</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="fce4313a-d1a9-fdf6-75fe-de0d73d7ebe0" />
    </api>
    <api id="M:Zhaord.Guard.ArgumentInRange``1(``0,``0,``0,System.String)">
      <topicdata group="api" />
      <apidata name="ArgumentInRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true">
            <implements>
              <type api="T:System.IComparable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Zhaord.Guard.ArgumentInRange``1(``0,``0,``0,System.String)" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="arg">
          <template name="T" index="0" api="M:Zhaord.Guard.ArgumentInRange``1(``0,``0,``0,System.String)" />
        </parameter>
        <parameter name="min">
          <template name="T" index="0" api="M:Zhaord.Guard.ArgumentInRange``1(``0,``0,``0,System.String)" />
        </parameter>
        <parameter name="max">
          <template name="T" index="0" api="M:Zhaord.Guard.ArgumentInRange``1(``0,``0,``0,System.String)" />
        </parameter>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="256782d2-646c-fd72-2417-c2c36ea32175" />
    </api>
    <api id="M:Zhaord.Guard.ArgumentIsEnumType(System.Type,System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="ArgumentIsEnumType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.ArgumentIsEnumType" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="enumType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="arg">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="2ecdee32-85b4-1f3f-2aa2-963c0ba75dc0" />
    </api>
    <api id="M:Zhaord.Guard.ArgumentIsEnumType(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name="ArgumentIsEnumType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.ArgumentIsEnumType" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arg">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="31d1a72a-2c47-3b21-1fe5-024a6bcc92d6" />
    </api>
    <api id="M:Zhaord.Guard.ArgumentIsPositive``1(``0,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ArgumentIsPositive" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true">
            <implements>
              <type api="T:System.IComparable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Zhaord.Guard.ArgumentIsPositive``1(``0,System.String,System.String)" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="arg">
          <template name="T" index="0" api="M:Zhaord.Guard.ArgumentIsPositive``1(``0,System.String,System.String)" />
        </parameter>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="message" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Argument '{0}' must be a positive value. Value: '{1}'.</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="8abe7896-85de-aff2-4a55-72232bac9ef6" />
    </api>
    <api id="M:Zhaord.Guard.ArgumentIsTrue(System.Boolean,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ArgumentIsTrue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arg">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="message" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>True expected for '{0}' but the condition was False.</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="171f16b1-89a1-33ea-f94e-159f64b53100" />
    </api>
    <api id="M:Zhaord.Guard.ArgumentNotDisposed(Zhaord.DisposableObject,System.String)">
      <topicdata group="api" />
      <apidata name="ArgumentNotDisposed" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arg">
          <type api="T:Zhaord.DisposableObject" ref="true" />
        </parameter>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="c44982a3-4e74-0e52-cea8-10361165edd1" />
    </api>
    <api id="M:Zhaord.Guard.ArgumentNotEmpty``1(System.Collections.Generic.ICollection{``0},System.String)">
      <topicdata group="api" />
      <apidata name="ArgumentNotEmpty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.ArgumentNotEmpty" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="arg">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Guard.ArgumentNotEmpty``1(System.Collections.Generic.ICollection{``0},System.String)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="d8c6752f-d31c-fdf2-73ff-527fa1fe0a04" />
    </api>
    <api id="M:Zhaord.Guard.ArgumentNotEmpty(System.Func{System.Guid})">
      <topicdata group="api" />
      <apidata name="ArgumentNotEmpty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.ArgumentNotEmpty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arg">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <type api="T:System.Guid" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="0b8802b0-a6c2-331e-6337-73b9bf62f311" />
    </api>
    <api id="M:Zhaord.Guard.ArgumentNotEmpty(System.Func{System.String})">
      <topicdata group="api" />
      <apidata name="ArgumentNotEmpty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.ArgumentNotEmpty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arg">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="e0e7e4dc-a858-c305-0250-5d7af2f12040" />
    </api>
    <api id="M:Zhaord.Guard.ArgumentNotEmpty(System.Guid,System.String)">
      <topicdata group="api" />
      <apidata name="ArgumentNotEmpty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.ArgumentNotEmpty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arg">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="9a109bf3-517f-1354-99ec-5196e5f7feda" />
    </api>
    <api id="M:Zhaord.Guard.ArgumentNotEmpty(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ArgumentNotEmpty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.ArgumentNotEmpty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arg">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="90c6efb1-8d3f-3adf-aa37-e09e86a1b660" />
    </api>
    <api id="M:Zhaord.Guard.ArgumentNotNegative``1(``0,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ArgumentNotNegative" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true">
            <implements>
              <type api="T:System.IComparable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Zhaord.Guard.ArgumentNotNegative``1(``0,System.String,System.String)" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="arg">
          <template name="T" index="0" api="M:Zhaord.Guard.ArgumentNotNegative``1(``0,System.String,System.String)" />
        </parameter>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="message" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Argument '{0}' cannot be a negative value. Value: '{1}'.</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="6e4932fc-be88-8945-3975-c4e61d28a9ac" />
    </api>
    <api id="M:Zhaord.Guard.ArgumentNotNull``1(System.Func{``0})">
      <topicdata group="api" />
      <apidata name="ArgumentNotNull" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.ArgumentNotNull" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="arg">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Guard.ArgumentNotNull``1(System.Func{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="baf1fd2b-0d05-033e-f6ae-d1d712cc80be" />
    </api>
    <api id="M:Zhaord.Guard.ArgumentNotNull(System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="ArgumentNotNull" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.ArgumentNotNull" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arg">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="6e035100-9832-3d04-f89a-5553fb7278e9" />
    </api>
    <api id="M:Zhaord.Guard.ArgumentNotOutOfLength(System.String,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="ArgumentNotOutOfLength" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arg">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="maxLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="be617fdb-ea9f-e5b0-eb3d-3f619ccf3a18" />
    </api>
    <api id="M:Zhaord.Guard.ArgumentNotZero``1(``0,System.String)">
      <topicdata group="api" />
      <apidata name="ArgumentNotZero" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true">
            <implements>
              <type api="T:System.IComparable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Zhaord.Guard.ArgumentNotZero``1(``0,System.String)" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="arg">
          <template name="T" index="0" api="M:Zhaord.Guard.ArgumentNotZero``1(``0,System.String)" />
        </parameter>
        <parameter name="argName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="b41dea16-23c2-437b-5a7c-cd3043895c01" />
    </api>
    <api id="M:Zhaord.Guard.Arguments``2(System.Func{``0},System.Func{``1})">
      <topicdata group="api" />
      <apidata name="Arguments" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.Arguments" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
      </templates>
      <parameters>
        <parameter name="arg1">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Zhaord.Guard.Arguments``2(System.Func{``0},System.Func{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg2">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T2" index="1" api="M:Zhaord.Guard.Arguments``2(System.Func{``0},System.Func{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="292adb21-075e-f6a0-9cc1-9b3a8c87fe43" />
    </api>
    <api id="M:Zhaord.Guard.Arguments``3(System.Func{``0},System.Func{``1},System.Func{``2})">
      <topicdata group="api" />
      <apidata name="Arguments" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.Arguments" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
      </templates>
      <parameters>
        <parameter name="arg1">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Zhaord.Guard.Arguments``3(System.Func{``0},System.Func{``1},System.Func{``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg2">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T2" index="1" api="M:Zhaord.Guard.Arguments``3(System.Func{``0},System.Func{``1},System.Func{``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg3">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T3" index="2" api="M:Zhaord.Guard.Arguments``3(System.Func{``0},System.Func{``1},System.Func{``2})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="70c54b43-8216-be9f-2a54-252a4727f00e" />
    </api>
    <api id="M:Zhaord.Guard.Arguments``4(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3})">
      <topicdata group="api" />
      <apidata name="Arguments" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.Arguments" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
      </templates>
      <parameters>
        <parameter name="arg1">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Zhaord.Guard.Arguments``4(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg2">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T2" index="1" api="M:Zhaord.Guard.Arguments``4(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg3">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T3" index="2" api="M:Zhaord.Guard.Arguments``4(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg4">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T4" index="3" api="M:Zhaord.Guard.Arguments``4(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="90e67df5-0b7d-f13b-d62d-ec93d23389d3" />
    </api>
    <api id="M:Zhaord.Guard.Arguments``5(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3},System.Func{``4})">
      <topicdata group="api" />
      <apidata name="Arguments" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.Arguments" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
      </templates>
      <parameters>
        <parameter name="arg1">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Zhaord.Guard.Arguments``5(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3},System.Func{``4})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg2">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T2" index="1" api="M:Zhaord.Guard.Arguments``5(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3},System.Func{``4})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg3">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T3" index="2" api="M:Zhaord.Guard.Arguments``5(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3},System.Func{``4})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg4">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T4" index="3" api="M:Zhaord.Guard.Arguments``5(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3},System.Func{``4})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg5">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T5" index="4" api="M:Zhaord.Guard.Arguments``5(System.Func{``0},System.Func{``1},System.Func{``2},System.Func{``3},System.Func{``4})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="ac34a6ea-7ac0-3a60-fce4-15db60e799a8" />
    </api>
    <api id="M:Zhaord.Guard.HasDefaultConstructor``1">
      <topicdata group="api" />
      <apidata name="HasDefaultConstructor" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.HasDefaultConstructor" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="34cb31b4-21aa-03cd-4aaa-a0937f503301" />
    </api>
    <api id="M:Zhaord.Guard.HasDefaultConstructor(System.Type)">
      <topicdata group="api" />
      <apidata name="HasDefaultConstructor" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.HasDefaultConstructor" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="t">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="41fe515d-6fa2-e2d7-ce83-56cb0077fac0" />
    </api>
    <api id="M:Zhaord.Guard.Implements``1(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name="Implements" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TInterface" />
      </templates>
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="message" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Type '{0}' must implement type '{1}'.</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="502ec8ef-07ec-e597-8efc-8e40490bb5e8" />
    </api>
    <api id="M:Zhaord.Guard.InheritsFrom``1(System.Type)">
      <topicdata group="api" />
      <apidata name="InheritsFrom" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.InheritsFrom" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TBase" />
      </templates>
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="03b8806f-831b-64cb-a086-86c66e29c8e0" />
    </api>
    <api id="M:Zhaord.Guard.InheritsFrom``1(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name="InheritsFrom" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.InheritsFrom" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TBase" />
      </templates>
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="fc07ec9d-5155-9324-8587-745493ecd3d9" />
    </api>
    <api id="M:Zhaord.Guard.IsEqual``1(System.Object,System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="IsEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TException">
          <constrained>
            <type api="T:System.Exception" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="compare">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="message" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Compared objects must be equal.</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="8d894898-dfb4-0f51-43ca-dabfb0721084" />
    </api>
    <api id="M:Zhaord.Guard.IsSubclassOf``1(System.Type)">
      <topicdata group="api" />
      <apidata name="IsSubclassOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TBase" />
      </templates>
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="e3e64a09-0e4a-ada2-ecc9-f59bdc73c8e3" />
    </api>
    <api id="M:Zhaord.Guard.IsTypeOf``1(System.Object)">
      <topicdata group="api" />
      <apidata name="IsTypeOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.IsTypeOf" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TType" />
      </templates>
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="b221dbb7-c4af-ee7d-804f-f7c13e8ec002" />
    </api>
    <api id="M:Zhaord.Guard.IsTypeOf``1(System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="IsTypeOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Guard.IsTypeOf" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TType" />
      </templates>
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="33038ed6-8e66-8d48-3b9e-2aeeab65e718" />
    </api>
    <api id="M:Zhaord.Guard.NotNull``1(System.Func{``0})">
      <topicdata group="api" />
      <apidata name="NotNull" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="M:Zhaord.Guard.NotNull``1(System.Func{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="5a74161f-a552-61e2-536d-4792389a5a0d" />
    </api>
    <api id="M:Zhaord.Guard.PagingArgsValid(System.Int32,System.Int32,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="PagingArgsValid" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="indexArg">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sizeArg">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="indexArgName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sizeArgName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.Guard" ref="true" />
      </containers>
      <file name="90bf833d-55f8-4dab-adf7-ecfb09236047" />
    </api>
    <api id="T:Zhaord.IApplicationServiceContract">
      <topicdata group="api" />
      <apidata name="IApplicationServiceContract" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
      </containers>
      <file name="732bd7f2-327f-a07a-f97a-3e8de59a4533" />
    </api>
    <api id="T:Zhaord.ICloneable`1">
      <topicdata group="api" />
      <apidata name="ICloneable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <variance covariant="true" />
        </template>
      </templates>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <implementors>
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </implementors>
      <elements>
        <element api="M:Zhaord.ICloneable`1.Clone" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
      </containers>
      <file name="89d9bb22-6e4e-efb5-5368-d8f020d8d987" />
    </api>
    <api id="Methods.T:Zhaord.ICloneable`1">
      <topicdata name="ICloneable" group="list" subgroup="Methods" typeTopicId="T:Zhaord.ICloneable`1" />
      <apidata name="ICloneable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <variance covariant="true" />
        </template>
      </templates>
      <elements>
        <element api="M:Zhaord.ICloneable`1.Clone" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ICloneable`1" />
      </containers>
      <file name="099d64ae-4bce-8593-aff5-05cc727d13da" />
    </api>
    <api id="M:Zhaord.ICloneable`1.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <template name="T" index="0" api="T:Zhaord.ICloneable`1" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ICloneable`1" ref="true" />
      </containers>
      <file name="1a313f37-65b8-d92d-2fa1-e1fc9b31eecf" />
    </api>
    <api id="T:Zhaord.IMergedData">
      <topicdata group="api" />
      <apidata name="IMergedData" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Extensions.MiscExtensions.GetMergedDataValue``1(Zhaord.IMergedData,System.String,``0)" source="extension">
          <apidata name="GetMergedDataValue" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="key">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="defaultValue">
              <template name="T" index="0" api="M:Zhaord.Extensions.MiscExtensions.GetMergedDataValue``1(Zhaord.IMergedData,System.String,``0)" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.MiscExtensions.GetMergedDataValue``1(Zhaord.IMergedData,System.String,``0)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="P:Zhaord.IMergedData.MergedDataIgnore" />
        <element api="P:Zhaord.IMergedData.MergedDataValues" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
      </containers>
      <file name="9cfcb5e9-4e54-1992-d900-580b8aa01949" />
    </api>
    <api id="Methods.T:Zhaord.IMergedData">
      <topicdata name="IMergedData" group="list" subgroup="Methods" typeTopicId="T:Zhaord.IMergedData" />
      <apidata name="IMergedData" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Extensions.MiscExtensions.GetMergedDataValue``1(Zhaord.IMergedData,System.String,``0)" source="extension">
          <apidata name="GetMergedDataValue" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="key">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="defaultValue">
              <template name="T" index="0" api="M:Zhaord.Extensions.MiscExtensions.GetMergedDataValue``1(Zhaord.IMergedData,System.String,``0)" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.MiscExtensions.GetMergedDataValue``1(Zhaord.IMergedData,System.String,``0)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IMergedData" />
      </containers>
      <file name="4156c63f-ed66-b2c0-0f5e-242c9076846a" />
    </api>
    <api id="Properties.T:Zhaord.IMergedData">
      <topicdata name="IMergedData" group="list" subgroup="Properties" typeTopicId="T:Zhaord.IMergedData" />
      <apidata name="IMergedData" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.IMergedData.MergedDataIgnore" />
        <element api="P:Zhaord.IMergedData.MergedDataValues" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IMergedData" />
      </containers>
      <file name="14ba1495-3020-5f9e-914d-e8aaf113bcac" />
    </api>
    <api id="P:Zhaord.IMergedData.MergedDataIgnore">
      <topicdata group="api" />
      <apidata name="MergedDataIgnore" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MergedDataIgnore" />
      <setter name="set_MergedDataIgnore" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IMergedData" ref="true" />
      </containers>
      <file name="826ed340-828e-c632-fb37-efc808816f5b" />
    </api>
    <api id="P:Zhaord.IMergedData.MergedDataValues">
      <topicdata group="api" />
      <apidata name="MergedDataValues" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_MergedDataValues" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IMergedData" ref="true" />
      </containers>
      <file name="86f69a89-0a6a-64ea-3e22-90a3709f31ea" />
    </api>
    <api id="T:Zhaord.IOrdered">
      <topicdata group="api" />
      <apidata name="IOrdered" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.IOrdered.Ordinal" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
      </containers>
      <file name="a91b7514-d6de-b229-250d-eb44d00abee4" />
    </api>
    <api id="Properties.T:Zhaord.IOrdered">
      <topicdata name="IOrdered" group="list" subgroup="Properties" typeTopicId="T:Zhaord.IOrdered" />
      <apidata name="IOrdered" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.IOrdered.Ordinal" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IOrdered" />
      </containers>
      <file name="2e76a87b-5556-8efd-4642-b3b2985b733e" />
    </api>
    <api id="P:Zhaord.IOrdered.Ordinal">
      <topicdata group="api" />
      <apidata name="Ordinal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Ordinal" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IOrdered" ref="true" />
      </containers>
      <file name="6eb08fc8-50ee-5534-3c53-e6f3d612aec8" />
    </api>
    <api id="T:Zhaord.IStartupTask">
      <topicdata group="api" />
      <apidata name="IStartupTask" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.IStartupTask.Execute" />
        <element api="P:Zhaord.IStartupTask.Order" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
      </containers>
      <file name="f39ccf0f-dc95-e110-896b-43e3688c2cf6" />
    </api>
    <api id="Methods.T:Zhaord.IStartupTask">
      <topicdata name="IStartupTask" group="list" subgroup="Methods" typeTopicId="T:Zhaord.IStartupTask" />
      <apidata name="IStartupTask" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.IStartupTask.Execute" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IStartupTask" />
      </containers>
      <file name="62a471db-3c30-f625-4b47-4c5b8d2800a6" />
    </api>
    <api id="Properties.T:Zhaord.IStartupTask">
      <topicdata name="IStartupTask" group="list" subgroup="Properties" typeTopicId="T:Zhaord.IStartupTask" />
      <apidata name="IStartupTask" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.IStartupTask.Order" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IStartupTask" />
      </containers>
      <file name="d7e64b22-fb3b-c3c7-5ec8-26cc4aad0be2" />
    </api>
    <api id="M:Zhaord.IStartupTask.Execute">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IStartupTask" ref="true" />
      </containers>
      <file name="7c7d1884-9251-cdb7-a481-919c0a32910c" />
    </api>
    <api id="P:Zhaord.IStartupTask.Order">
      <topicdata group="api" />
      <apidata name="Order" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Order" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IStartupTask" ref="true" />
      </containers>
      <file name="bc02f58d-2d84-61a0-b35f-c50660bae3d3" />
    </api>
    <api id="T:Zhaord.IWorkContext">
      <topicdata group="api" />
      <apidata name="IWorkContext" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.IWorkContext.CurrentCustomerId" />
        <element api="M:Zhaord.IWorkContext.GetDefaultLanguageSeoCode(System.Int32)" />
        <element api="P:Zhaord.IWorkContext.IsAdmin" />
        <element api="M:Zhaord.IWorkContext.IsPublishedLanguage(System.String,System.Int32)" />
        <element api="P:Zhaord.IWorkContext.OriginalCustomerIdIfImpersonated" />
        <element api="P:Zhaord.IWorkContext.WorkingLanguageId" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
      </containers>
      <file name="8dafef6e-9dc9-492e-ab28-2f650da938ea" />
    </api>
    <api id="Methods.T:Zhaord.IWorkContext">
      <topicdata name="IWorkContext" group="list" subgroup="Methods" typeTopicId="T:Zhaord.IWorkContext" />
      <apidata name="IWorkContext" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.IWorkContext.GetDefaultLanguageSeoCode(System.Int32)" />
        <element api="M:Zhaord.IWorkContext.IsPublishedLanguage(System.String,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IWorkContext" />
      </containers>
      <file name="d8ff28e6-83bf-bc13-90cd-864c29d59df9" />
    </api>
    <api id="Properties.T:Zhaord.IWorkContext">
      <topicdata name="IWorkContext" group="list" subgroup="Properties" typeTopicId="T:Zhaord.IWorkContext" />
      <apidata name="IWorkContext" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.IWorkContext.CurrentCustomerId" />
        <element api="P:Zhaord.IWorkContext.IsAdmin" />
        <element api="P:Zhaord.IWorkContext.OriginalCustomerIdIfImpersonated" />
        <element api="P:Zhaord.IWorkContext.WorkingLanguageId" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IWorkContext" />
      </containers>
      <file name="860cafbd-bc29-5e43-b170-651c78f0e322" />
    </api>
    <api id="P:Zhaord.IWorkContext.CurrentCustomerId">
      <topicdata group="api" />
      <apidata name="CurrentCustomerId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_CurrentCustomerId" />
      <setter name="set_CurrentCustomerId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IWorkContext" ref="true" />
      </containers>
      <file name="4e210711-cf72-5907-950e-75972a819a90" />
    </api>
    <api id="M:Zhaord.IWorkContext.GetDefaultLanguageSeoCode(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetDefaultLanguageSeoCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="storeId" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IWorkContext" ref="true" />
      </containers>
      <file name="d2fae2ea-f91b-bc58-61ba-41a2f37c0d42" />
    </api>
    <api id="P:Zhaord.IWorkContext.IsAdmin">
      <topicdata group="api" />
      <apidata name="IsAdmin" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_IsAdmin" />
      <setter name="set_IsAdmin" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IWorkContext" ref="true" />
      </containers>
      <file name="e9b71f35-355a-7d98-4261-103dbc399637" />
    </api>
    <api id="M:Zhaord.IWorkContext.IsPublishedLanguage(System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="IsPublishedLanguage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="seoCode">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="storeId" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IWorkContext" ref="true" />
      </containers>
      <file name="28f550b3-baba-94c3-7243-55ea99d31238" />
    </api>
    <api id="P:Zhaord.IWorkContext.OriginalCustomerIdIfImpersonated">
      <topicdata group="api" />
      <apidata name="OriginalCustomerIdIfImpersonated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_OriginalCustomerIdIfImpersonated" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IWorkContext" ref="true" />
      </containers>
      <file name="602cbdd3-fce9-12c4-143e-251d9ecef0e5" />
    </api>
    <api id="P:Zhaord.IWorkContext.WorkingLanguageId">
      <topicdata group="api" />
      <apidata name="WorkingLanguageId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_WorkingLanguageId" />
      <setter name="set_WorkingLanguageId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.IWorkContext" ref="true" />
      </containers>
      <file name="0fda20c9-c15d-5cb1-be4b-e8044119ad97" />
    </api>
    <api id="T:Zhaord.OperationResult">
      <topicdata group="api" />
      <apidata name="OperationResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.OperationResult.#ctor">
          <element api="M:Zhaord.OperationResult.#ctor(Zhaord.OperationResultType)" />
          <element api="M:Zhaord.OperationResult.#ctor(Zhaord.OperationResultType,System.String)" />
          <element api="M:Zhaord.OperationResult.#ctor(Zhaord.OperationResultType,System.String,System.Object)" />
          <element api="M:Zhaord.OperationResult.#ctor(Zhaord.OperationResultType,System.String,System.String)" />
          <element api="M:Zhaord.OperationResult.#ctor(Zhaord.OperationResultType,System.String,System.String,System.Object)" />
        </element>
        <element api="P:Zhaord.OperationResult.AppendData" />
        <element api="P:Zhaord.OperationResult.LogMessage" />
        <element api="P:Zhaord.OperationResult.Message" />
        <element api="P:Zhaord.OperationResult.ResultType" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
      </containers>
      <file name="f818bf86-a280-fda1-3708-4893bb7dbd7f" />
    </api>
    <api id="Methods.T:Zhaord.OperationResult">
      <topicdata name="OperationResult" group="list" subgroup="Methods" typeTopicId="T:Zhaord.OperationResult" />
      <apidata name="OperationResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResult" />
      </containers>
      <file name="7320bd9f-4f60-143c-9178-ac0d68a2f799" />
    </api>
    <api id="Properties.T:Zhaord.OperationResult">
      <topicdata name="OperationResult" group="list" subgroup="Properties" typeTopicId="T:Zhaord.OperationResult" />
      <apidata name="OperationResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Zhaord.OperationResult.AppendData" />
        <element api="P:Zhaord.OperationResult.LogMessage" />
        <element api="P:Zhaord.OperationResult.Message" />
        <element api="P:Zhaord.OperationResult.ResultType" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResult" />
      </containers>
      <file name="f7e0b3b1-ef82-35d5-207f-8ee0c9e74d79" />
    </api>
    <api id="Overload:Zhaord.OperationResult.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Zhaord.OperationResult.#ctor(Zhaord.OperationResultType)" />
        <element api="M:Zhaord.OperationResult.#ctor(Zhaord.OperationResultType,System.String)" />
        <element api="M:Zhaord.OperationResult.#ctor(Zhaord.OperationResultType,System.String,System.Object)" />
        <element api="M:Zhaord.OperationResult.#ctor(Zhaord.OperationResultType,System.String,System.String)" />
        <element api="M:Zhaord.OperationResult.#ctor(Zhaord.OperationResultType,System.String,System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResult" ref="true" />
      </containers>
      <file name="3670bf5d-9f76-56bc-9430-a0e509930f6b" />
    </api>
    <api id="M:Zhaord.OperationResult.#ctor(Zhaord.OperationResultType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.OperationResult.#ctor" />
      <parameters>
        <parameter name="resultType">
          <type api="T:Zhaord.OperationResultType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResult" ref="true" />
      </containers>
      <file name="1715086a-7ef4-7990-ffe4-36d7ff89a155" />
    </api>
    <api id="M:Zhaord.OperationResult.#ctor(Zhaord.OperationResultType,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.OperationResult.#ctor" />
      <parameters>
        <parameter name="resultType">
          <type api="T:Zhaord.OperationResultType" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResult" ref="true" />
      </containers>
      <file name="e8d420ee-3f26-16fb-eacd-b6562733088e" />
    </api>
    <api id="M:Zhaord.OperationResult.#ctor(Zhaord.OperationResultType,System.String,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.OperationResult.#ctor" />
      <parameters>
        <parameter name="resultType">
          <type api="T:Zhaord.OperationResultType" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="appendData">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResult" ref="true" />
      </containers>
      <file name="99be0801-3635-b1ff-85b7-4c7f4af3f989" />
    </api>
    <api id="M:Zhaord.OperationResult.#ctor(Zhaord.OperationResultType,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.OperationResult.#ctor" />
      <parameters>
        <parameter name="resultType">
          <type api="T:Zhaord.OperationResultType" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="logMessage">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResult" ref="true" />
      </containers>
      <file name="be2846ec-60f2-2ddf-95aa-04796deb925f" />
    </api>
    <api id="M:Zhaord.OperationResult.#ctor(Zhaord.OperationResultType,System.String,System.String,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.OperationResult.#ctor" />
      <parameters>
        <parameter name="resultType">
          <type api="T:Zhaord.OperationResultType" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="logMessage">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="appendData">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResult" ref="true" />
      </containers>
      <file name="ac3566d7-6a24-86d7-c4d0-7a7107374f97" />
    </api>
    <api id="P:Zhaord.OperationResult.AppendData">
      <topicdata group="api" />
      <apidata name="AppendData" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AppendData" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResult" ref="true" />
      </containers>
      <file name="286fc529-1951-ba47-c7b0-db528b69baf0" />
    </api>
    <api id="P:Zhaord.OperationResult.LogMessage">
      <topicdata group="api" />
      <apidata name="LogMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LogMessage" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResult" ref="true" />
      </containers>
      <file name="988ff117-ecc0-2888-abaf-9a8640592edf" />
    </api>
    <api id="P:Zhaord.OperationResult.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Message" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResult" ref="true" />
      </containers>
      <file name="ba7d1bb1-30af-d15d-2788-cb9f81a9b739" />
    </api>
    <api id="P:Zhaord.OperationResult.ResultType">
      <topicdata group="api" />
      <apidata name="ResultType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ResultType" />
      <returns>
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResult" ref="true" />
      </containers>
      <file name="aea9c4ef-bb49-520e-3443-fced9f28b3d5" />
    </api>
    <api id="T:Zhaord.OperationResultType">
      <topicdata group="api" />
      <apidata name="OperationResultType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Zhaord.OperationResultType.Success" />
        <element api="F:Zhaord.OperationResultType.NoChanged" />
        <element api="F:Zhaord.OperationResultType.ParamError" />
        <element api="F:Zhaord.OperationResultType.QueryNull" />
        <element api="F:Zhaord.OperationResultType.PurviewLack" />
        <element api="F:Zhaord.OperationResultType.IllegalOperation" />
        <element api="F:Zhaord.OperationResultType.Warning" />
        <element api="F:Zhaord.OperationResultType.Error" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
      </containers>
      <file name="f15ab2e4-8afd-e413-ca7e-bd7f5a3f65b9" />
    </api>
    <api id="F:Zhaord.OperationResultType.Error">
      <topicdata group="api" notopic="" />
      <apidata name="Error" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </containers>
      <file name="c9a9c517-e6d3-8dca-5825-bc7bb702d97f" />
    </api>
    <api id="F:Zhaord.OperationResultType.IllegalOperation">
      <topicdata group="api" notopic="" />
      <apidata name="IllegalOperation" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </containers>
      <file name="79a018b2-2e85-ba36-5ccf-168f28559dde" />
    </api>
    <api id="F:Zhaord.OperationResultType.NoChanged">
      <topicdata group="api" notopic="" />
      <apidata name="NoChanged" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </containers>
      <file name="265d6c58-d349-3235-ed11-cff55cb14774" />
    </api>
    <api id="F:Zhaord.OperationResultType.ParamError">
      <topicdata group="api" notopic="" />
      <apidata name="ParamError" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </containers>
      <file name="87ef8241-ab35-8c6a-480e-be8fc3a50743" />
    </api>
    <api id="F:Zhaord.OperationResultType.PurviewLack">
      <topicdata group="api" notopic="" />
      <apidata name="PurviewLack" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </containers>
      <file name="66c7acc9-24be-fd28-3e78-909a49ac9738" />
    </api>
    <api id="F:Zhaord.OperationResultType.QueryNull">
      <topicdata group="api" notopic="" />
      <apidata name="QueryNull" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </containers>
      <file name="dc9a76db-44fe-b387-dd5c-871d62bb5e9f" />
    </api>
    <api id="F:Zhaord.OperationResultType.Success">
      <topicdata group="api" notopic="" />
      <apidata name="Success" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </containers>
      <file name="2f9b3cd6-b631-e35e-536e-e409b38dfcbd" />
    </api>
    <api id="F:Zhaord.OperationResultType.Warning">
      <topicdata group="api" notopic="" />
      <apidata name="Warning" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.OperationResultType" ref="false" />
      </containers>
      <file name="70369673-e1a9-84df-cb2c-4fa37bc53331" />
    </api>
    <api id="T:Zhaord.ZhaordException">
      <topicdata group="api" />
      <apidata name="ZhaordException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Zhaord.ZhaordValidationException" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.MiscExtensions.Dump(System.Exception)" source="extension">
          <apidata name="Dump" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.MiscExtensions.ToAllMessages(System.Exception)" source="extension">
          <apidata name="ToAllMessages" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.ZhaordException.#ctor">
          <element api="M:Zhaord.ZhaordException.#ctor" />
          <element api="M:Zhaord.ZhaordException.#ctor(System.String)" />
          <element api="M:Zhaord.ZhaordException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:Zhaord.ZhaordException.#ctor(System.String,System.Exception)" />
          <element api="M:Zhaord.ZhaordException.#ctor(System.String,System.Object[])" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
      </containers>
      <file name="0e4bbd23-20eb-fd81-ef80-b9bfbeab0dcd" />
    </api>
    <api id="Methods.T:Zhaord.ZhaordException">
      <topicdata name="ZhaordException" group="list" subgroup="Methods" typeTopicId="T:Zhaord.ZhaordException" />
      <apidata name="ZhaordException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.MiscExtensions.Dump(System.Exception)" source="extension">
          <apidata name="Dump" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.MiscExtensions.ToAllMessages(System.Exception)" source="extension">
          <apidata name="ToAllMessages" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordException" />
      </containers>
      <file name="698427a2-3693-7886-df9b-cecb3566e194" />
    </api>
    <api id="Properties.T:Zhaord.ZhaordException">
      <topicdata name="ZhaordException" group="list" subgroup="Properties" typeTopicId="T:Zhaord.ZhaordException" />
      <apidata name="ZhaordException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordException" />
      </containers>
      <file name="bdb9262b-4d38-0758-70a7-b6c6ef5edc27" />
    </api>
    <api id="Events.T:Zhaord.ZhaordException">
      <topicdata name="ZhaordException" group="list" subgroup="Events" typeTopicId="T:Zhaord.ZhaordException" />
      <apidata name="ZhaordException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordException" />
      </containers>
      <file name="5555c69c-e903-58ee-f2c9-0972b9204077" />
    </api>
    <api id="Overload:Zhaord.ZhaordException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Zhaord.ZhaordException.#ctor" />
        <element api="M:Zhaord.ZhaordException.#ctor(System.String)" />
        <element api="M:Zhaord.ZhaordException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Zhaord.ZhaordException.#ctor(System.String,System.Exception)" />
        <element api="M:Zhaord.ZhaordException.#ctor(System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordException" ref="true" />
      </containers>
      <file name="d5762037-0c29-448a-8de2-424f1c403e66" />
    </api>
    <api id="M:Zhaord.ZhaordException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.ZhaordException.#ctor" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordException" ref="true" />
      </containers>
      <file name="9d80dbdf-0323-23d5-ee35-f949ed129705" />
    </api>
    <api id="M:Zhaord.ZhaordException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:Zhaord.ZhaordException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordException" ref="true" />
      </containers>
      <file name="02339a56-b797-6117-e83b-f507b315707e" />
    </api>
    <api id="M:Zhaord.ZhaordException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.ZhaordException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordException" ref="true" />
      </containers>
      <file name="b6ec75b0-a96a-58df-3bb9-a1787ef3f2dc" />
    </api>
    <api id="M:Zhaord.ZhaordException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.ZhaordException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordException" ref="true" />
      </containers>
      <file name="e542d334-1b83-3841-0930-84b0ef204eb1" />
    </api>
    <api id="M:Zhaord.ZhaordException.#ctor(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.ZhaordException.#ctor" />
      <parameters>
        <parameter name="messageFormat">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordException" ref="true" />
      </containers>
      <file name="8798ac45-53ed-f34f-8cce-445ab5c45af8" />
    </api>
    <api id="T:Zhaord.ZhaordValidationException">
      <topicdata group="api" />
      <apidata name="ZhaordValidationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Zhaord.ZhaordException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.MiscExtensions.Dump(System.Exception)" source="extension">
          <apidata name="Dump" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.MiscExtensions.ToAllMessages(System.Exception)" source="extension">
          <apidata name="ToAllMessages" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.ZhaordValidationException.#ctor">
          <element api="M:Zhaord.ZhaordValidationException.#ctor" />
          <element api="M:Zhaord.ZhaordValidationException.#ctor(System.String)" />
          <element api="M:Zhaord.ZhaordValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:Zhaord.ZhaordValidationException.#ctor(System.String,System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult})" />
          <element api="M:Zhaord.ZhaordValidationException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="P:Zhaord.ZhaordValidationException.ValidationErrors" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
      </containers>
      <file name="d0d75293-59e2-4322-91cd-8d7c468e2169" />
    </api>
    <api id="Methods.T:Zhaord.ZhaordValidationException">
      <topicdata name="ZhaordValidationException" group="list" subgroup="Methods" typeTopicId="T:Zhaord.ZhaordValidationException" />
      <apidata name="ZhaordValidationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.MiscExtensions.Dump(System.Exception)" source="extension">
          <apidata name="Dump" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.MiscExtensions.ToAllMessages(System.Exception)" source="extension">
          <apidata name="ToAllMessages" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordValidationException" />
      </containers>
      <file name="afac0b13-4e12-da8c-963b-f32cdbfd6634" />
    </api>
    <api id="Properties.T:Zhaord.ZhaordValidationException">
      <topicdata name="ZhaordValidationException" group="list" subgroup="Properties" typeTopicId="T:Zhaord.ZhaordValidationException" />
      <apidata name="ZhaordValidationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:Zhaord.ZhaordValidationException.ValidationErrors" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordValidationException" />
      </containers>
      <file name="50b19996-5bea-d02c-97f0-30bd4143621d" />
    </api>
    <api id="Events.T:Zhaord.ZhaordValidationException">
      <topicdata name="ZhaordValidationException" group="list" subgroup="Events" typeTopicId="T:Zhaord.ZhaordValidationException" />
      <apidata name="ZhaordValidationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordValidationException" />
      </containers>
      <file name="d65cccee-5cf6-70f3-aad0-e2eeb85d3f54" />
    </api>
    <api id="Overload:Zhaord.ZhaordValidationException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Zhaord.ZhaordValidationException.#ctor" />
        <element api="M:Zhaord.ZhaordValidationException.#ctor(System.String)" />
        <element api="M:Zhaord.ZhaordValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Zhaord.ZhaordValidationException.#ctor(System.String,System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult})" />
        <element api="M:Zhaord.ZhaordValidationException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordValidationException" ref="true" />
      </containers>
      <file name="7aa4001b-337e-1cda-54e8-afd7b585ea8f" />
    </api>
    <api id="M:Zhaord.ZhaordValidationException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.ZhaordValidationException.#ctor" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordValidationException" ref="true" />
      </containers>
      <file name="b275c144-4ace-f154-7bd1-0db53e47c628" />
    </api>
    <api id="M:Zhaord.ZhaordValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.ZhaordValidationException.#ctor" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordValidationException" ref="true" />
      </containers>
      <file name="4e0c35ef-c68f-1544-dbea-56fe645443a7" />
    </api>
    <api id="M:Zhaord.ZhaordValidationException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.ZhaordValidationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordValidationException" ref="true" />
      </containers>
      <file name="913a868b-1d09-a130-2232-9775108a27ed" />
    </api>
    <api id="M:Zhaord.ZhaordValidationException.#ctor(System.String,System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.ZhaordValidationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="validationErrors">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.DataAnnotations.ValidationResult" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordValidationException" ref="true" />
      </containers>
      <file name="483a11b5-2cb3-6424-a0b4-98f9eb51a7a8" />
    </api>
    <api id="M:Zhaord.ZhaordValidationException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.ZhaordValidationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordValidationException" ref="true" />
      </containers>
      <file name="19e2d057-3b30-c139-25a1-7c8550cf5de9" />
    </api>
    <api id="P:Zhaord.ZhaordValidationException.ValidationErrors">
      <topicdata group="api" />
      <apidata name="ValidationErrors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ValidationErrors" />
      <setter name="set_ValidationErrors" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.DataAnnotations.ValidationResult" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord" />
        <type api="T:Zhaord.ZhaordValidationException" ref="true" />
      </containers>
      <file name="6c75600c-194d-b5c0-bee7-bae0af82eeee" />
    </api>
    <api id="N:Zhaord.Attributes">
      <topicdata group="api" />
      <apidata name="Zhaord.Attributes" group="namespace" />
      <elements>
        <element api="T:Zhaord.Attributes.EnumDescriptionAttribute" />
        <element api="T:Zhaord.Attributes.EnumFriendlyNameAttribute" />
        <element api="T:Zhaord.Attributes.ObjectSignatureAttribute" />
      </elements>
      <file name="a91facab-1a39-0899-ca7e-3cfb19cdf844" />
    </api>
    <api id="T:Zhaord.Attributes.EnumDescriptionAttribute">
      <topicdata group="api" />
      <apidata name="EnumDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Attributes.EnumDescriptionAttribute.#ctor(System.String)" />
        <element api="P:Zhaord.Attributes.EnumDescriptionAttribute.Description" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Attributes" />
      </containers>
      <file name="a485edd8-5ad2-5987-659b-bfe0ed6135e4" />
    </api>
    <api id="Methods.T:Zhaord.Attributes.EnumDescriptionAttribute">
      <topicdata name="EnumDescriptionAttribute" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Attributes.EnumDescriptionAttribute" />
      <apidata name="EnumDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Attributes" />
        <type api="T:Zhaord.Attributes.EnumDescriptionAttribute" />
      </containers>
      <file name="0825a031-91b5-9e14-19c3-cd10a207c754" />
    </api>
    <api id="Properties.T:Zhaord.Attributes.EnumDescriptionAttribute">
      <topicdata name="EnumDescriptionAttribute" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Attributes.EnumDescriptionAttribute" />
      <apidata name="EnumDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:Zhaord.Attributes.EnumDescriptionAttribute.Description" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Attributes" />
        <type api="T:Zhaord.Attributes.EnumDescriptionAttribute" />
      </containers>
      <file name="dc99911c-7160-523f-3057-b1c23d4e797e" />
    </api>
    <api id="M:Zhaord.Attributes.EnumDescriptionAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Attributes" />
        <type api="T:Zhaord.Attributes.EnumDescriptionAttribute" ref="true" />
      </containers>
      <file name="249289f3-d3d5-a96d-66d1-5067977d9a09" />
    </api>
    <api id="P:Zhaord.Attributes.EnumDescriptionAttribute.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Attributes" />
        <type api="T:Zhaord.Attributes.EnumDescriptionAttribute" ref="true" />
      </containers>
      <file name="e75f2aa1-91aa-1c90-ed3c-7ac21ff52c60" />
    </api>
    <api id="T:Zhaord.Attributes.EnumFriendlyNameAttribute">
      <topicdata group="api" />
      <apidata name="EnumFriendlyNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Attributes.EnumFriendlyNameAttribute.#ctor(System.String)" />
        <element api="P:Zhaord.Attributes.EnumFriendlyNameAttribute.FriendlyName" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Attributes" />
      </containers>
      <file name="c1f2b268-1240-1eb5-2af6-baf9e6c47183" />
    </api>
    <api id="Methods.T:Zhaord.Attributes.EnumFriendlyNameAttribute">
      <topicdata name="EnumFriendlyNameAttribute" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Attributes.EnumFriendlyNameAttribute" />
      <apidata name="EnumFriendlyNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Attributes" />
        <type api="T:Zhaord.Attributes.EnumFriendlyNameAttribute" />
      </containers>
      <file name="02f8443e-9975-89f7-6b4d-e30e8ad66899" />
    </api>
    <api id="Properties.T:Zhaord.Attributes.EnumFriendlyNameAttribute">
      <topicdata name="EnumFriendlyNameAttribute" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Attributes.EnumFriendlyNameAttribute" />
      <apidata name="EnumFriendlyNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:Zhaord.Attributes.EnumFriendlyNameAttribute.FriendlyName" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Attributes" />
        <type api="T:Zhaord.Attributes.EnumFriendlyNameAttribute" />
      </containers>
      <file name="9e7a028e-2bc2-9b49-0e43-9882e3d414ea" />
    </api>
    <api id="M:Zhaord.Attributes.EnumFriendlyNameAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="friendlyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Attributes" />
        <type api="T:Zhaord.Attributes.EnumFriendlyNameAttribute" ref="true" />
      </containers>
      <file name="1562db06-fb77-34cb-a176-36d0fe31f218" />
    </api>
    <api id="P:Zhaord.Attributes.EnumFriendlyNameAttribute.FriendlyName">
      <topicdata group="api" />
      <apidata name="FriendlyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FriendlyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Attributes" />
        <type api="T:Zhaord.Attributes.EnumFriendlyNameAttribute" ref="true" />
      </containers>
      <file name="be05ff06-6d87-1fd5-7ed7-87ccda582c84" />
    </api>
    <api id="T:Zhaord.Attributes.ObjectSignatureAttribute">
      <topicdata group="api" />
      <apidata name="ObjectSignatureAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Attributes.ObjectSignatureAttribute.#ctor" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Attributes" />
      </containers>
      <file name="036a5210-b686-dc8d-84b8-eac668c05e33" />
    </api>
    <api id="Methods.T:Zhaord.Attributes.ObjectSignatureAttribute">
      <topicdata name="ObjectSignatureAttribute" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Attributes.ObjectSignatureAttribute" />
      <apidata name="ObjectSignatureAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Attributes" />
        <type api="T:Zhaord.Attributes.ObjectSignatureAttribute" />
      </containers>
      <file name="4fe1dcf4-f7aa-b559-845a-189641ffd58a" />
    </api>
    <api id="Properties.T:Zhaord.Attributes.ObjectSignatureAttribute">
      <topicdata name="ObjectSignatureAttribute" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Attributes.ObjectSignatureAttribute" />
      <apidata name="ObjectSignatureAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Attributes" />
        <type api="T:Zhaord.Attributes.ObjectSignatureAttribute" />
      </containers>
      <file name="f93c0252-6192-05e8-1118-8aa157842e97" />
    </api>
    <api id="M:Zhaord.Attributes.ObjectSignatureAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Attributes" />
        <type api="T:Zhaord.Attributes.ObjectSignatureAttribute" ref="true" />
      </containers>
      <file name="31ceac25-d8bf-5dd4-fd20-fa4d7ae81b7c" />
    </api>
    <api id="N:Zhaord.Caching">
      <topicdata group="api" />
      <apidata name="Zhaord.Caching" group="namespace" />
      <elements>
        <element api="T:Zhaord.Caching.ICache" />
        <element api="T:Zhaord.Caching.AspNetCache" />
        <element api="T:Zhaord.Caching.CacheManagerExtensions" />
        <element api="T:Zhaord.Caching.ICacheManager" />
        <element api="T:Zhaord.Caching.CacheManager`1" />
        <element api="T:Zhaord.Caching.NullCache" />
        <element api="T:Zhaord.Caching.RequestCache" />
        <element api="T:Zhaord.Caching.StaticCache" />
      </elements>
      <file name="1369ab4e-41b1-4d2a-bf47-6adce105d5c7" />
    </api>
    <api id="T:Zhaord.Caching.AspNetCache">
      <topicdata group="api" />
      <apidata name="AspNetCache" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Zhaord.Caching.ICache" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Caching.AspNetCache.#ctor" />
        <element api="M:Zhaord.Caching.AspNetCache.BuildKey(System.String)" />
        <element api="M:Zhaord.Caching.AspNetCache.Contains(System.String)" />
        <element api="P:Zhaord.Caching.AspNetCache.Entries" />
        <element api="M:Zhaord.Caching.AspNetCache.Get(System.String)" />
        <element api="P:Zhaord.Caching.AspNetCache.IsSingleton" />
        <element api="M:Zhaord.Caching.AspNetCache.Remove(System.String)" />
        <element api="M:Zhaord.Caching.AspNetCache.Set(System.String,System.Object,System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
      </containers>
      <file name="79c80ee6-f5e4-c892-a9d2-bb9162f14c14" />
    </api>
    <api id="Methods.T:Zhaord.Caching.AspNetCache">
      <topicdata name="AspNetCache" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Caching.AspNetCache" />
      <apidata name="AspNetCache" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Caching.AspNetCache.BuildKey(System.String)" />
        <element api="M:Zhaord.Caching.AspNetCache.Contains(System.String)" />
        <element api="M:Zhaord.Caching.AspNetCache.Get(System.String)" />
        <element api="M:Zhaord.Caching.AspNetCache.Remove(System.String)" />
        <element api="M:Zhaord.Caching.AspNetCache.Set(System.String,System.Object,System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.AspNetCache" />
      </containers>
      <file name="21f5187b-7f00-4ece-a757-bdfd950c2d59" />
    </api>
    <api id="Properties.T:Zhaord.Caching.AspNetCache">
      <topicdata name="AspNetCache" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Caching.AspNetCache" />
      <apidata name="AspNetCache" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Zhaord.Caching.AspNetCache.Entries" />
        <element api="P:Zhaord.Caching.AspNetCache.IsSingleton" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.AspNetCache" />
      </containers>
      <file name="315c192c-4ba3-8125-8ef5-6cdf32748c4a" />
    </api>
    <api id="M:Zhaord.Caching.AspNetCache.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.AspNetCache" ref="true" />
      </containers>
      <file name="a21d754d-45d9-0ed9-34ef-ac8e36e10654" />
    </api>
    <api id="M:Zhaord.Caching.AspNetCache.BuildKey(System.String)">
      <topicdata group="api" />
      <apidata name="BuildKey" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.AspNetCache" ref="true" />
      </containers>
      <file name="d4b1a6fd-5d23-47c2-ddbb-fc06985c6ad9" />
    </api>
    <api id="M:Zhaord.Caching.AspNetCache.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Zhaord.Caching.ICache.Contains(System.String)">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.AspNetCache" ref="true" />
      </containers>
      <file name="aff5447c-d1ad-ef38-bc52-2c2c9284788e" />
    </api>
    <api id="P:Zhaord.Caching.AspNetCache.Entries">
      <topicdata group="api" />
      <apidata name="Entries" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Entries" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:Zhaord.Caching.ICache.Entries">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.AspNetCache" ref="true" />
      </containers>
      <file name="8add1a89-523d-dee7-8599-53be5797b3d9" />
    </api>
    <api id="M:Zhaord.Caching.AspNetCache.Get(System.String)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:Zhaord.Caching.ICache.Get(System.String)">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.AspNetCache" ref="true" />
      </containers>
      <file name="7a7e54a8-9e05-cd93-70a5-36a5e9047b6f" />
    </api>
    <api id="P:Zhaord.Caching.AspNetCache.IsSingleton">
      <topicdata group="api" />
      <apidata name="IsSingleton" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsSingleton" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Zhaord.Caching.ICache.IsSingleton">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.AspNetCache" ref="true" />
      </containers>
      <file name="1cd88375-748c-da50-a702-ff1f1a84eb5c" />
    </api>
    <api id="M:Zhaord.Caching.AspNetCache.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Zhaord.Caching.ICache.Remove(System.String)">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.AspNetCache" ref="true" />
      </containers>
      <file name="952df01f-b1d1-8694-c5ac-dc0bc2b1ddb9" />
    </api>
    <api id="M:Zhaord.Caching.AspNetCache.Set(System.String,System.Object,System.Nullable{System.Int32})">
      <topicdata group="api" />
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="cacheTime">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Zhaord.Caching.ICache.Set(System.String,System.Object,System.Nullable{System.Int32})">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.AspNetCache" ref="true" />
      </containers>
      <file name="5fe3f4dd-8078-351f-a6a5-72673ed98567" />
    </api>
    <api id="T:Zhaord.Caching.CacheManager`1">
      <topicdata group="api" />
      <apidata name="CacheManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TCache">
          <constrained>
            <implements>
              <type api="T:Zhaord.Caching.ICache" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <implements>
        <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Caching.CacheManagerExtensions.Get``1(Zhaord.Caching.ICacheManager,System.String)" source="extension">
          <apidata name="Get" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="key">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Caching.CacheManagerExtensions.Get``1(Zhaord.Caching.ICacheManager,System.String)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Caching" />
            <type api="T:Zhaord.Caching.CacheManagerExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Caching.CacheManager`1.#ctor(System.Func{System.Type,Zhaord.Caching.ICache})" />
        <element api="M:Zhaord.Caching.CacheManager`1.Clear" />
        <element api="M:Zhaord.Caching.CacheManager`1.Contains(System.String)" />
        <element api="M:Zhaord.Caching.CacheManager`1.EnterWriteLock" />
        <element api="M:Zhaord.Caching.CacheManager`1.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})" />
        <element api="M:Zhaord.Caching.CacheManager`1.Remove(System.String)" />
        <element api="M:Zhaord.Caching.CacheManager`1.RemoveByPattern(System.String)" />
        <element api="M:Zhaord.Caching.CacheManager`1.Set(System.String,System.Object,System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
      </containers>
      <file name="c77c9261-274f-47fa-630d-1cfe2d8709ea" />
    </api>
    <api id="Methods.T:Zhaord.Caching.CacheManager`1">
      <topicdata name="CacheManager" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Caching.CacheManager`1" />
      <apidata name="CacheManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TCache">
          <constrained>
            <implements>
              <type api="T:Zhaord.Caching.ICache" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Caching.CacheManagerExtensions.Get``1(Zhaord.Caching.ICacheManager,System.String)" source="extension">
          <apidata name="Get" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="key">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Caching.CacheManagerExtensions.Get``1(Zhaord.Caching.ICacheManager,System.String)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Caching" />
            <type api="T:Zhaord.Caching.CacheManagerExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Caching.CacheManager`1.Clear" />
        <element api="M:Zhaord.Caching.CacheManager`1.Contains(System.String)" />
        <element api="M:Zhaord.Caching.CacheManager`1.EnterWriteLock" />
        <element api="M:Zhaord.Caching.CacheManager`1.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})" />
        <element api="M:Zhaord.Caching.CacheManager`1.Remove(System.String)" />
        <element api="M:Zhaord.Caching.CacheManager`1.RemoveByPattern(System.String)" />
        <element api="M:Zhaord.Caching.CacheManager`1.Set(System.String,System.Object,System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.CacheManager`1" />
      </containers>
      <file name="ad66e441-4d9a-2e02-ae1e-1ce9de49232b" />
    </api>
    <api id="M:Zhaord.Caching.CacheManager`1.#ctor(System.Func{System.Type,Zhaord.Caching.ICache})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="fn">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
              <type api="T:Zhaord.Caching.ICache" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.CacheManager`1" ref="true" />
      </containers>
      <file name="d318bfee-dc01-a129-dbef-63654861fad8" />
    </api>
    <api id="M:Zhaord.Caching.CacheManager`1.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:Zhaord.Caching.ICacheManager.Clear">
          <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.CacheManager`1" ref="true" />
      </containers>
      <file name="7b5c2c8e-5f43-a90e-d0d8-962f1b3d3357" />
    </api>
    <api id="M:Zhaord.Caching.CacheManager`1.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Zhaord.Caching.ICacheManager.Contains(System.String)">
          <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.CacheManager`1" ref="true" />
      </containers>
      <file name="4079bdd7-6d8f-bd6e-d8fd-8ea57b81acaa" />
    </api>
    <api id="M:Zhaord.Caching.CacheManager`1.EnterWriteLock">
      <topicdata group="api" />
      <apidata name="EnterWriteLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.IDisposable" ref="true" />
      </returns>
      <implements>
        <member api="M:Zhaord.Caching.ICacheManager.EnterWriteLock">
          <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.CacheManager`1" ref="true" />
      </containers>
      <file name="718f1979-5240-1a20-f478-d5f36d08489e" />
    </api>
    <api id="M:Zhaord.Caching.CacheManager`1.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="acquirer">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Caching.CacheManager`1.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cacheTime" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Caching.CacheManager`1.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})" />
      </returns>
      <implements>
        <member api="M:Zhaord.Caching.ICacheManager.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})">
          <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.CacheManager`1" ref="true" />
      </containers>
      <file name="54cb3fe1-2c74-c94d-075c-da39d0fbba0e" />
    </api>
    <api id="M:Zhaord.Caching.CacheManager`1.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Zhaord.Caching.ICacheManager.Remove(System.String)">
          <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.CacheManager`1" ref="true" />
      </containers>
      <file name="230a7c81-ea80-aa1a-e296-98a5b458f71c" />
    </api>
    <api id="M:Zhaord.Caching.CacheManager`1.RemoveByPattern(System.String)">
      <topicdata group="api" />
      <apidata name="RemoveByPattern" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="pattern">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Zhaord.Caching.ICacheManager.RemoveByPattern(System.String)">
          <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.CacheManager`1" ref="true" />
      </containers>
      <file name="22ea2764-9cef-814d-456f-57ac6cc3f23e" />
    </api>
    <api id="M:Zhaord.Caching.CacheManager`1.Set(System.String,System.Object,System.Nullable{System.Int32})">
      <topicdata group="api" />
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="cacheTime" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Zhaord.Caching.ICacheManager.Set(System.String,System.Object,System.Nullable{System.Int32})">
          <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.CacheManager`1" ref="true" />
      </containers>
      <file name="c6464ba9-f725-a214-882a-a70119de54ac" />
    </api>
    <api id="T:Zhaord.Caching.CacheManagerExtensions">
      <topicdata group="api" />
      <apidata name="CacheManagerExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.Caching.CacheManagerExtensions.Get``1(Zhaord.Caching.ICacheManager,System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="9f31fc41-a077-7cbd-02f5-62a1c3048eec" />
    </api>
    <api id="Methods.T:Zhaord.Caching.CacheManagerExtensions">
      <topicdata name="CacheManagerExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Caching.CacheManagerExtensions" />
      <apidata name="CacheManagerExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Caching.CacheManagerExtensions.Get``1(Zhaord.Caching.ICacheManager,System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.CacheManagerExtensions" />
      </containers>
      <file name="3ce08116-fe49-3aac-e0f0-82bb237c85e3" />
    </api>
    <api id="M:Zhaord.Caching.CacheManagerExtensions.Get``1(Zhaord.Caching.ICacheManager,System.String)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="cacheManager">
          <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Caching.CacheManagerExtensions.Get``1(Zhaord.Caching.ICacheManager,System.String)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.CacheManagerExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="18c9b365-ece8-2264-e490-dbe3edfbcfe9" />
    </api>
    <api id="T:Zhaord.Caching.ICache">
      <topicdata group="api" />
      <apidata name="ICache" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:Zhaord.Caching.AspNetCache" ref="true" />
        <type api="T:Zhaord.Caching.RequestCache" ref="true" />
        <type api="T:Zhaord.Caching.StaticCache" ref="true" />
      </implementors>
      <elements>
        <element api="M:Zhaord.Caching.ICache.Contains(System.String)" />
        <element api="P:Zhaord.Caching.ICache.Entries" />
        <element api="M:Zhaord.Caching.ICache.Get(System.String)" />
        <element api="P:Zhaord.Caching.ICache.IsSingleton" />
        <element api="M:Zhaord.Caching.ICache.Remove(System.String)" />
        <element api="M:Zhaord.Caching.ICache.Set(System.String,System.Object,System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
      </containers>
      <file name="fc384128-b92a-f756-213a-5f6402974a65" />
    </api>
    <api id="Methods.T:Zhaord.Caching.ICache">
      <topicdata name="ICache" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Caching.ICache" />
      <apidata name="ICache" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Caching.ICache.Contains(System.String)" />
        <element api="M:Zhaord.Caching.ICache.Get(System.String)" />
        <element api="M:Zhaord.Caching.ICache.Remove(System.String)" />
        <element api="M:Zhaord.Caching.ICache.Set(System.String,System.Object,System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.ICache" />
      </containers>
      <file name="d0394c09-c52f-a8c4-a910-6d71bcceba5c" />
    </api>
    <api id="Properties.T:Zhaord.Caching.ICache">
      <topicdata name="ICache" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Caching.ICache" />
      <apidata name="ICache" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.Caching.ICache.Entries" />
        <element api="P:Zhaord.Caching.ICache.IsSingleton" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.ICache" />
      </containers>
      <file name="2519b627-c719-7dff-d807-5bf73972b684" />
    </api>
    <api id="M:Zhaord.Caching.ICache.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.ICache" ref="true" />
      </containers>
      <file name="b1094b92-37ce-7cca-5697-4ea7ac8bbd15" />
    </api>
    <api id="P:Zhaord.Caching.ICache.Entries">
      <topicdata group="api" />
      <apidata name="Entries" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Entries" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.ICache" ref="true" />
      </containers>
      <file name="140abe4d-3c3b-d499-8143-9a2c5bc75efe" />
    </api>
    <api id="M:Zhaord.Caching.ICache.Get(System.String)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.ICache" ref="true" />
      </containers>
      <file name="a0414c90-d781-d51f-ad29-8bbaba55c5e3" />
    </api>
    <api id="P:Zhaord.Caching.ICache.IsSingleton">
      <topicdata group="api" />
      <apidata name="IsSingleton" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsSingleton" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.ICache" ref="true" />
      </containers>
      <file name="2ea3df19-32e1-4e45-5c2d-b094e07df173" />
    </api>
    <api id="M:Zhaord.Caching.ICache.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.ICache" ref="true" />
      </containers>
      <file name="a559e563-d14f-f375-1455-d3abcbf98d46" />
    </api>
    <api id="M:Zhaord.Caching.ICache.Set(System.String,System.Object,System.Nullable{System.Int32})">
      <topicdata group="api" />
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="cacheTime">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.ICache" ref="true" />
      </containers>
      <file name="8db41ba7-b079-2ed5-119c-e2cc3d3efc17" />
    </api>
    <api id="T:Zhaord.Caching.ICacheManager">
      <topicdata group="api" />
      <apidata name="ICacheManager" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:Zhaord.Caching.CacheManager`1" ref="true" />
        <type api="T:Zhaord.Caching.NullCache" ref="true" />
      </implementors>
      <elements>
        <element api="M:Zhaord.Caching.CacheManagerExtensions.Get``1(Zhaord.Caching.ICacheManager,System.String)" source="extension">
          <apidata name="Get" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="key">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Caching.CacheManagerExtensions.Get``1(Zhaord.Caching.ICacheManager,System.String)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Caching" />
            <type api="T:Zhaord.Caching.CacheManagerExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Caching.ICacheManager.Clear" />
        <element api="M:Zhaord.Caching.ICacheManager.Contains(System.String)" />
        <element api="M:Zhaord.Caching.ICacheManager.EnterWriteLock" />
        <element api="M:Zhaord.Caching.ICacheManager.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})" />
        <element api="M:Zhaord.Caching.ICacheManager.Remove(System.String)" />
        <element api="M:Zhaord.Caching.ICacheManager.RemoveByPattern(System.String)" />
        <element api="M:Zhaord.Caching.ICacheManager.Set(System.String,System.Object,System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
      </containers>
      <file name="dea6228d-3ce4-6d27-02f1-e2d790cd8ea4" />
    </api>
    <api id="Methods.T:Zhaord.Caching.ICacheManager">
      <topicdata name="ICacheManager" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Caching.ICacheManager" />
      <apidata name="ICacheManager" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Caching.CacheManagerExtensions.Get``1(Zhaord.Caching.ICacheManager,System.String)" source="extension">
          <apidata name="Get" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="key">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Caching.CacheManagerExtensions.Get``1(Zhaord.Caching.ICacheManager,System.String)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Caching" />
            <type api="T:Zhaord.Caching.CacheManagerExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Caching.ICacheManager.Clear" />
        <element api="M:Zhaord.Caching.ICacheManager.Contains(System.String)" />
        <element api="M:Zhaord.Caching.ICacheManager.EnterWriteLock" />
        <element api="M:Zhaord.Caching.ICacheManager.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})" />
        <element api="M:Zhaord.Caching.ICacheManager.Remove(System.String)" />
        <element api="M:Zhaord.Caching.ICacheManager.RemoveByPattern(System.String)" />
        <element api="M:Zhaord.Caching.ICacheManager.Set(System.String,System.Object,System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.ICacheManager" />
      </containers>
      <file name="a1c8f222-67e0-403f-1597-12c7e9b11e10" />
    </api>
    <api id="M:Zhaord.Caching.ICacheManager.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
      </containers>
      <file name="dd5877da-c099-d98d-6b16-487494f1bbcd" />
    </api>
    <api id="M:Zhaord.Caching.ICacheManager.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
      </containers>
      <file name="32d2cb8c-2cf2-113c-d558-3016ba2ac041" />
    </api>
    <api id="M:Zhaord.Caching.ICacheManager.EnterWriteLock">
      <topicdata group="api" />
      <apidata name="EnterWriteLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.IDisposable" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
      </containers>
      <file name="9eb52ae0-f88c-a566-adf2-4e785e13584c" />
    </api>
    <api id="M:Zhaord.Caching.ICacheManager.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="acquirer">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Caching.ICacheManager.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cacheTime" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Caching.ICacheManager.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
      </containers>
      <file name="4a0f2c68-5072-5887-dd72-9e5e138d4999" />
    </api>
    <api id="M:Zhaord.Caching.ICacheManager.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
      </containers>
      <file name="e67040c3-aec0-bb13-3888-71c35fccb363" />
    </api>
    <api id="M:Zhaord.Caching.ICacheManager.RemoveByPattern(System.String)">
      <topicdata group="api" />
      <apidata name="RemoveByPattern" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="pattern">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
      </containers>
      <file name="e1c54ba3-6adc-8e68-443a-37199cebb42a" />
    </api>
    <api id="M:Zhaord.Caching.ICacheManager.Set(System.String,System.Object,System.Nullable{System.Int32})">
      <topicdata group="api" />
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="cacheTime" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
      </containers>
      <file name="dcda9494-12ab-76e1-224b-7fcdc4f2b288" />
    </api>
    <api id="T:Zhaord.Caching.NullCache">
      <topicdata group="api" />
      <apidata name="NullCache" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Caching.CacheManagerExtensions.Get``1(Zhaord.Caching.ICacheManager,System.String)" source="extension">
          <apidata name="Get" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="key">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Caching.CacheManagerExtensions.Get``1(Zhaord.Caching.ICacheManager,System.String)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Caching" />
            <type api="T:Zhaord.Caching.CacheManagerExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Caching.NullCache.#ctor" />
        <element api="M:Zhaord.Caching.NullCache.Clear" />
        <element api="M:Zhaord.Caching.NullCache.Contains(System.String)" />
        <element api="M:Zhaord.Caching.NullCache.EnterWriteLock" />
        <element api="M:Zhaord.Caching.NullCache.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})" />
        <element api="P:Zhaord.Caching.NullCache.Instance" />
        <element api="M:Zhaord.Caching.NullCache.Remove(System.String)" />
        <element api="M:Zhaord.Caching.NullCache.RemoveByPattern(System.String)" />
        <element api="M:Zhaord.Caching.NullCache.Set(System.String,System.Object,System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
      </containers>
      <file name="002094d0-e5c0-e1b3-b3e6-a13ff8afce57" />
    </api>
    <api id="Methods.T:Zhaord.Caching.NullCache">
      <topicdata name="NullCache" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Caching.NullCache" />
      <apidata name="NullCache" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Caching.CacheManagerExtensions.Get``1(Zhaord.Caching.ICacheManager,System.String)" source="extension">
          <apidata name="Get" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="key">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Caching.CacheManagerExtensions.Get``1(Zhaord.Caching.ICacheManager,System.String)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Caching" />
            <type api="T:Zhaord.Caching.CacheManagerExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Caching.NullCache.Clear" />
        <element api="M:Zhaord.Caching.NullCache.Contains(System.String)" />
        <element api="M:Zhaord.Caching.NullCache.EnterWriteLock" />
        <element api="M:Zhaord.Caching.NullCache.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})" />
        <element api="M:Zhaord.Caching.NullCache.Remove(System.String)" />
        <element api="M:Zhaord.Caching.NullCache.RemoveByPattern(System.String)" />
        <element api="M:Zhaord.Caching.NullCache.Set(System.String,System.Object,System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.NullCache" />
      </containers>
      <file name="8077703d-7890-30ac-f500-e5f6e2801795" />
    </api>
    <api id="Properties.T:Zhaord.Caching.NullCache">
      <topicdata name="NullCache" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Caching.NullCache" />
      <apidata name="NullCache" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Zhaord.Caching.NullCache.Instance" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.NullCache" />
      </containers>
      <file name="4a51073a-f463-0e42-f764-971d03183898" />
    </api>
    <api id="M:Zhaord.Caching.NullCache.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.NullCache" ref="true" />
      </containers>
      <file name="c1447c7b-7a52-fb35-1187-56e2992b8485" />
    </api>
    <api id="M:Zhaord.Caching.NullCache.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:Zhaord.Caching.ICacheManager.Clear">
          <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.NullCache" ref="true" />
      </containers>
      <file name="7de6400f-f97e-d8eb-e48e-67e0e0748f5f" />
    </api>
    <api id="M:Zhaord.Caching.NullCache.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Zhaord.Caching.ICacheManager.Contains(System.String)">
          <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.NullCache" ref="true" />
      </containers>
      <file name="0484293c-5323-d099-0948-ba4465d7f01f" />
    </api>
    <api id="M:Zhaord.Caching.NullCache.EnterWriteLock">
      <topicdata group="api" />
      <apidata name="EnterWriteLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.IDisposable" ref="true" />
      </returns>
      <implements>
        <member api="M:Zhaord.Caching.ICacheManager.EnterWriteLock">
          <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.NullCache" ref="true" />
      </containers>
      <file name="70720c10-a05c-a376-4e31-dc8296683721" />
    </api>
    <api id="M:Zhaord.Caching.NullCache.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="acquirer">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Caching.NullCache.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cacheTime" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Caching.NullCache.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})" />
      </returns>
      <implements>
        <member api="M:Zhaord.Caching.ICacheManager.Get``1(System.String,System.Func{``0},System.Nullable{System.Int32})">
          <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.NullCache" ref="true" />
      </containers>
      <file name="d505c5f6-c10d-d888-3595-04ba9528bd06" />
    </api>
    <api id="P:Zhaord.Caching.NullCache.Instance">
      <topicdata group="api" />
      <apidata name="Instance" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Instance" />
      <returns>
        <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.NullCache" ref="true" />
      </containers>
      <file name="4cf84037-a1f0-5413-dcdf-b11592cb06ba" />
    </api>
    <api id="M:Zhaord.Caching.NullCache.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Zhaord.Caching.ICacheManager.Remove(System.String)">
          <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.NullCache" ref="true" />
      </containers>
      <file name="23f31414-6763-0f72-99a4-29761e53bd4f" />
    </api>
    <api id="M:Zhaord.Caching.NullCache.RemoveByPattern(System.String)">
      <topicdata group="api" />
      <apidata name="RemoveByPattern" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="pattern">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Zhaord.Caching.ICacheManager.RemoveByPattern(System.String)">
          <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.NullCache" ref="true" />
      </containers>
      <file name="e492d8ab-a574-077c-51c8-3ab6113cb519" />
    </api>
    <api id="M:Zhaord.Caching.NullCache.Set(System.String,System.Object,System.Nullable{System.Int32})">
      <topicdata group="api" />
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="cacheTime" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Zhaord.Caching.ICacheManager.Set(System.String,System.Object,System.Nullable{System.Int32})">
          <type api="T:Zhaord.Caching.ICacheManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.NullCache" ref="true" />
      </containers>
      <file name="b55e7580-429c-6a19-b7c9-90b9ef6489e3" />
    </api>
    <api id="T:Zhaord.Caching.RequestCache">
      <topicdata group="api" />
      <apidata name="RequestCache" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Zhaord.Caching.ICache" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Caching.RequestCache.#ctor(System.Web.HttpContextBase)" />
        <element api="M:Zhaord.Caching.RequestCache.Contains(System.String)" />
        <element api="P:Zhaord.Caching.RequestCache.Entries" />
        <element api="M:Zhaord.Caching.RequestCache.Get(System.String)" />
        <element api="M:Zhaord.Caching.RequestCache.GetItems" />
        <element api="P:Zhaord.Caching.RequestCache.IsSingleton" />
        <element api="M:Zhaord.Caching.RequestCache.Remove(System.String)" />
        <element api="M:Zhaord.Caching.RequestCache.Set(System.String,System.Object,System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
      </containers>
      <file name="1d7d01f6-727f-9305-0f96-a27aab2857b3" />
    </api>
    <api id="Methods.T:Zhaord.Caching.RequestCache">
      <topicdata name="RequestCache" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Caching.RequestCache" />
      <apidata name="RequestCache" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Caching.RequestCache.Contains(System.String)" />
        <element api="M:Zhaord.Caching.RequestCache.Get(System.String)" />
        <element api="M:Zhaord.Caching.RequestCache.GetItems" />
        <element api="M:Zhaord.Caching.RequestCache.Remove(System.String)" />
        <element api="M:Zhaord.Caching.RequestCache.Set(System.String,System.Object,System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.RequestCache" />
      </containers>
      <file name="3966463c-61d1-8c65-f958-a36881b5f4c1" />
    </api>
    <api id="Properties.T:Zhaord.Caching.RequestCache">
      <topicdata name="RequestCache" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Caching.RequestCache" />
      <apidata name="RequestCache" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Zhaord.Caching.RequestCache.Entries" />
        <element api="P:Zhaord.Caching.RequestCache.IsSingleton" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.RequestCache" />
      </containers>
      <file name="19344a93-f535-44c0-ee6a-839be6bb6655" />
    </api>
    <api id="M:Zhaord.Caching.RequestCache.#ctor(System.Web.HttpContextBase)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Web.HttpContextBase" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.RequestCache" ref="true" />
      </containers>
      <file name="1eb52ab4-9593-ce9c-a990-b80a3472bc3e" />
    </api>
    <api id="M:Zhaord.Caching.RequestCache.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Zhaord.Caching.ICache.Contains(System.String)">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.RequestCache" ref="true" />
      </containers>
      <file name="7f0159be-381c-ad2c-ac8c-ed331d3d2066" />
    </api>
    <api id="P:Zhaord.Caching.RequestCache.Entries">
      <topicdata group="api" />
      <apidata name="Entries" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Entries" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:Zhaord.Caching.ICache.Entries">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.RequestCache" ref="true" />
      </containers>
      <file name="c0abf06c-c0f7-f71a-43b8-0db835ea8ed1" />
    </api>
    <api id="M:Zhaord.Caching.RequestCache.Get(System.String)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:Zhaord.Caching.ICache.Get(System.String)">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.RequestCache" ref="true" />
      </containers>
      <file name="f4254a80-6e6e-cb9b-e38e-9b73dbdfb12c" />
    </api>
    <api id="M:Zhaord.Caching.RequestCache.GetItems">
      <topicdata group="api" />
      <apidata name="GetItems" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.IDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.RequestCache" ref="true" />
      </containers>
      <file name="e3c22c83-98b7-c529-3d85-891a02d697b1" />
    </api>
    <api id="P:Zhaord.Caching.RequestCache.IsSingleton">
      <topicdata group="api" />
      <apidata name="IsSingleton" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsSingleton" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Zhaord.Caching.ICache.IsSingleton">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.RequestCache" ref="true" />
      </containers>
      <file name="f3562b5f-e6a2-8483-b517-ad6da23de3d1" />
    </api>
    <api id="M:Zhaord.Caching.RequestCache.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Zhaord.Caching.ICache.Remove(System.String)">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.RequestCache" ref="true" />
      </containers>
      <file name="6721de58-0cfa-8e5e-fbfc-7c731febd9f2" />
    </api>
    <api id="M:Zhaord.Caching.RequestCache.Set(System.String,System.Object,System.Nullable{System.Int32})">
      <topicdata group="api" />
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="cacheTime">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Zhaord.Caching.ICache.Set(System.String,System.Object,System.Nullable{System.Int32})">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.RequestCache" ref="true" />
      </containers>
      <file name="e11cb597-22f6-6436-0c2b-d9aec5ac104b" />
    </api>
    <api id="T:Zhaord.Caching.StaticCache">
      <topicdata group="api" />
      <apidata name="StaticCache" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Zhaord.Caching.ICache" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Caching.StaticCache.#ctor" />
        <element api="P:Zhaord.Caching.StaticCache.Cache" />
        <element api="M:Zhaord.Caching.StaticCache.Contains(System.String)" />
        <element api="P:Zhaord.Caching.StaticCache.Entries" />
        <element api="M:Zhaord.Caching.StaticCache.Get(System.String)" />
        <element api="P:Zhaord.Caching.StaticCache.IsSingleton" />
        <element api="M:Zhaord.Caching.StaticCache.Remove(System.String)" />
        <element api="M:Zhaord.Caching.StaticCache.Set(System.String,System.Object,System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
      </containers>
      <file name="a1268a9d-7746-8de0-0ccb-1d595c64ab19" />
    </api>
    <api id="Methods.T:Zhaord.Caching.StaticCache">
      <topicdata name="StaticCache" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Caching.StaticCache" />
      <apidata name="StaticCache" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Caching.StaticCache.Contains(System.String)" />
        <element api="M:Zhaord.Caching.StaticCache.Get(System.String)" />
        <element api="M:Zhaord.Caching.StaticCache.Remove(System.String)" />
        <element api="M:Zhaord.Caching.StaticCache.Set(System.String,System.Object,System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.StaticCache" />
      </containers>
      <file name="60b1d198-b863-ee5c-9de3-1dbda6ce96ec" />
    </api>
    <api id="Properties.T:Zhaord.Caching.StaticCache">
      <topicdata name="StaticCache" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Caching.StaticCache" />
      <apidata name="StaticCache" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Zhaord.Caching.StaticCache.Cache" />
        <element api="P:Zhaord.Caching.StaticCache.Entries" />
        <element api="P:Zhaord.Caching.StaticCache.IsSingleton" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.StaticCache" />
      </containers>
      <file name="fc534a74-ef97-6138-310c-f231f2795aea" />
    </api>
    <api id="M:Zhaord.Caching.StaticCache.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.StaticCache" ref="true" />
      </containers>
      <file name="f4abfea9-3e0f-8e41-29e4-33ba77ff6f0f" />
    </api>
    <api id="P:Zhaord.Caching.StaticCache.Cache">
      <topicdata group="api" />
      <apidata name="Cache" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Cache" />
      <returns>
        <type api="T:System.Runtime.Caching.ObjectCache" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.StaticCache" ref="true" />
      </containers>
      <file name="2ab6ab47-4623-0f06-6536-d769f8f5020c" />
    </api>
    <api id="M:Zhaord.Caching.StaticCache.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Zhaord.Caching.ICache.Contains(System.String)">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.StaticCache" ref="true" />
      </containers>
      <file name="3571310d-a6d2-0963-abbe-7b983d2251a0" />
    </api>
    <api id="P:Zhaord.Caching.StaticCache.Entries">
      <topicdata group="api" />
      <apidata name="Entries" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Entries" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:Zhaord.Caching.ICache.Entries">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.StaticCache" ref="true" />
      </containers>
      <file name="b260f0c8-fc76-536c-bcfe-38e115aa7986" />
    </api>
    <api id="M:Zhaord.Caching.StaticCache.Get(System.String)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:Zhaord.Caching.ICache.Get(System.String)">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.StaticCache" ref="true" />
      </containers>
      <file name="64d937a5-b17d-5b56-87ae-2497f140c076" />
    </api>
    <api id="P:Zhaord.Caching.StaticCache.IsSingleton">
      <topicdata group="api" />
      <apidata name="IsSingleton" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsSingleton" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Zhaord.Caching.ICache.IsSingleton">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.StaticCache" ref="true" />
      </containers>
      <file name="ffdc6882-464b-141b-fd3f-b7c2151e282c" />
    </api>
    <api id="M:Zhaord.Caching.StaticCache.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Zhaord.Caching.ICache.Remove(System.String)">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.StaticCache" ref="true" />
      </containers>
      <file name="394b0439-2524-8445-2f7e-2b37550ab06a" />
    </api>
    <api id="M:Zhaord.Caching.StaticCache.Set(System.String,System.Object,System.Nullable{System.Int32})">
      <topicdata group="api" />
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="cacheTime">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Zhaord.Caching.ICache.Set(System.String,System.Object,System.Nullable{System.Int32})">
          <type api="T:Zhaord.Caching.ICache" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Caching" />
        <type api="T:Zhaord.Caching.StaticCache" ref="true" />
      </containers>
      <file name="442ff642-4610-f5d6-3737-7e172e9c5394" />
    </api>
    <api id="N:Zhaord.Collections">
      <topicdata group="api" />
      <apidata name="Zhaord.Collections" group="namespace" />
      <elements>
        <element api="T:Zhaord.Collections.Multimap`2" />
        <element api="T:Zhaord.Collections.QueryString" />
        <element api="T:Zhaord.Collections.ITopologicSortable`1" />
        <element api="T:Zhaord.Collections.TopologicalSortExtensions" />
        <element api="T:Zhaord.Collections.CyclicDependencyException" />
        <element api="T:Zhaord.Collections.TreeNode`1" />
      </elements>
      <file name="4593870b-61e1-355d-3464-9effa5436bad" />
    </api>
    <api id="T:Zhaord.Collections.CyclicDependencyException">
      <topicdata group="api" />
      <apidata name="CyclicDependencyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.MiscExtensions.Dump(System.Exception)" source="extension">
          <apidata name="Dump" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.MiscExtensions.ToAllMessages(System.Exception)" source="extension">
          <apidata name="ToAllMessages" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.Collections.CyclicDependencyException.#ctor">
          <element api="M:Zhaord.Collections.CyclicDependencyException.#ctor" />
          <element api="M:Zhaord.Collections.CyclicDependencyException.#ctor(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
      </containers>
      <file name="dc717e59-50d8-f558-8c5d-7a7b2acc5408" />
    </api>
    <api id="Methods.T:Zhaord.Collections.CyclicDependencyException">
      <topicdata name="CyclicDependencyException" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Collections.CyclicDependencyException" />
      <apidata name="CyclicDependencyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.MiscExtensions.Dump(System.Exception)" source="extension">
          <apidata name="Dump" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.MiscExtensions.ToAllMessages(System.Exception)" source="extension">
          <apidata name="ToAllMessages" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.CyclicDependencyException" />
      </containers>
      <file name="0398904f-6aa0-8a19-7143-a916e95241f3" />
    </api>
    <api id="Properties.T:Zhaord.Collections.CyclicDependencyException">
      <topicdata name="CyclicDependencyException" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Collections.CyclicDependencyException" />
      <apidata name="CyclicDependencyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.CyclicDependencyException" />
      </containers>
      <file name="980bf8bf-9341-2d57-e497-f716a75d97cc" />
    </api>
    <api id="Events.T:Zhaord.Collections.CyclicDependencyException">
      <topicdata name="CyclicDependencyException" group="list" subgroup="Events" typeTopicId="T:Zhaord.Collections.CyclicDependencyException" />
      <apidata name="CyclicDependencyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.CyclicDependencyException" />
      </containers>
      <file name="c0e300ea-d353-94da-a44a-538f620fa7f2" />
    </api>
    <api id="Overload:Zhaord.Collections.CyclicDependencyException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Zhaord.Collections.CyclicDependencyException.#ctor" />
        <element api="M:Zhaord.Collections.CyclicDependencyException.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.CyclicDependencyException" ref="true" />
      </containers>
      <file name="3d08f324-c46b-83c8-3675-37d366efaf2b" />
    </api>
    <api id="M:Zhaord.Collections.CyclicDependencyException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.Collections.CyclicDependencyException.#ctor" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.CyclicDependencyException" ref="true" />
      </containers>
      <file name="429eea98-8ded-f36d-ff34-2813f030aa5d" />
    </api>
    <api id="M:Zhaord.Collections.CyclicDependencyException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.Collections.CyclicDependencyException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.CyclicDependencyException" ref="true" />
      </containers>
      <file name="3485f4be-e204-8e48-0ac8-140bbee68bb9" />
    </api>
    <api id="T:Zhaord.Collections.ITopologicSortable`1">
      <topicdata group="api" />
      <apidata name="ITopologicSortable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TKey" />
      </templates>
      <elements>
        <element api="P:Zhaord.Collections.ITopologicSortable`1.DependsOn" />
        <element api="P:Zhaord.Collections.ITopologicSortable`1.Key" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
      </containers>
      <file name="49eac5a8-0160-a9ca-3e0c-7332e1a6a3a9" />
    </api>
    <api id="Properties.T:Zhaord.Collections.ITopologicSortable`1">
      <topicdata name="ITopologicSortable" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Collections.ITopologicSortable`1" />
      <apidata name="ITopologicSortable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TKey" />
      </templates>
      <elements>
        <element api="P:Zhaord.Collections.ITopologicSortable`1.DependsOn" />
        <element api="P:Zhaord.Collections.ITopologicSortable`1.Key" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.ITopologicSortable`1" />
      </containers>
      <file name="ee4a2319-a418-843b-817a-74c95e600e7e" />
    </api>
    <api id="P:Zhaord.Collections.ITopologicSortable`1.DependsOn">
      <topicdata group="api" />
      <apidata name="DependsOn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DependsOn" />
      <returns>
        <arrayOf rank="1">
          <template name="TKey" index="0" api="T:Zhaord.Collections.ITopologicSortable`1" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.ITopologicSortable`1" ref="true" />
      </containers>
      <file name="e098b213-40f7-4434-3095-95f139d9b2be" />
    </api>
    <api id="P:Zhaord.Collections.ITopologicSortable`1.Key">
      <topicdata group="api" />
      <apidata name="Key" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Key" />
      <returns>
        <template name="TKey" index="0" api="T:Zhaord.Collections.ITopologicSortable`1" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.ITopologicSortable`1" ref="true" />
      </containers>
      <file name="bcb8ce55-13a9-8c02-41fe-a1623d783f97" />
    </api>
    <api id="T:Zhaord.Collections.Multimap`2">
      <topicdata group="api" />
      <apidata name="Multimap" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.Chunk``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Chunk" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="chunkSize" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>100</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                          <specialization>
                            <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                          </specialization>
                        </type>
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" source="extension" overload="true">
          <apidata name="Each" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                      <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                        <specialization>
                          <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Each" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                      <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                        <specialization>
                          <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.AsReadOnly``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsReadOnly" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                    <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                      <specialization>
                        <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension">
          <apidata name="ToMultimap" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TValue" index="2" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                      <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                        <specialization>
                          <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="valueSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                      <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                        <specialization>
                          <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TValue" index="2" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Zhaord.Collections.Multimap`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TValue" index="2" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.CastValid``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="CastValid" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.CastValid``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.Collections.Multimap`2.#ctor">
          <element api="M:Zhaord.Collections.Multimap`2.#ctor" />
          <element api="M:Zhaord.Collections.Multimap`2.#ctor(System.Func{System.Collections.Generic.ICollection{`1}})" />
          <element api="M:Zhaord.Collections.Multimap`2.#ctor(System.Collections.Generic.IDictionary{`0,System.Collections.Generic.ICollection{`1}},System.Boolean)" />
        </element>
        <element api="M:Zhaord.Collections.Multimap`2.Add(`0,`1)" />
        <element api="M:Zhaord.Collections.Multimap`2.AddRange(`0,System.Collections.Generic.IEnumerable{`1})" />
        <element api="M:Zhaord.Collections.Multimap`2.Clear" />
        <element api="M:Zhaord.Collections.Multimap`2.ContainsKey(`0)" />
        <element api="M:Zhaord.Collections.Multimap`2.ContainsValue(`0,`1)" />
        <element api="P:Zhaord.Collections.Multimap`2.Count" />
        <element api="M:Zhaord.Collections.Multimap`2.CreateFromLookup(System.Linq.ILookup{`0,`1})" />
        <element api="M:Zhaord.Collections.Multimap`2.Find(`0,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})" />
        <element api="M:Zhaord.Collections.Multimap`2.GetEnumerator" />
        <element api="P:Zhaord.Collections.Multimap`2.Item(`0)" />
        <element api="P:Zhaord.Collections.Multimap`2.Keys" />
        <element api="M:Zhaord.Collections.Multimap`2.Remove(`0,`1)" />
        <element api="M:Zhaord.Collections.Multimap`2.RemoveAll(`0)" />
        <element api="M:Zhaord.Collections.Multimap`2.ThreadSafe" />
        <element api="P:Zhaord.Collections.Multimap`2.TotalValueCount" />
        <element api="P:Zhaord.Collections.Multimap`2.Values" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
      </containers>
      <file name="d9fd96f9-f763-5c14-d0d6-f3cf34381cd2" />
    </api>
    <api id="Methods.T:Zhaord.Collections.Multimap`2">
      <topicdata name="Multimap" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Collections.Multimap`2" />
      <apidata name="Multimap" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.Chunk``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Chunk" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="chunkSize" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>100</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                          <specialization>
                            <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                          </specialization>
                        </type>
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" source="extension" overload="true">
          <apidata name="Each" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                      <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                        <specialization>
                          <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Each" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                      <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                        <specialization>
                          <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.AsReadOnly``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsReadOnly" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                    <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                      <specialization>
                        <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension">
          <apidata name="ToMultimap" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TValue" index="2" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                      <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                        <specialization>
                          <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="valueSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                      <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                        <specialization>
                          <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TValue" index="2" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Zhaord.Collections.Multimap`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TValue" index="2" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.CastValid``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="CastValid" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.CastValid``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Collections.Multimap`2.Add(`0,`1)" />
        <element api="M:Zhaord.Collections.Multimap`2.AddRange(`0,System.Collections.Generic.IEnumerable{`1})" />
        <element api="M:Zhaord.Collections.Multimap`2.Clear" />
        <element api="M:Zhaord.Collections.Multimap`2.ContainsKey(`0)" />
        <element api="M:Zhaord.Collections.Multimap`2.ContainsValue(`0,`1)" />
        <element api="M:Zhaord.Collections.Multimap`2.CreateFromLookup(System.Linq.ILookup{`0,`1})" />
        <element api="M:Zhaord.Collections.Multimap`2.Find(`0,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})" />
        <element api="M:Zhaord.Collections.Multimap`2.GetEnumerator" />
        <element api="M:Zhaord.Collections.Multimap`2.Remove(`0,`1)" />
        <element api="M:Zhaord.Collections.Multimap`2.RemoveAll(`0)" />
        <element api="M:Zhaord.Collections.Multimap`2.ThreadSafe" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" />
      </containers>
      <file name="79a8da00-c9c8-8bc2-2b44-e83955d37780" />
    </api>
    <api id="Properties.T:Zhaord.Collections.Multimap`2">
      <topicdata name="Multimap" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Collections.Multimap`2" />
      <apidata name="Multimap" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Zhaord.Collections.Multimap`2.Count" />
        <element api="P:Zhaord.Collections.Multimap`2.Item(`0)" />
        <element api="P:Zhaord.Collections.Multimap`2.Keys" />
        <element api="P:Zhaord.Collections.Multimap`2.TotalValueCount" />
        <element api="P:Zhaord.Collections.Multimap`2.Values" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" />
      </containers>
      <file name="a4993084-3124-51df-c3d4-a2f96d50b53d" />
    </api>
    <api id="Overload:Zhaord.Collections.Multimap`2.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Zhaord.Collections.Multimap`2.#ctor" />
        <element api="M:Zhaord.Collections.Multimap`2.#ctor(System.Func{System.Collections.Generic.ICollection{`1}})" />
        <element api="M:Zhaord.Collections.Multimap`2.#ctor(System.Collections.Generic.IDictionary{`0,System.Collections.Generic.ICollection{`1}},System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
      <file name="8cc5b398-054c-1c90-6127-a39e50b91090" />
    </api>
    <api id="M:Zhaord.Collections.Multimap`2.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.Collections.Multimap`2.#ctor" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
      <file name="d2900d8d-fbbe-8d5f-34ad-5d2d0d62f1e5" />
    </api>
    <api id="M:Zhaord.Collections.Multimap`2.#ctor(System.Collections.Generic.IDictionary{`0,System.Collections.Generic.ICollection{`1}},System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:Zhaord.Collections.Multimap`2.#ctor" />
      <parameters>
        <parameter name="dictionary">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="isReadonly">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
      <file name="1d1742cc-2d7d-b07c-69e1-418487302346" />
    </api>
    <api id="M:Zhaord.Collections.Multimap`2.#ctor(System.Func{System.Collections.Generic.ICollection{`1}})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.Collections.Multimap`2.#ctor" />
      <parameters>
        <parameter name="listCreator">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
      <file name="2bf5c49b-27f3-807a-505a-9993070dfef0" />
    </api>
    <api id="M:Zhaord.Collections.Multimap`2.Add(`0,`1)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="key">
          <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
        </parameter>
        <parameter name="value">
          <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
      <file name="50d2152a-245e-34e9-6f45-bae711ff3be9" />
    </api>
    <api id="M:Zhaord.Collections.Multimap`2.AddRange(`0,System.Collections.Generic.IEnumerable{`1})">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="key">
          <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
        </parameter>
        <parameter name="values">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
      <file name="11c924e0-d9ee-2f3e-f796-5f8ecba9b39e" />
    </api>
    <api id="M:Zhaord.Collections.Multimap`2.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
      <file name="e2ef5296-19d1-23af-5e1f-b2a716a16fbf" />
    </api>
    <api id="M:Zhaord.Collections.Multimap`2.ContainsKey(`0)">
      <topicdata group="api" />
      <apidata name="ContainsKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="key">
          <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
      <file name="31a036e6-4926-724a-988c-72f2030b7b07" />
    </api>
    <api id="M:Zhaord.Collections.Multimap`2.ContainsValue(`0,`1)">
      <topicdata group="api" />
      <apidata name="ContainsValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="key">
          <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
        </parameter>
        <parameter name="value">
          <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
      <file name="a20279f4-f164-59e4-33fc-45d8a292a280" />
    </api>
    <api id="P:Zhaord.Collections.Multimap`2.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
      <file name="75f13bf6-9659-d691-6efc-9a81c797cac8" />
    </api>
    <api id="M:Zhaord.Collections.Multimap`2.CreateFromLookup(System.Linq.ILookup{`0,`1})">
      <topicdata group="api" />
      <apidata name="CreateFromLookup" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.ILookup`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
              <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Zhaord.Collections.Multimap`2" ref="true">
          <specialization>
            <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
            <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
      <file name="d076147a-99ec-129f-9fba-1f5d1b1a411a" />
    </api>
    <api id="M:Zhaord.Collections.Multimap`2.Find(`0,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
      <file name="fb42887f-7efe-1691-9838-dd5d435714c6" />
    </api>
    <api id="M:Zhaord.Collections.Multimap`2.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
                  <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                    <specialization>
                      <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
      <file name="1e950146-af6f-0342-30ec-07f08087d1e7" />
    </api>
    <api id="P:Zhaord.Collections.Multimap`2.Item(`0)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="key">
          <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
      <file name="54202ada-df4f-65dc-9e1e-b0a78c7bba60" />
    </api>
    <api id="P:Zhaord.Collections.Multimap`2.Keys">
      <topicdata group="api" />
      <apidata name="Keys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Keys" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
      <file name="37056244-151f-2c48-9b96-5a228547c24f" />
    </api>
    <api id="M:Zhaord.Collections.Multimap`2.Remove(`0,`1)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="key">
          <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
        </parameter>
        <parameter name="value">
          <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
      <file name="0416bad0-747b-97fd-68cf-838d32e75bfc" />
    </api>
    <api id="M:Zhaord.Collections.Multimap`2.RemoveAll(`0)">
      <topicdata group="api" />
      <apidata name="RemoveAll" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="key">
          <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
      <file name="8aad1b24-c91c-03af-3f1b-785306502a58" />
    </api>
    <api id="M:Zhaord.Collections.Multimap`2.ThreadSafe">
      <topicdata group="api" />
      <apidata name="ThreadSafe" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Zhaord.Collections.Multimap`2" ref="true">
          <specialization>
            <template name="TKey" index="0" api="T:Zhaord.Collections.Multimap`2" />
            <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
      <file name="9a415489-1a02-397b-2106-42f82fd4a83c" />
    </api>
    <api id="P:Zhaord.Collections.Multimap`2.TotalValueCount">
      <topicdata group="api" />
      <apidata name="TotalValueCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TotalValueCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
      <file name="b654eccd-7ed4-e58a-2de0-3b3935cf060c" />
    </api>
    <api id="P:Zhaord.Collections.Multimap`2.Values">
      <topicdata group="api" />
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Values" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.ICollection`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Zhaord.Collections.Multimap`2" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.Multimap`2" ref="true" />
      </containers>
      <file name="0c6add5e-59d3-130c-cdcf-f159211d07c5" />
    </api>
    <api id="T:Zhaord.Collections.QueryString">
      <topicdata group="api" />
      <apidata name="QueryString" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Zhaord.Collections.QueryString.Add">
          <element api="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)">
            <apidata name="Add" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="c">
                <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
            </containers>
          </element>
          <element api="M:Zhaord.Collections.QueryString.Add(System.String,System.String)" />
          <element api="M:Zhaord.Collections.QueryString.Add(System.String,System.String,System.Boolean)" />
        </element>
        <element api="M:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays">
          <apidata name="InvalidateCachedArrays" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameValueCollection.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dest">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameValueCollection.HasKeys">
          <apidata name="HasKeys" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.Collections.QueryString.Get">
          <element api="M:System.Collections.Specialized.NameValueCollection.Get(System.String)">
            <apidata name="Get" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="name">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.String" ref="true" />
            </returns>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
            </containers>
          </element>
          <element api="M:System.Collections.Specialized.NameValueCollection.Get(System.Int32)">
            <apidata name="Get" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="index">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.String" ref="true" />
            </returns>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Zhaord.Collections.QueryString.GetValues">
          <element api="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)">
            <apidata name="GetValues" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="name">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </returns>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
            </containers>
          </element>
          <element api="M:System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)">
            <apidata name="GetValues" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="index">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <returns>
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </returns>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)">
          <apidata name="Set" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)">
          <apidata name="GetKey" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Specialized.NameValueCollection.AllKeys">
          <apidata name="AllKeys" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_AllKeys" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.String" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)">
          <apidata name="OnDeserialization" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sender">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)">
              <type api="T:System.Runtime.Serialization.IDeserializationCallback" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys">
          <apidata name="BaseHasKeys" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)">
          <apidata name="BaseAdd" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)">
          <apidata name="BaseRemove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)">
          <apidata name="BaseRemoveAt" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseClear">
          <apidata name="BaseClear" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.Collections.QueryString.BaseGet">
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)">
            <apidata name="BaseGet" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="name">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Object" ref="true" />
            </returns>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
            </containers>
          </element>
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)">
            <apidata name="BaseGet" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="index">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Object" ref="true" />
            </returns>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Zhaord.Collections.QueryString.BaseSet">
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)">
            <apidata name="BaseSet" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="name">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
            </containers>
          </element>
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)">
            <apidata name="BaseSet" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="index">
                <type api="T:System.Int32" ref="false" />
              </parameter>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)">
          <apidata name="BaseGetKey" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Collections.IEnumerable.GetEnumerator">
              <type api="T:System.Collections.IEnumerable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys">
          <apidata name="BaseGetAllKeys" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.String" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.Collections.QueryString.BaseGetAllValues">
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues">
            <apidata name="BaseGetAllValues" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <returns>
              <arrayOf rank="1">
                <type api="T:System.Object" ref="true" />
              </arrayOf>
            </returns>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
            </containers>
          </element>
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)">
            <apidata name="BaseGetAllValues" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="type">
                <type api="T:System.Type" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <arrayOf rank="1">
                <type api="T:System.Object" ref="true" />
              </arrayOf>
            </returns>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
            </containers>
          </element>
        </element>
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly">
          <apidata name="IsReadOnly" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IsReadOnly" />
          <setter name="set_IsReadOnly" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Count" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.Count">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.Keys">
          <apidata name="Keys" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Keys" />
          <returns>
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" ref="true">
              <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
            </type>
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.AddRange(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection)" source="extension">
          <apidata name="AddRange" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="other">
              <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.Collections.QueryString.#ctor">
          <element api="M:Zhaord.Collections.QueryString.#ctor" />
          <element api="M:Zhaord.Collections.QueryString.#ctor(System.String)" />
        </element>
        <element api="M:Zhaord.Collections.QueryString.Contains(System.String)" />
        <element api="P:Zhaord.Collections.QueryString.Current" />
        <element api="M:Zhaord.Collections.QueryString.ExtractQuerystring(System.String)" />
        <element api="M:Zhaord.Collections.QueryString.FillFromString(System.String)" />
        <element api="M:Zhaord.Collections.QueryString.FromCurrent" />
        <element api="Overload:Zhaord.Collections.QueryString.Item">
          <element api="P:Zhaord.Collections.QueryString.Item(System.Int32)" />
          <element api="P:Zhaord.Collections.QueryString.Item(System.String)" />
        </element>
        <element api="M:Zhaord.Collections.QueryString.Remove(System.String)" />
        <element api="M:Zhaord.Collections.QueryString.Reset" />
        <element api="M:Zhaord.Collections.QueryString.ToString" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
      </containers>
      <file name="8b85d495-3fed-cf50-82c6-2914ce45529e" />
    </api>
    <api id="Methods.T:Zhaord.Collections.QueryString">
      <topicdata name="QueryString" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Collections.QueryString" />
      <apidata name="QueryString" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:Zhaord.Collections.QueryString.Add">
          <element api="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)">
            <apidata name="Add" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="c">
                <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
            </containers>
          </element>
          <element api="M:Zhaord.Collections.QueryString.Add(System.String,System.String)" />
          <element api="M:Zhaord.Collections.QueryString.Add(System.String,System.String,System.Boolean)" />
        </element>
        <element api="M:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays">
          <apidata name="InvalidateCachedArrays" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameValueCollection.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dest">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameValueCollection.HasKeys">
          <apidata name="HasKeys" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.Collections.QueryString.Get">
          <element api="M:System.Collections.Specialized.NameValueCollection.Get(System.String)">
            <apidata name="Get" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="name">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.String" ref="true" />
            </returns>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
            </containers>
          </element>
          <element api="M:System.Collections.Specialized.NameValueCollection.Get(System.Int32)">
            <apidata name="Get" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="index">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.String" ref="true" />
            </returns>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Zhaord.Collections.QueryString.GetValues">
          <element api="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)">
            <apidata name="GetValues" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="name">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </returns>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
            </containers>
          </element>
          <element api="M:System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)">
            <apidata name="GetValues" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="index">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <returns>
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </returns>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)">
          <apidata name="Set" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)">
          <apidata name="GetKey" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)">
          <apidata name="OnDeserialization" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sender">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)">
              <type api="T:System.Runtime.Serialization.IDeserializationCallback" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys">
          <apidata name="BaseHasKeys" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)">
          <apidata name="BaseAdd" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)">
          <apidata name="BaseRemove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)">
          <apidata name="BaseRemoveAt" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseClear">
          <apidata name="BaseClear" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.Collections.QueryString.BaseGet">
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)">
            <apidata name="BaseGet" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="name">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Object" ref="true" />
            </returns>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
            </containers>
          </element>
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)">
            <apidata name="BaseGet" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="index">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Object" ref="true" />
            </returns>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Zhaord.Collections.QueryString.BaseSet">
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)">
            <apidata name="BaseSet" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="name">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
            </containers>
          </element>
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)">
            <apidata name="BaseSet" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="index">
                <type api="T:System.Int32" ref="false" />
              </parameter>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)">
          <apidata name="BaseGetKey" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Collections.IEnumerable.GetEnumerator">
              <type api="T:System.Collections.IEnumerable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys">
          <apidata name="BaseGetAllKeys" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.String" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.Collections.QueryString.BaseGetAllValues">
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues">
            <apidata name="BaseGetAllValues" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <returns>
              <arrayOf rank="1">
                <type api="T:System.Object" ref="true" />
              </arrayOf>
            </returns>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
            </containers>
          </element>
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)">
            <apidata name="BaseGetAllValues" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="type">
                <type api="T:System.Type" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <arrayOf rank="1">
                <type api="T:System.Object" ref="true" />
              </arrayOf>
            </returns>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Collections.Specialized" />
              <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.AddRange(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection)" source="extension">
          <apidata name="AddRange" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="other">
              <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Collections.QueryString.Contains(System.String)" />
        <element api="M:Zhaord.Collections.QueryString.ExtractQuerystring(System.String)" />
        <element api="M:Zhaord.Collections.QueryString.FillFromString(System.String)" />
        <element api="M:Zhaord.Collections.QueryString.FromCurrent" />
        <element api="M:Zhaord.Collections.QueryString.Remove(System.String)" />
        <element api="M:Zhaord.Collections.QueryString.Reset" />
        <element api="M:Zhaord.Collections.QueryString.ToString" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" />
      </containers>
      <file name="a5b9edf2-d648-2205-3d1c-d4d8f04e02aa" />
    </api>
    <api id="Properties.T:Zhaord.Collections.QueryString">
      <topicdata name="QueryString" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Collections.QueryString" />
      <apidata name="QueryString" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.Specialized.NameValueCollection.AllKeys">
          <apidata name="AllKeys" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_AllKeys" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.String" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly">
          <apidata name="IsReadOnly" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IsReadOnly" />
          <setter name="set_IsReadOnly" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Count" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.Count">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.Keys">
          <apidata name="Keys" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Keys" />
          <returns>
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" ref="true">
              <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
            </type>
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          </containers>
        </element>
        <element api="P:Zhaord.Collections.QueryString.Current" />
        <element api="Overload:Zhaord.Collections.QueryString.Item">
          <element api="P:Zhaord.Collections.QueryString.Item(System.Int32)" />
          <element api="P:Zhaord.Collections.QueryString.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" />
      </containers>
      <file name="f9fb61c7-2a45-a722-21e7-f1616ba53433" />
    </api>
    <api id="Overload:Zhaord.Collections.QueryString.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)">
          <apidata name="Add" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="c">
              <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Specialized" />
            <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Collections.QueryString.Add(System.String,System.String)" />
        <element api="M:Zhaord.Collections.QueryString.Add(System.String,System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
      <file name="f9ea7b8f-28e5-a82a-1ba3-cc1880f454b9" />
    </api>
    <api id="Overload:Zhaord.Collections.QueryString.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Zhaord.Collections.QueryString.#ctor" />
        <element api="M:Zhaord.Collections.QueryString.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
      <file name="b5679ac8-7ae6-65db-a20b-302dce2a40ba" />
    </api>
    <api id="Overload:Zhaord.Collections.QueryString.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" allMembersTopicId="" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:Zhaord.Collections.QueryString.Item(System.Int32)" />
        <element api="P:Zhaord.Collections.QueryString.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
      <file name="6011ebf9-03a9-7ad6-b4f6-5d6681ec00d8" />
    </api>
    <api id="M:Zhaord.Collections.QueryString.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.Collections.QueryString.#ctor" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
      <file name="c4104b45-5f81-a4c7-e9c2-49c38f24337d" />
    </api>
    <api id="M:Zhaord.Collections.QueryString.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.Collections.QueryString.#ctor" />
      <parameters>
        <parameter name="queryString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
      <file name="b39d5b6e-e809-3866-f3fd-59dc8d7cf4df" />
    </api>
    <api id="M:Zhaord.Collections.QueryString.Add(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.Collections.QueryString.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
      <file name="bd629e0a-9ea5-2153-1a62-fcadbe3bafcc" />
    </api>
    <api id="M:Zhaord.Collections.QueryString.Add(System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.Collections.QueryString.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="isUnique">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
      <file name="550e44c3-7f4c-1c3b-7075-76a33a519c0f" />
    </api>
    <api id="M:Zhaord.Collections.QueryString.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
      <file name="b0e471a2-0409-197c-1f0c-9daebac8f5a1" />
    </api>
    <api id="P:Zhaord.Collections.QueryString.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
      <file name="3f244378-5ec7-010a-39d7-35115cae2c05" />
    </api>
    <api id="M:Zhaord.Collections.QueryString.ExtractQuerystring(System.String)">
      <topicdata group="api" />
      <apidata name="ExtractQuerystring" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
      <file name="6e39d62b-7728-e339-7534-850e0bf41dac" />
    </api>
    <api id="M:Zhaord.Collections.QueryString.FillFromString(System.String)">
      <topicdata group="api" />
      <apidata name="FillFromString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
      <file name="8d2de7f0-7e20-56b5-02d1-5b2e308b916c" />
    </api>
    <api id="M:Zhaord.Collections.QueryString.FromCurrent">
      <topicdata group="api" />
      <apidata name="FromCurrent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
      <file name="74d67340-834f-085c-3797-4fc8b3e466ca" />
    </api>
    <api id="P:Zhaord.Collections.QueryString.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" overload="Overload:Zhaord.Collections.QueryString.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
      <file name="335d7e51-b1a2-9c86-a65f-46cdc1930ef2" />
    </api>
    <api id="P:Zhaord.Collections.QueryString.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" overload="Overload:Zhaord.Collections.QueryString.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
      <file name="bb1d901b-b57d-5208-9361-9f448de8f48d" />
    </api>
    <api id="M:Zhaord.Collections.QueryString.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
      <file name="7a4cc001-f605-7b8a-31e6-14396ca74339" />
    </api>
    <api id="M:Zhaord.Collections.QueryString.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
      <file name="621314a4-cfd7-8ccf-2eab-4f0a71153c78" />
    </api>
    <api id="M:Zhaord.Collections.QueryString.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.QueryString" ref="true" />
      </containers>
      <file name="00a7021c-d1fa-bd71-4862-b387bb80ffaf" />
    </api>
    <api id="T:Zhaord.Collections.TopologicalSortExtensions">
      <topicdata group="api" />
      <apidata name="TopologicalSortExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Zhaord.Collections.TopologicalSortExtensions.SortIndexesTopological">
          <element api="M:Zhaord.Collections.TopologicalSortExtensions.SortIndexesTopological``1(Zhaord.Collections.ITopologicSortable{``0}[])" />
          <element api="M:Zhaord.Collections.TopologicalSortExtensions.SortIndexesTopological``1(Zhaord.Collections.ITopologicSortable{``0}[],System.Collections.Generic.IEqualityComparer{``0})" />
        </element>
        <element api="Overload:Zhaord.Collections.TopologicalSortExtensions.SortTopological">
          <element api="M:Zhaord.Collections.TopologicalSortExtensions.SortTopological``1(Zhaord.Collections.ITopologicSortable{``0}[])" />
          <element api="M:Zhaord.Collections.TopologicalSortExtensions.SortTopological``1(Zhaord.Collections.ITopologicSortable{``0}[],System.Collections.Generic.IEqualityComparer{``0})" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="5d7975b7-2120-965c-cd69-95acfe47b0fa" />
    </api>
    <api id="Methods.T:Zhaord.Collections.TopologicalSortExtensions">
      <topicdata name="TopologicalSortExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Collections.TopologicalSortExtensions" />
      <apidata name="TopologicalSortExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:Zhaord.Collections.TopologicalSortExtensions.SortIndexesTopological">
          <element api="M:Zhaord.Collections.TopologicalSortExtensions.SortIndexesTopological``1(Zhaord.Collections.ITopologicSortable{``0}[])" />
          <element api="M:Zhaord.Collections.TopologicalSortExtensions.SortIndexesTopological``1(Zhaord.Collections.ITopologicSortable{``0}[],System.Collections.Generic.IEqualityComparer{``0})" />
        </element>
        <element api="Overload:Zhaord.Collections.TopologicalSortExtensions.SortTopological">
          <element api="M:Zhaord.Collections.TopologicalSortExtensions.SortTopological``1(Zhaord.Collections.ITopologicSortable{``0}[])" />
          <element api="M:Zhaord.Collections.TopologicalSortExtensions.SortTopological``1(Zhaord.Collections.ITopologicSortable{``0}[],System.Collections.Generic.IEqualityComparer{``0})" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TopologicalSortExtensions" />
      </containers>
      <file name="3bbd2da8-edad-0504-2a87-82c198beaa63" />
    </api>
    <api id="Overload:Zhaord.Collections.TopologicalSortExtensions.SortIndexesTopological">
      <topicdata name="SortIndexesTopological" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="SortIndexesTopological" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Collections.TopologicalSortExtensions.SortIndexesTopological``1(Zhaord.Collections.ITopologicSortable{``0}[])" />
        <element api="M:Zhaord.Collections.TopologicalSortExtensions.SortIndexesTopological``1(Zhaord.Collections.ITopologicSortable{``0}[],System.Collections.Generic.IEqualityComparer{``0})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TopologicalSortExtensions" ref="true" />
      </containers>
      <file name="344ee53e-c2c6-6e82-e613-8031de6f346a" />
    </api>
    <api id="Overload:Zhaord.Collections.TopologicalSortExtensions.SortTopological">
      <topicdata name="SortTopological" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="SortTopological" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Collections.TopologicalSortExtensions.SortTopological``1(Zhaord.Collections.ITopologicSortable{``0}[])" />
        <element api="M:Zhaord.Collections.TopologicalSortExtensions.SortTopological``1(Zhaord.Collections.ITopologicSortable{``0}[],System.Collections.Generic.IEqualityComparer{``0})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TopologicalSortExtensions" ref="true" />
      </containers>
      <file name="936f6d07-d0c1-ad16-61de-76fdf1802ee2" />
    </api>
    <api id="M:Zhaord.Collections.TopologicalSortExtensions.SortIndexesTopological``1(Zhaord.Collections.ITopologicSortable{``0}[])">
      <topicdata group="api" />
      <apidata name="SortIndexesTopological" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Collections.TopologicalSortExtensions.SortIndexesTopological" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="items">
          <arrayOf rank="1">
            <type api="T:Zhaord.Collections.ITopologicSortable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="M:Zhaord.Collections.TopologicalSortExtensions.SortIndexesTopological``1(Zhaord.Collections.ITopologicSortable{``0}[])" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Int32" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TopologicalSortExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="75e43984-7cd2-dcc0-1dd8-358d82d76395" />
    </api>
    <api id="M:Zhaord.Collections.TopologicalSortExtensions.SortIndexesTopological``1(Zhaord.Collections.ITopologicSortable{``0}[],System.Collections.Generic.IEqualityComparer{``0})">
      <topicdata group="api" />
      <apidata name="SortIndexesTopological" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Collections.TopologicalSortExtensions.SortIndexesTopological" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="items">
          <arrayOf rank="1">
            <type api="T:Zhaord.Collections.ITopologicSortable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="M:Zhaord.Collections.TopologicalSortExtensions.SortIndexesTopological``1(Zhaord.Collections.ITopologicSortable{``0}[],System.Collections.Generic.IEqualityComparer{``0})" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Collections.TopologicalSortExtensions.SortIndexesTopological``1(Zhaord.Collections.ITopologicSortable{``0}[],System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Int32" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TopologicalSortExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="022a1ff1-539d-ee29-1257-cbf795ba51ad" />
    </api>
    <api id="M:Zhaord.Collections.TopologicalSortExtensions.SortTopological``1(Zhaord.Collections.ITopologicSortable{``0}[])">
      <topicdata group="api" />
      <apidata name="SortTopological" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Collections.TopologicalSortExtensions.SortTopological" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="items">
          <arrayOf rank="1">
            <type api="T:Zhaord.Collections.ITopologicSortable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="M:Zhaord.Collections.TopologicalSortExtensions.SortTopological``1(Zhaord.Collections.ITopologicSortable{``0}[])" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:Zhaord.Collections.ITopologicSortable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Collections.TopologicalSortExtensions.SortTopological``1(Zhaord.Collections.ITopologicSortable{``0}[])" />
            </specialization>
          </type>
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TopologicalSortExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="37e70046-3a32-f584-e7c9-c0ff3955ef60" />
    </api>
    <api id="M:Zhaord.Collections.TopologicalSortExtensions.SortTopological``1(Zhaord.Collections.ITopologicSortable{``0}[],System.Collections.Generic.IEqualityComparer{``0})">
      <topicdata group="api" />
      <apidata name="SortTopological" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Collections.TopologicalSortExtensions.SortTopological" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="items">
          <arrayOf rank="1">
            <type api="T:Zhaord.Collections.ITopologicSortable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="M:Zhaord.Collections.TopologicalSortExtensions.SortTopological``1(Zhaord.Collections.ITopologicSortable{``0}[],System.Collections.Generic.IEqualityComparer{``0})" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Collections.TopologicalSortExtensions.SortTopological``1(Zhaord.Collections.ITopologicSortable{``0}[],System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:Zhaord.Collections.ITopologicSortable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Collections.TopologicalSortExtensions.SortTopological``1(Zhaord.Collections.ITopologicSortable{``0}[],System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TopologicalSortExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="135f3021-f1bd-ded5-a044-3af51619c31b" />
    </api>
    <api id="T:Zhaord.Collections.TreeNode`1">
      <topicdata group="api" />
      <apidata name="TreeNode" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:Zhaord.ICloneable`1" ref="true">
          <specialization>
            <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Collections.TreeNode`1.#ctor(`0)" />
        <element api="Overload:Zhaord.Collections.TreeNode`1.Append">
          <element api="M:Zhaord.Collections.TreeNode`1.Append(`0)" />
          <element api="M:Zhaord.Collections.TreeNode`1.Append(Zhaord.Collections.TreeNode{`0},System.Boolean)" />
        </element>
        <element api="M:Zhaord.Collections.TreeNode`1.AppendChildrenOf(Zhaord.Collections.TreeNode{`0})" />
        <element api="Overload:Zhaord.Collections.TreeNode`1.AppendMany">
          <element api="M:Zhaord.Collections.TreeNode`1.AppendMany(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Zhaord.Collections.TreeNode`1.AppendMany(`0[])" />
          <element api="M:Zhaord.Collections.TreeNode`1.AppendMany(System.Collections.Generic.IEnumerable{Zhaord.Collections.TreeNode{`0}})" />
        </element>
        <element api="P:Zhaord.Collections.TreeNode`1.Children" />
        <element api="M:Zhaord.Collections.TreeNode`1.Clear" />
        <element api="Overload:Zhaord.Collections.TreeNode`1.Clone">
          <element api="M:Zhaord.Collections.TreeNode`1.Clone" />
          <element api="M:Zhaord.Collections.TreeNode`1.Clone(System.Boolean)" />
        </element>
        <element api="P:Zhaord.Collections.TreeNode`1.Depth" />
        <element api="M:Zhaord.Collections.TreeNode`1.Find(`0)" />
        <element api="P:Zhaord.Collections.TreeNode`1.FirstChild" />
        <element api="Overload:Zhaord.Collections.TreeNode`1.Flatten">
          <element api="M:Zhaord.Collections.TreeNode`1.Flatten(System.Boolean)" />
          <element api="M:Zhaord.Collections.TreeNode`1.Flatten(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)" />
        </element>
        <element api="P:Zhaord.Collections.TreeNode`1.HasChildren" />
        <element api="M:Zhaord.Collections.TreeNode`1.InsertAfter(Zhaord.Collections.TreeNode{`0})" />
        <element api="M:Zhaord.Collections.TreeNode`1.InsertBefore(Zhaord.Collections.TreeNode{`0})" />
        <element api="P:Zhaord.Collections.TreeNode`1.IsLeaf" />
        <element api="P:Zhaord.Collections.TreeNode`1.IsRoot" />
        <element api="P:Zhaord.Collections.TreeNode`1.Item(System.Int32)" />
        <element api="P:Zhaord.Collections.TreeNode`1.LastChild" />
        <element api="P:Zhaord.Collections.TreeNode`1.LeafNodes" />
        <element api="P:Zhaord.Collections.TreeNode`1.Next" />
        <element api="P:Zhaord.Collections.TreeNode`1.NonLeafNodes" />
        <element api="P:Zhaord.Collections.TreeNode`1.Parent" />
        <element api="M:Zhaord.Collections.TreeNode`1.Prepend(`0)" />
        <element api="P:Zhaord.Collections.TreeNode`1.Previous" />
        <element api="M:Zhaord.Collections.TreeNode`1.RemoveNode(Zhaord.Collections.TreeNode{`0})" />
        <element api="P:Zhaord.Collections.TreeNode`1.Root" />
        <element api="M:Zhaord.Collections.TreeNode`1.SelectNode(System.Linq.Expressions.Expression{System.Func{Zhaord.Collections.TreeNode{`0},System.Boolean}})" />
        <element api="M:Zhaord.Collections.TreeNode`1.SelectNodes(System.Linq.Expressions.Expression{System.Func{Zhaord.Collections.TreeNode{`0},System.Boolean}})" />
        <element api="M:Zhaord.Collections.TreeNode`1.Traverse(System.Action{`0})" />
        <element api="M:Zhaord.Collections.TreeNode`1.TraverseTree(System.Action{Zhaord.Collections.TreeNode{`0}})" />
        <element api="P:Zhaord.Collections.TreeNode`1.Value" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
      </containers>
      <file name="18d2cfd2-20bd-e427-d598-d30949f6498d" />
    </api>
    <api id="Methods.T:Zhaord.Collections.TreeNode`1">
      <topicdata name="TreeNode" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Collections.TreeNode`1" />
      <apidata name="TreeNode" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.Collections.TreeNode`1.Append">
          <element api="M:Zhaord.Collections.TreeNode`1.Append(`0)" />
          <element api="M:Zhaord.Collections.TreeNode`1.Append(Zhaord.Collections.TreeNode{`0},System.Boolean)" />
        </element>
        <element api="M:Zhaord.Collections.TreeNode`1.AppendChildrenOf(Zhaord.Collections.TreeNode{`0})" />
        <element api="Overload:Zhaord.Collections.TreeNode`1.AppendMany">
          <element api="M:Zhaord.Collections.TreeNode`1.AppendMany(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Zhaord.Collections.TreeNode`1.AppendMany(`0[])" />
          <element api="M:Zhaord.Collections.TreeNode`1.AppendMany(System.Collections.Generic.IEnumerable{Zhaord.Collections.TreeNode{`0}})" />
        </element>
        <element api="M:Zhaord.Collections.TreeNode`1.Clear" />
        <element api="Overload:Zhaord.Collections.TreeNode`1.Clone">
          <element api="M:Zhaord.Collections.TreeNode`1.Clone" />
          <element api="M:Zhaord.Collections.TreeNode`1.Clone(System.Boolean)" />
        </element>
        <element api="M:Zhaord.Collections.TreeNode`1.Find(`0)" />
        <element api="Overload:Zhaord.Collections.TreeNode`1.Flatten">
          <element api="M:Zhaord.Collections.TreeNode`1.Flatten(System.Boolean)" />
          <element api="M:Zhaord.Collections.TreeNode`1.Flatten(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)" />
        </element>
        <element api="M:Zhaord.Collections.TreeNode`1.InsertAfter(Zhaord.Collections.TreeNode{`0})" />
        <element api="M:Zhaord.Collections.TreeNode`1.InsertBefore(Zhaord.Collections.TreeNode{`0})" />
        <element api="M:Zhaord.Collections.TreeNode`1.Prepend(`0)" />
        <element api="M:Zhaord.Collections.TreeNode`1.RemoveNode(Zhaord.Collections.TreeNode{`0})" />
        <element api="M:Zhaord.Collections.TreeNode`1.SelectNode(System.Linq.Expressions.Expression{System.Func{Zhaord.Collections.TreeNode{`0},System.Boolean}})" />
        <element api="M:Zhaord.Collections.TreeNode`1.SelectNodes(System.Linq.Expressions.Expression{System.Func{Zhaord.Collections.TreeNode{`0},System.Boolean}})" />
        <element api="M:Zhaord.Collections.TreeNode`1.Traverse(System.Action{`0})" />
        <element api="M:Zhaord.Collections.TreeNode`1.TraverseTree(System.Action{Zhaord.Collections.TreeNode{`0}})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" />
      </containers>
      <file name="21a0e919-02ed-701b-2e9a-512030038f77" />
    </api>
    <api id="Properties.T:Zhaord.Collections.TreeNode`1">
      <topicdata name="TreeNode" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Collections.TreeNode`1" />
      <apidata name="TreeNode" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:Zhaord.Collections.TreeNode`1.Children" />
        <element api="P:Zhaord.Collections.TreeNode`1.Depth" />
        <element api="P:Zhaord.Collections.TreeNode`1.FirstChild" />
        <element api="P:Zhaord.Collections.TreeNode`1.HasChildren" />
        <element api="P:Zhaord.Collections.TreeNode`1.IsLeaf" />
        <element api="P:Zhaord.Collections.TreeNode`1.IsRoot" />
        <element api="P:Zhaord.Collections.TreeNode`1.Item(System.Int32)" />
        <element api="P:Zhaord.Collections.TreeNode`1.LastChild" />
        <element api="P:Zhaord.Collections.TreeNode`1.LeafNodes" />
        <element api="P:Zhaord.Collections.TreeNode`1.Next" />
        <element api="P:Zhaord.Collections.TreeNode`1.NonLeafNodes" />
        <element api="P:Zhaord.Collections.TreeNode`1.Parent" />
        <element api="P:Zhaord.Collections.TreeNode`1.Previous" />
        <element api="P:Zhaord.Collections.TreeNode`1.Root" />
        <element api="P:Zhaord.Collections.TreeNode`1.Value" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" />
      </containers>
      <file name="620c5c5c-1df5-4720-7bf2-745aa1c3f2f5" />
    </api>
    <api id="Overload:Zhaord.Collections.TreeNode`1.Append">
      <topicdata name="Append" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Append" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Collections.TreeNode`1.Append(`0)" />
        <element api="M:Zhaord.Collections.TreeNode`1.Append(Zhaord.Collections.TreeNode{`0},System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="0602ab6c-afac-3245-1649-03c49963000d" />
    </api>
    <api id="Overload:Zhaord.Collections.TreeNode`1.AppendMany">
      <topicdata name="AppendMany" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="AppendMany" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Collections.TreeNode`1.AppendMany(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:Zhaord.Collections.TreeNode`1.AppendMany(`0[])" />
        <element api="M:Zhaord.Collections.TreeNode`1.AppendMany(System.Collections.Generic.IEnumerable{Zhaord.Collections.TreeNode{`0}})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="a3d2d839-231a-ed1d-a49b-07a2d111ffad" />
    </api>
    <api id="Overload:Zhaord.Collections.TreeNode`1.Clone">
      <topicdata name="Clone" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Clone" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Collections.TreeNode`1.Clone" />
        <element api="M:Zhaord.Collections.TreeNode`1.Clone(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="f55dc405-b0c7-2674-0ec4-2117ca90d53b" />
    </api>
    <api id="Overload:Zhaord.Collections.TreeNode`1.Flatten">
      <topicdata name="Flatten" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Flatten" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Collections.TreeNode`1.Flatten(System.Boolean)" />
        <element api="M:Zhaord.Collections.TreeNode`1.Flatten(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="b6de4f41-1bb9-0ab9-9a28-55dbecc87550" />
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.#ctor(`0)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="6ae6fd03-adb9-e942-4124-926de74190aa" />
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.Append(`0)">
      <topicdata group="api" />
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.Collections.TreeNode`1.Append" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="5f4e37f0-ef33-d37d-1c2f-433245310ff7" />
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.Append(Zhaord.Collections.TreeNode{`0},System.Boolean)">
      <topicdata group="api" />
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.Collections.TreeNode`1.Append" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="node">
          <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="clone" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="2f3058c1-5054-c35a-8952-ee946727fe60" />
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.AppendChildrenOf(Zhaord.Collections.TreeNode{`0})">
      <topicdata group="api" />
      <apidata name="AppendChildrenOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="node">
          <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="64682a25-e76d-f821-1619-b79024aef533" />
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.AppendMany(System.Collections.Generic.IEnumerable{`0})">
      <topicdata group="api" />
      <apidata name="AppendMany" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.Collections.TreeNode`1.AppendMany" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="values">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="36237e56-7590-4219-8ad8-c4394e07a343" />
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.AppendMany(System.Collections.Generic.IEnumerable{Zhaord.Collections.TreeNode{`0}})">
      <topicdata group="api" />
      <apidata name="AppendMany" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.Collections.TreeNode`1.AppendMany" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="values">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="fda7edd2-9f37-f141-5296-3a838dcd8d89" />
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.AppendMany(`0[])">
      <topicdata group="api" />
      <apidata name="AppendMany" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.Collections.TreeNode`1.AppendMany" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="values" params="true">
          <arrayOf rank="1">
            <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
            </specialization>
          </type>
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="0aea941e-90a3-857b-7a23-3a165f4ab541" />
    </api>
    <api id="P:Zhaord.Collections.TreeNode`1.Children">
      <topicdata group="api" />
      <apidata name="Children" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Children" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="8745fbbb-1bfd-d53b-9ee8-0550e5bc29c3" />
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="17b5a692-f2f1-bafc-7a5c-41d8a5f05959" />
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.Collections.TreeNode`1.Clone" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Zhaord.ICloneable`1.Clone">
          <type api="T:Zhaord.ICloneable`1" ref="true">
            <specialization>
              <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="40561239-6b53-17e3-e19f-682b13865e4e" />
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.Clone(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.Collections.TreeNode`1.Clone" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="deep">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="4d072b38-b039-c1d4-6ae3-03e77669480c" />
    </api>
    <api id="P:Zhaord.Collections.TreeNode`1.Depth">
      <topicdata group="api" />
      <apidata name="Depth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Depth" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="004b2627-fb92-9a4f-3316-4dda101ef069" />
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.Find(`0)">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="39547f0e-651e-7bf5-7209-bfbae058c37e" />
    </api>
    <api id="P:Zhaord.Collections.TreeNode`1.FirstChild">
      <topicdata group="api" />
      <apidata name="FirstChild" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FirstChild" />
      <returns>
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="115df1c2-254c-8460-8749-485e340a692f" />
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.Flatten(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Flatten" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.Collections.TreeNode`1.Flatten" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="includeSelf" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="5738e5f0-d1d9-91d5-d6ec-ee2ea44e200d" />
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.Flatten(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)">
      <topicdata group="api" />
      <apidata name="Flatten" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.Collections.TreeNode`1.Flatten" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="includeSelf" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="7c0c79e6-f119-8733-188f-8f1991b63599" />
    </api>
    <api id="P:Zhaord.Collections.TreeNode`1.HasChildren">
      <topicdata group="api" />
      <apidata name="HasChildren" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasChildren" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="c5c4c53d-ec66-9a28-38fc-332c6f6d17db" />
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.InsertAfter(Zhaord.Collections.TreeNode{`0})">
      <topicdata group="api" />
      <apidata name="InsertAfter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="refNode">
          <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="47843010-dc80-429e-20b1-1cda74930b41" />
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.InsertBefore(Zhaord.Collections.TreeNode{`0})">
      <topicdata group="api" />
      <apidata name="InsertBefore" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="refNode">
          <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="079ad35a-7376-f4d7-8d4d-ce09184fda3d" />
    </api>
    <api id="P:Zhaord.Collections.TreeNode`1.IsLeaf">
      <topicdata group="api" />
      <apidata name="IsLeaf" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsLeaf" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="4525406a-fa6f-32ba-cef5-5ed76b113210" />
    </api>
    <api id="P:Zhaord.Collections.TreeNode`1.IsRoot">
      <topicdata group="api" />
      <apidata name="IsRoot" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsRoot" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="1f792615-975a-525a-637c-a9038395cc03" />
    </api>
    <api id="P:Zhaord.Collections.TreeNode`1.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="5c51e93c-34bd-fa97-a632-3c66d88b62f8" />
    </api>
    <api id="P:Zhaord.Collections.TreeNode`1.LastChild">
      <topicdata group="api" />
      <apidata name="LastChild" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LastChild" />
      <returns>
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="c95d662a-fe6f-4d04-bd3e-4770befaa937" />
    </api>
    <api id="P:Zhaord.Collections.TreeNode`1.LeafNodes">
      <topicdata group="api" />
      <apidata name="LeafNodes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LeafNodes" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="772c0de6-85e4-8449-2fe2-317693eeb015" />
    </api>
    <api id="P:Zhaord.Collections.TreeNode`1.Next">
      <topicdata group="api" />
      <apidata name="Next" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Next" />
      <returns>
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="f713f6c5-648f-813e-fe36-28f81616e4a5" />
    </api>
    <api id="P:Zhaord.Collections.TreeNode`1.NonLeafNodes">
      <topicdata group="api" />
      <apidata name="NonLeafNodes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NonLeafNodes" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="b496d715-a21d-8594-d872-55498b70c433" />
    </api>
    <api id="P:Zhaord.Collections.TreeNode`1.Parent">
      <topicdata group="api" />
      <apidata name="Parent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parent" />
      <returns>
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="e2c2c53c-7edc-2ef1-4599-2829de12eec5" />
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.Prepend(`0)">
      <topicdata group="api" />
      <apidata name="Prepend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="2890fca7-3139-d26d-0a6b-c216f4f6c391" />
    </api>
    <api id="P:Zhaord.Collections.TreeNode`1.Previous">
      <topicdata group="api" />
      <apidata name="Previous" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Previous" />
      <returns>
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="2c06d392-e105-e2a1-7816-14f487fad57f" />
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.RemoveNode(Zhaord.Collections.TreeNode{`0})">
      <topicdata group="api" />
      <apidata name="RemoveNode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="node">
          <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="c9ea9233-5e86-bbe2-3add-871ccef2c61d" />
    </api>
    <api id="P:Zhaord.Collections.TreeNode`1.Root">
      <topicdata group="api" />
      <apidata name="Root" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Root" />
      <returns>
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="af85e2bf-fe3c-ca21-3617-5ba9e89d50f5" />
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.SelectNode(System.Linq.Expressions.Expression{System.Func{Zhaord.Collections.TreeNode{`0},System.Boolean}})">
      <topicdata group="api" />
      <apidata name="SelectNode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="predicate">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="701c0e54-5ccc-2987-bb8c-3e3767f1e65c" />
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.SelectNodes(System.Linq.Expressions.Expression{System.Func{Zhaord.Collections.TreeNode{`0},System.Boolean}})">
      <topicdata group="api" />
      <apidata name="SelectNodes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="predicate">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="a29308c9-15dd-ef79-203f-96d28d335b39" />
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.Traverse(System.Action{`0})">
      <topicdata group="api" />
      <apidata name="Traverse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="14c263e4-504a-e66a-be31-09481827d470" />
    </api>
    <api id="M:Zhaord.Collections.TreeNode`1.TraverseTree(System.Action{Zhaord.Collections.TreeNode{`0}})">
      <topicdata group="api" />
      <apidata name="TraverseTree" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:Zhaord.Collections.TreeNode`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="662c3d8c-20a7-1110-4238-a8db420220d1" />
    </api>
    <api id="P:Zhaord.Collections.TreeNode`1.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <template name="T" index="0" api="T:Zhaord.Collections.TreeNode`1" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Collections" />
        <type api="T:Zhaord.Collections.TreeNode`1" ref="true" />
      </containers>
      <file name="1c62d982-8be1-dd76-63ad-a5a6273ded11" />
    </api>
    <api id="N:Zhaord.Configuration">
      <topicdata group="api" />
      <apidata name="Zhaord.Configuration" group="namespace" />
      <elements>
        <element api="T:Zhaord.Configuration.ISettings" />
        <element api="T:Zhaord.Configuration.JsonPersistAttribute" />
      </elements>
      <file name="3a1d05c4-9363-1c89-f003-54b30275f293" />
    </api>
    <api id="T:Zhaord.Configuration.ISettings">
      <topicdata group="api" />
      <apidata name="ISettings" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Configuration" />
      </containers>
      <file name="08481e5f-e17f-f132-e4f0-63989c3c9885" />
    </api>
    <api id="T:Zhaord.Configuration.JsonPersistAttribute">
      <topicdata group="api" />
      <apidata name="JsonPersistAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Configuration.JsonPersistAttribute.#ctor" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Configuration" />
      </containers>
      <file name="f510ce7e-9072-b8d6-f103-4cfafcad2869" />
    </api>
    <api id="Methods.T:Zhaord.Configuration.JsonPersistAttribute">
      <topicdata name="JsonPersistAttribute" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Configuration.JsonPersistAttribute" />
      <apidata name="JsonPersistAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Configuration" />
        <type api="T:Zhaord.Configuration.JsonPersistAttribute" />
      </containers>
      <file name="dd7420ad-d5c2-b861-61cc-10e95f8e5c12" />
    </api>
    <api id="Properties.T:Zhaord.Configuration.JsonPersistAttribute">
      <topicdata name="JsonPersistAttribute" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Configuration.JsonPersistAttribute" />
      <apidata name="JsonPersistAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Configuration" />
        <type api="T:Zhaord.Configuration.JsonPersistAttribute" />
      </containers>
      <file name="d088a8fe-beb7-d868-e909-8c83a548c8e0" />
    </api>
    <api id="M:Zhaord.Configuration.JsonPersistAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Configuration" />
        <type api="T:Zhaord.Configuration.JsonPersistAttribute" ref="true" />
      </containers>
      <file name="cbb3f513-74fe-cd70-4354-f759926bf22d" />
    </api>
    <api id="N:Zhaord.Data">
      <topicdata group="api" />
      <apidata name="Zhaord.Data" group="namespace" />
      <elements>
        <element api="T:Zhaord.Data.DataSettings" />
        <element api="T:Zhaord.Data.IActivatable" />
        <element api="T:Zhaord.Data.ISoftDeletable" />
      </elements>
      <file name="9bade90b-3da5-01ce-5c3a-e16695b42a79" />
    </api>
    <api id="T:Zhaord.Data.DataSettings">
      <topicdata group="api" />
      <apidata name="DataSettings" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="P:Zhaord.Data.DataSettings.AppVersion" />
        <element api="P:Zhaord.Data.DataSettings.Current" />
        <element api="M:Zhaord.Data.DataSettings.DatabaseIsInstalled" />
        <element api="P:Zhaord.Data.DataSettings.DataConnectionString" />
        <element api="P:Zhaord.Data.DataSettings.DataProvider" />
        <element api="M:Zhaord.Data.DataSettings.Delete" />
        <element api="F:Zhaord.Data.DataSettings.FileName" />
        <element api="P:Zhaord.Data.DataSettings.IsSqlServer" />
        <element api="M:Zhaord.Data.DataSettings.IsValid" />
        <element api="M:Zhaord.Data.DataSettings.Load" />
        <element api="M:Zhaord.Data.DataSettings.ParseSettings(System.String)" />
        <element api="P:Zhaord.Data.DataSettings.ProviderFriendlyName" />
        <element api="P:Zhaord.Data.DataSettings.ProviderInvariantName" />
        <element api="P:Zhaord.Data.DataSettings.RawDataSettings" />
        <element api="M:Zhaord.Data.DataSettings.Reload" />
        <element api="M:Zhaord.Data.DataSettings.Reset" />
        <element api="M:Zhaord.Data.DataSettings.Save" />
        <element api="F:Zhaord.Data.DataSettings.Separator" />
        <element api="M:Zhaord.Data.DataSettings.SerializeSettings" />
        <element api="M:Zhaord.Data.DataSettings.SetDefaultFactory(System.Func{Zhaord.Data.DataSettings})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data" />
      </containers>
      <file name="9171861a-1a6a-5fd8-f180-f1be2a78303a" />
    </api>
    <api id="Methods.T:Zhaord.Data.DataSettings">
      <topicdata name="DataSettings" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Data.DataSettings" />
      <apidata name="DataSettings" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.DataSettings.DatabaseIsInstalled" />
        <element api="M:Zhaord.Data.DataSettings.Delete" />
        <element api="M:Zhaord.Data.DataSettings.IsValid" />
        <element api="M:Zhaord.Data.DataSettings.Load" />
        <element api="M:Zhaord.Data.DataSettings.ParseSettings(System.String)" />
        <element api="M:Zhaord.Data.DataSettings.Reload" />
        <element api="M:Zhaord.Data.DataSettings.Reset" />
        <element api="M:Zhaord.Data.DataSettings.Save" />
        <element api="M:Zhaord.Data.DataSettings.SerializeSettings" />
        <element api="M:Zhaord.Data.DataSettings.SetDefaultFactory(System.Func{Zhaord.Data.DataSettings})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" />
      </containers>
      <file name="a17fcbbf-f136-a79d-8f47-2a9619dd4484" />
    </api>
    <api id="Properties.T:Zhaord.Data.DataSettings">
      <topicdata name="DataSettings" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Data.DataSettings" />
      <apidata name="DataSettings" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Zhaord.Data.DataSettings.AppVersion" />
        <element api="P:Zhaord.Data.DataSettings.Current" />
        <element api="P:Zhaord.Data.DataSettings.DataConnectionString" />
        <element api="P:Zhaord.Data.DataSettings.DataProvider" />
        <element api="P:Zhaord.Data.DataSettings.IsSqlServer" />
        <element api="P:Zhaord.Data.DataSettings.ProviderFriendlyName" />
        <element api="P:Zhaord.Data.DataSettings.ProviderInvariantName" />
        <element api="P:Zhaord.Data.DataSettings.RawDataSettings" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" />
      </containers>
      <file name="02250368-25be-a87f-6c24-8cb4ab35ccf8" />
    </api>
    <api id="Fields.T:Zhaord.Data.DataSettings">
      <topicdata name="DataSettings" group="list" subgroup="Fields" typeTopicId="T:Zhaord.Data.DataSettings" />
      <apidata name="DataSettings" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Zhaord.Data.DataSettings.FileName" />
        <element api="F:Zhaord.Data.DataSettings.Separator" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" />
      </containers>
      <file name="525a02e9-11ab-596f-9a84-2602f5fde768" />
    </api>
    <api id="P:Zhaord.Data.DataSettings.AppVersion">
      <topicdata group="api" />
      <apidata name="AppVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AppVersion" />
      <setter name="set_AppVersion" />
      <returns>
        <type api="T:System.Version" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
      <file name="d37c96a9-1395-4ea3-cbfc-f7d496234456" />
    </api>
    <api id="P:Zhaord.Data.DataSettings.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
      <file name="7ec90893-75b9-2482-168e-15c311924fda" />
    </api>
    <api id="M:Zhaord.Data.DataSettings.DatabaseIsInstalled">
      <topicdata group="api" />
      <apidata name="DatabaseIsInstalled" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
      <file name="f55da666-1020-14b8-06d7-facb0f52449d" />
    </api>
    <api id="P:Zhaord.Data.DataSettings.DataConnectionString">
      <topicdata group="api" />
      <apidata name="DataConnectionString" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DataConnectionString" />
      <setter name="set_DataConnectionString" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
      <file name="6a668dce-65e4-4abf-810e-e5f8abab3769" />
    </api>
    <api id="P:Zhaord.Data.DataSettings.DataProvider">
      <topicdata group="api" />
      <apidata name="DataProvider" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DataProvider" />
      <setter name="set_DataProvider" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
      <file name="4529aa96-cfd8-0cea-b347-ba03b3de4645" />
    </api>
    <api id="M:Zhaord.Data.DataSettings.Delete">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
      <file name="bd28a199-1519-99bf-702b-0b66354e2d65" />
    </api>
    <api id="F:Zhaord.Data.DataSettings.FileName">
      <topicdata group="api" />
      <apidata name="FileName" group="member" subgroup="field" />
      <memberdata visibility="family" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>Settings.txt</value>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
      <file name="91dd8373-408d-d710-8169-fe57c14a8125" />
    </api>
    <api id="P:Zhaord.Data.DataSettings.IsSqlServer">
      <topicdata group="api" />
      <apidata name="IsSqlServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsSqlServer" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
      <file name="ce58c141-8785-e359-166f-0d80da7857f8" />
    </api>
    <api id="M:Zhaord.Data.DataSettings.IsValid">
      <topicdata group="api" />
      <apidata name="IsValid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
      <file name="869b81fe-7cce-696a-ec03-7e02f877efd6" />
    </api>
    <api id="M:Zhaord.Data.DataSettings.Load">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
      <file name="9693a5da-ee7e-dd7a-db87-5b79b0868892" />
    </api>
    <api id="M:Zhaord.Data.DataSettings.ParseSettings(System.String)">
      <topicdata group="api" />
      <apidata name="ParseSettings" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
      <file name="8727b7a1-ad08-1fee-7f87-9daaf55dfdc1" />
    </api>
    <api id="P:Zhaord.Data.DataSettings.ProviderFriendlyName">
      <topicdata group="api" />
      <apidata name="ProviderFriendlyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProviderFriendlyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
      <file name="c6614bb3-11a1-5844-21df-1446d265bcfd" />
    </api>
    <api id="P:Zhaord.Data.DataSettings.ProviderInvariantName">
      <topicdata group="api" />
      <apidata name="ProviderInvariantName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProviderInvariantName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
      <file name="3ab0b71c-a49e-6872-1166-edcff7bfbd35" />
    </api>
    <api id="P:Zhaord.Data.DataSettings.RawDataSettings">
      <topicdata group="api" />
      <apidata name="RawDataSettings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RawDataSettings" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
      <file name="a7ad3a93-ef65-e8af-137f-96465b59b06c" />
    </api>
    <api id="M:Zhaord.Data.DataSettings.Reload">
      <topicdata group="api" />
      <apidata name="Reload" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
      <file name="0cedbbbc-cbe7-10c7-214e-a7f2e8bff173" />
    </api>
    <api id="M:Zhaord.Data.DataSettings.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
      <file name="ea4626ca-6c90-9c76-cb33-8f90512601b9" />
    </api>
    <api id="M:Zhaord.Data.DataSettings.Save">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
      <file name="e0a74027-d7b4-ac53-d47e-dd43de3e6db0" />
    </api>
    <api id="F:Zhaord.Data.DataSettings.Separator">
      <topicdata group="api" />
      <apidata name="Separator" group="member" subgroup="field" />
      <memberdata visibility="family" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <value>:</value>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
      <file name="4660b6f7-b47c-3ce3-896a-ab16abed1cc9" />
    </api>
    <api id="M:Zhaord.Data.DataSettings.SerializeSettings">
      <topicdata group="api" />
      <apidata name="SerializeSettings" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
      <file name="e033de92-3c1f-8415-d60b-99786e5eea67" />
    </api>
    <api id="M:Zhaord.Data.DataSettings.SetDefaultFactory(System.Func{Zhaord.Data.DataSettings})">
      <topicdata group="api" />
      <apidata name="SetDefaultFactory" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="factory">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <type api="T:Zhaord.Data.DataSettings" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.DataSettings" ref="true" />
      </containers>
      <file name="50a9346a-8d92-2789-0a39-d1c6efc0c266" />
    </api>
    <api id="T:Zhaord.Data.IActivatable">
      <topicdata group="api" />
      <apidata name="IActivatable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.Data.IActivatable.IsActive" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data" />
      </containers>
      <file name="d9c309ec-284a-1315-1f5f-0496ca4120b3" />
    </api>
    <api id="Properties.T:Zhaord.Data.IActivatable">
      <topicdata name="IActivatable" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Data.IActivatable" />
      <apidata name="IActivatable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.Data.IActivatable.IsActive" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.IActivatable" />
      </containers>
      <file name="ce59da7f-7296-1a8b-46a2-33c92a9bdb5d" />
    </api>
    <api id="P:Zhaord.Data.IActivatable.IsActive">
      <topicdata group="api" />
      <apidata name="IsActive" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsActive" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.IActivatable" ref="true" />
      </containers>
      <file name="d032b55b-b265-71e3-ed2f-9ac1a2553183" />
    </api>
    <api id="T:Zhaord.Data.ISoftDeletable">
      <topicdata group="api" />
      <apidata name="ISoftDeletable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.Data.ISoftDeletable.Deleted" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data" />
      </containers>
      <file name="be03db2c-aff9-8b41-6bc7-4a082b9c07e6" />
    </api>
    <api id="Properties.T:Zhaord.Data.ISoftDeletable">
      <topicdata name="ISoftDeletable" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Data.ISoftDeletable" />
      <apidata name="ISoftDeletable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.Data.ISoftDeletable.Deleted" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.ISoftDeletable" />
      </containers>
      <file name="3de7df60-db59-a5f8-84e0-f7081a2307ac" />
    </api>
    <api id="P:Zhaord.Data.ISoftDeletable.Deleted">
      <topicdata group="api" />
      <apidata name="Deleted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Deleted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data" />
        <type api="T:Zhaord.Data.ISoftDeletable" ref="true" />
      </containers>
      <file name="ee49fadd-1cc5-cf6f-46b2-60d66fd576b6" />
    </api>
    <api id="N:Zhaord.Data.Notifies">
      <topicdata group="api" />
      <apidata name="Zhaord.Data.Notifies" group="namespace" />
      <elements>
        <element api="T:Zhaord.Data.Notifies.INotifier" />
        <element api="T:Zhaord.Data.Notifies.NotifierExtension" />
        <element api="T:Zhaord.Data.Notifies.Notifier" />
        <element api="T:Zhaord.Data.Notifies.NotifyEntry" />
        <element api="T:Zhaord.Data.Notifies.NotifyType" />
      </elements>
      <file name="1ad315fe-000e-0108-831b-79bd5d9eb9bf" />
    </api>
    <api id="T:Zhaord.Data.Notifies.INotifier">
      <topicdata group="api" />
      <apidata name="INotifier" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:Zhaord.Data.Notifies.Notifier" ref="true" />
      </implementors>
      <elements>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Information(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" source="extension">
          <apidata name="Information" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="message">
              <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
            </parameter>
            <parameter name="durable" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Data.Notifies" />
            <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Success(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" source="extension">
          <apidata name="Success" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="message">
              <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
            </parameter>
            <parameter name="durable" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Data.Notifies" />
            <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Warning(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" source="extension">
          <apidata name="Warning" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="message">
              <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
            </parameter>
            <parameter name="durable" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Data.Notifies" />
            <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Error(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" source="extension">
          <apidata name="Error" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="message">
              <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
            </parameter>
            <parameter name="durable" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Data.Notifies" />
            <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.INotifier.Add(Zhaord.Data.Notifies.NotifyType,Zhaord.Localization.LocalizedString,System.Boolean)" />
        <element api="P:Zhaord.Data.Notifies.INotifier.Entries" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
      </containers>
      <file name="fdc35d4f-aff6-05f4-a4be-8a9fdbfc43a8" />
    </api>
    <api id="Methods.T:Zhaord.Data.Notifies.INotifier">
      <topicdata name="INotifier" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Data.Notifies.INotifier" />
      <apidata name="INotifier" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Information(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" source="extension">
          <apidata name="Information" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="message">
              <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
            </parameter>
            <parameter name="durable" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Data.Notifies" />
            <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Success(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" source="extension">
          <apidata name="Success" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="message">
              <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
            </parameter>
            <parameter name="durable" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Data.Notifies" />
            <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Warning(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" source="extension">
          <apidata name="Warning" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="message">
              <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
            </parameter>
            <parameter name="durable" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Data.Notifies" />
            <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Error(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" source="extension">
          <apidata name="Error" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="message">
              <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
            </parameter>
            <parameter name="durable" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Data.Notifies" />
            <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.INotifier.Add(Zhaord.Data.Notifies.NotifyType,Zhaord.Localization.LocalizedString,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.INotifier" />
      </containers>
      <file name="46252b7b-c6f7-992d-5869-5e624ccf03db" />
    </api>
    <api id="Properties.T:Zhaord.Data.Notifies.INotifier">
      <topicdata name="INotifier" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Data.Notifies.INotifier" />
      <apidata name="INotifier" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.Data.Notifies.INotifier.Entries" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.INotifier" />
      </containers>
      <file name="de9105fd-0b38-ff22-933e-5ac7b63c2e32" />
    </api>
    <api id="M:Zhaord.Data.Notifies.INotifier.Add(Zhaord.Data.Notifies.NotifyType,Zhaord.Localization.LocalizedString,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="type">
          <type api="T:Zhaord.Data.Notifies.NotifyType" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
        </parameter>
        <parameter name="durable" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.INotifier" ref="true" />
      </containers>
      <file name="78ba316b-b646-c829-1d1e-f1723cac3b5c" />
    </api>
    <api id="P:Zhaord.Data.Notifies.INotifier.Entries">
      <topicdata group="api" />
      <apidata name="Entries" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Entries" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Zhaord.Data.Notifies.NotifyEntry" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.INotifier" ref="true" />
      </containers>
      <file name="deac6d79-709b-5017-6141-f8ff1c8ddef0" />
    </api>
    <api id="T:Zhaord.Data.Notifies.Notifier">
      <topicdata group="api" />
      <apidata name="Notifier" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Zhaord.Data.Notifies.INotifier" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Information(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" source="extension">
          <apidata name="Information" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="message">
              <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
            </parameter>
            <parameter name="durable" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Data.Notifies" />
            <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Success(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" source="extension">
          <apidata name="Success" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="message">
              <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
            </parameter>
            <parameter name="durable" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Data.Notifies" />
            <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Warning(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" source="extension">
          <apidata name="Warning" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="message">
              <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
            </parameter>
            <parameter name="durable" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Data.Notifies" />
            <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Error(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" source="extension">
          <apidata name="Error" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="message">
              <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
            </parameter>
            <parameter name="durable" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Data.Notifies" />
            <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.Notifier.#ctor" />
        <element api="M:Zhaord.Data.Notifies.Notifier.Add(Zhaord.Data.Notifies.NotifyType,Zhaord.Localization.LocalizedString,System.Boolean)" />
        <element api="P:Zhaord.Data.Notifies.Notifier.Entries" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
      </containers>
      <file name="d7180c03-9333-f065-5d2a-2e1c945e7bf1" />
    </api>
    <api id="Methods.T:Zhaord.Data.Notifies.Notifier">
      <topicdata name="Notifier" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Data.Notifies.Notifier" />
      <apidata name="Notifier" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Information(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" source="extension">
          <apidata name="Information" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="message">
              <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
            </parameter>
            <parameter name="durable" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Data.Notifies" />
            <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Success(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" source="extension">
          <apidata name="Success" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="message">
              <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
            </parameter>
            <parameter name="durable" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Data.Notifies" />
            <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Warning(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" source="extension">
          <apidata name="Warning" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="message">
              <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
            </parameter>
            <parameter name="durable" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Data.Notifies" />
            <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Error(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" source="extension">
          <apidata name="Error" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="message">
              <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
            </parameter>
            <parameter name="durable" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Data.Notifies" />
            <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.Notifier.Add(Zhaord.Data.Notifies.NotifyType,Zhaord.Localization.LocalizedString,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.Notifier" />
      </containers>
      <file name="0beb141e-26ab-62ea-0f43-4211ed314f8e" />
    </api>
    <api id="Properties.T:Zhaord.Data.Notifies.Notifier">
      <topicdata name="Notifier" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Data.Notifies.Notifier" />
      <apidata name="Notifier" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Zhaord.Data.Notifies.Notifier.Entries" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.Notifier" />
      </containers>
      <file name="59298d90-dddc-ca9c-b19f-cfe58f669219" />
    </api>
    <api id="M:Zhaord.Data.Notifies.Notifier.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.Notifier" ref="true" />
      </containers>
      <file name="9ee01365-68fc-47fe-a846-34884f343f04" />
    </api>
    <api id="M:Zhaord.Data.Notifies.Notifier.Add(Zhaord.Data.Notifies.NotifyType,Zhaord.Localization.LocalizedString,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="type">
          <type api="T:Zhaord.Data.Notifies.NotifyType" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
        </parameter>
        <parameter name="durable" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Zhaord.Data.Notifies.INotifier.Add(Zhaord.Data.Notifies.NotifyType,Zhaord.Localization.LocalizedString,System.Boolean)">
          <type api="T:Zhaord.Data.Notifies.INotifier" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.Notifier" ref="true" />
      </containers>
      <file name="3c59805c-3d5c-f4ac-b908-8014a5413a6c" />
    </api>
    <api id="P:Zhaord.Data.Notifies.Notifier.Entries">
      <topicdata group="api" />
      <apidata name="Entries" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Entries" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Zhaord.Data.Notifies.NotifyEntry" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:Zhaord.Data.Notifies.INotifier.Entries">
          <type api="T:Zhaord.Data.Notifies.INotifier" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.Notifier" ref="true" />
      </containers>
      <file name="e1b14aea-115a-5d1f-a6bc-07e0f1f5e511" />
    </api>
    <api id="T:Zhaord.Data.Notifies.NotifierExtension">
      <topicdata group="api" />
      <apidata name="NotifierExtension" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Error(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" />
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Information(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" />
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Success(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" />
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Warning(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="df960049-671d-8107-c056-3a0a644074a4" />
    </api>
    <api id="Methods.T:Zhaord.Data.Notifies.NotifierExtension">
      <topicdata name="NotifierExtension" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Data.Notifies.NotifierExtension" />
      <apidata name="NotifierExtension" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Error(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" />
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Information(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" />
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Success(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" />
        <element api="M:Zhaord.Data.Notifies.NotifierExtension.Warning(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.NotifierExtension" />
      </containers>
      <file name="663f0a38-cbd5-0f72-46f8-1182ef983e80" />
    </api>
    <api id="M:Zhaord.Data.Notifies.NotifierExtension.Error(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Error" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="notifier">
          <type api="T:Zhaord.Data.Notifies.INotifier" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
        </parameter>
        <parameter name="durable" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="0a0c09ce-042b-64cf-61b4-9d777bd97a5b" />
    </api>
    <api id="M:Zhaord.Data.Notifies.NotifierExtension.Information(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Information" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="notifier">
          <type api="T:Zhaord.Data.Notifies.INotifier" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
        </parameter>
        <parameter name="durable" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="e7bb1a06-ed8f-9763-5d85-df6cebd4c62c" />
    </api>
    <api id="M:Zhaord.Data.Notifies.NotifierExtension.Success(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Success" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="notifier">
          <type api="T:Zhaord.Data.Notifies.INotifier" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
        </parameter>
        <parameter name="durable" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="a5f43db1-115e-383e-d25e-a3ee1b151796" />
    </api>
    <api id="M:Zhaord.Data.Notifies.NotifierExtension.Warning(Zhaord.Data.Notifies.INotifier,Zhaord.Localization.LocalizedString,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Warning" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="notifier">
          <type api="T:Zhaord.Data.Notifies.INotifier" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
        </parameter>
        <parameter name="durable" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.NotifierExtension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="7f460b45-92cc-bea2-5a7d-09e069fb4f73" />
    </api>
    <api id="T:Zhaord.Data.Notifies.NotifyEntry">
      <topicdata group="api" />
      <apidata name="NotifyEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Zhaord.ComparableObject`1" ref="true">
            <specialization>
              <type api="T:Zhaord.Data.Notifies.NotifyEntry" ref="true" />
            </specialization>
          </type>
          <type api="T:Zhaord.ComparableObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Zhaord.Data.Notifies.NotifyEntry.Equals">
          <element api="M:Zhaord.ComparableObject.Equals(System.Object)" />
          <element api="M:Zhaord.ComparableObject`1.Equals(`0)" />
        </element>
        <element api="M:Zhaord.ComparableObject.GetHashCode" />
        <element api="M:Zhaord.ComparableObject.GetSignatureProperties" />
        <element api="M:Zhaord.ComparableObject.GetSignaturePropertiesCore" />
        <element api="M:Zhaord.ComparableObject.GetTypeUnproxied" />
        <element api="M:Zhaord.ComparableObject.HasSameSignatureAs(Zhaord.ComparableObject)" />
        <element api="Overload:Zhaord.Data.Notifies.NotifyEntry.RegisterSignatureProperty">
          <element api="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.Reflection.PropertyInfo)" />
          <element api="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.String)" />
          <element api="M:Zhaord.ComparableObject`1.RegisterSignatureProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Data.Notifies.NotifyEntry.#ctor" />
        <element api="P:Zhaord.Data.Notifies.NotifyEntry.Durable" />
        <element api="P:Zhaord.Data.Notifies.NotifyEntry.Message" />
        <element api="P:Zhaord.Data.Notifies.NotifyEntry.Type" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
      </containers>
      <file name="28bdb556-e28e-2e02-380a-3114e2a7da1f" />
    </api>
    <api id="Methods.T:Zhaord.Data.Notifies.NotifyEntry">
      <topicdata name="NotifyEntry" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Data.Notifies.NotifyEntry" />
      <apidata name="NotifyEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="Overload:Zhaord.Data.Notifies.NotifyEntry.Equals">
          <element api="M:Zhaord.ComparableObject.Equals(System.Object)" />
          <element api="M:Zhaord.ComparableObject`1.Equals(`0)" />
        </element>
        <element api="M:Zhaord.ComparableObject.GetHashCode" />
        <element api="M:Zhaord.ComparableObject.GetSignatureProperties" />
        <element api="M:Zhaord.ComparableObject.GetSignaturePropertiesCore" />
        <element api="M:Zhaord.ComparableObject.GetTypeUnproxied" />
        <element api="M:Zhaord.ComparableObject.HasSameSignatureAs(Zhaord.ComparableObject)" />
        <element api="Overload:Zhaord.Data.Notifies.NotifyEntry.RegisterSignatureProperty">
          <element api="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.Reflection.PropertyInfo)" />
          <element api="M:Zhaord.ComparableObject.RegisterSignatureProperty(System.String)" />
          <element api="M:Zhaord.ComparableObject`1.RegisterSignatureProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.NotifyEntry" />
      </containers>
      <file name="1c5a9fc8-3525-37ae-db9a-2b74107a703f" />
    </api>
    <api id="Properties.T:Zhaord.Data.Notifies.NotifyEntry">
      <topicdata name="NotifyEntry" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Data.Notifies.NotifyEntry" />
      <apidata name="NotifyEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:Zhaord.Data.Notifies.NotifyEntry.Durable" />
        <element api="P:Zhaord.Data.Notifies.NotifyEntry.Message" />
        <element api="P:Zhaord.Data.Notifies.NotifyEntry.Type" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.NotifyEntry" />
      </containers>
      <file name="2a030595-b63a-135c-e909-2e078d8498be" />
    </api>
    <api id="M:Zhaord.Data.Notifies.NotifyEntry.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.NotifyEntry" ref="true" />
      </containers>
      <file name="7a73153b-b0cd-7140-1421-da0e997b5a0b" />
    </api>
    <api id="P:Zhaord.Data.Notifies.NotifyEntry.Durable">
      <topicdata group="api" />
      <apidata name="Durable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Durable" />
      <setter name="set_Durable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.NotifyEntry" ref="true" />
      </containers>
      <file name="cdc5d95b-5de7-9ac4-fd46-7d87d5eb88cd" />
    </api>
    <api id="P:Zhaord.Data.Notifies.NotifyEntry.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Message" />
      <setter name="set_Message" />
      <returns>
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.NotifyEntry" ref="true" />
      </containers>
      <file name="4f0fcc8f-8042-26d8-5c22-0351fb64ed10" />
    </api>
    <api id="P:Zhaord.Data.Notifies.NotifyEntry.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:Zhaord.Data.Notifies.NotifyType" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.NotifyEntry" ref="true" />
      </containers>
      <file name="e61b7207-62fc-f702-e4fd-541ed9e4b00f" />
    </api>
    <api id="T:Zhaord.Data.Notifies.NotifyType">
      <topicdata group="api" />
      <apidata name="NotifyType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Zhaord.Data.Notifies.NotifyType.Info" />
        <element api="F:Zhaord.Data.Notifies.NotifyType.Success" />
        <element api="F:Zhaord.Data.Notifies.NotifyType.Warning" />
        <element api="F:Zhaord.Data.Notifies.NotifyType.Error" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
      </containers>
      <file name="50e55da6-d08f-a72e-8c4e-fb46353b7229" />
    </api>
    <api id="F:Zhaord.Data.Notifies.NotifyType.Error">
      <topicdata group="api" notopic="" />
      <apidata name="Error" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Zhaord.Data.Notifies.NotifyType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.NotifyType" ref="false" />
      </containers>
      <file name="3a185640-f5fc-a42f-8209-8c9dd981428a" />
    </api>
    <api id="F:Zhaord.Data.Notifies.NotifyType.Info">
      <topicdata group="api" notopic="" />
      <apidata name="Info" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Zhaord.Data.Notifies.NotifyType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.NotifyType" ref="false" />
      </containers>
      <file name="42972241-8ee6-59e9-8942-e98331567e4e" />
    </api>
    <api id="F:Zhaord.Data.Notifies.NotifyType.Success">
      <topicdata group="api" notopic="" />
      <apidata name="Success" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Zhaord.Data.Notifies.NotifyType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.NotifyType" ref="false" />
      </containers>
      <file name="fba9f359-9e41-f7ba-a2c5-f435eebe147e" />
    </api>
    <api id="F:Zhaord.Data.Notifies.NotifyType.Warning">
      <topicdata group="api" notopic="" />
      <apidata name="Warning" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Zhaord.Data.Notifies.NotifyType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Data.Notifies" />
        <type api="T:Zhaord.Data.Notifies.NotifyType" ref="false" />
      </containers>
      <file name="dd5eed13-3d71-30ad-e0b8-7e84b32626ab" />
    </api>
    <api id="N:Zhaord.DependencyManagement">
      <topicdata group="api" />
      <apidata name="Zhaord.DependencyManagement" group="namespace" />
      <elements>
        <element api="T:Zhaord.DependencyManagement.ContainerManager" />
        <element api="T:Zhaord.DependencyManagement.ContainerManagerExtensions" />
        <element api="T:Zhaord.DependencyManagement.IDependencyRegistrar" />
      </elements>
      <file name="155b2f8d-be62-8773-e63b-b5765ab8725e" />
    </api>
    <api id="T:Zhaord.DependencyManagement.ContainerManager">
      <topicdata group="api" />
      <apidata name="ContainerManager" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.DependencyManagement.ContainerManager.#ctor(Autofac.IContainer)" />
        <element api="P:Zhaord.DependencyManagement.ContainerManager.Container" />
        <element api="M:Zhaord.DependencyManagement.ContainerManager.InjectProperties``1(``0,Autofac.ILifetimeScope)" />
        <element api="M:Zhaord.DependencyManagement.ContainerManager.InjectUnsetProperties``1(``0,Autofac.ILifetimeScope)" />
        <element api="M:Zhaord.DependencyManagement.ContainerManager.IsRegistered(System.Type,Autofac.ILifetimeScope)" />
        <element api="Overload:Zhaord.DependencyManagement.ContainerManager.Resolve">
          <element api="M:Zhaord.DependencyManagement.ContainerManager.Resolve``1(System.String,Autofac.ILifetimeScope)" />
          <element api="M:Zhaord.DependencyManagement.ContainerManager.Resolve(System.Type,Autofac.ILifetimeScope)" />
        </element>
        <element api="M:Zhaord.DependencyManagement.ContainerManager.ResolveAll``1(System.String,Autofac.ILifetimeScope)" />
        <element api="Overload:Zhaord.DependencyManagement.ContainerManager.ResolveNamed">
          <element api="M:Zhaord.DependencyManagement.ContainerManager.ResolveNamed``1(System.String,Autofac.ILifetimeScope)" />
          <element api="M:Zhaord.DependencyManagement.ContainerManager.ResolveNamed(System.String,System.Type,Autofac.ILifetimeScope)" />
        </element>
        <element api="M:Zhaord.DependencyManagement.ContainerManager.ResolveOptional(System.Type,Autofac.ILifetimeScope)" />
        <element api="Overload:Zhaord.DependencyManagement.ContainerManager.ResolveUnregistered">
          <element api="M:Zhaord.DependencyManagement.ContainerManager.ResolveUnregistered``1(Autofac.ILifetimeScope)" />
          <element api="M:Zhaord.DependencyManagement.ContainerManager.ResolveUnregistered(System.Type,Autofac.ILifetimeScope)" />
        </element>
        <element api="M:Zhaord.DependencyManagement.ContainerManager.Scope" />
        <element api="Overload:Zhaord.DependencyManagement.ContainerManager.TryResolve">
          <element api="M:Zhaord.DependencyManagement.ContainerManager.TryResolve``1(Autofac.ILifetimeScope,``0@)" />
          <element api="M:Zhaord.DependencyManagement.ContainerManager.TryResolve(System.Type,Autofac.ILifetimeScope,System.Object@)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
      </containers>
      <file name="38e3dacf-48ab-d63a-3dbc-6d13ecc6758b" />
    </api>
    <api id="Methods.T:Zhaord.DependencyManagement.ContainerManager">
      <topicdata name="ContainerManager" group="list" subgroup="Methods" typeTopicId="T:Zhaord.DependencyManagement.ContainerManager" />
      <apidata name="ContainerManager" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.DependencyManagement.ContainerManager.InjectProperties``1(``0,Autofac.ILifetimeScope)" />
        <element api="M:Zhaord.DependencyManagement.ContainerManager.InjectUnsetProperties``1(``0,Autofac.ILifetimeScope)" />
        <element api="M:Zhaord.DependencyManagement.ContainerManager.IsRegistered(System.Type,Autofac.ILifetimeScope)" />
        <element api="Overload:Zhaord.DependencyManagement.ContainerManager.Resolve">
          <element api="M:Zhaord.DependencyManagement.ContainerManager.Resolve``1(System.String,Autofac.ILifetimeScope)" />
          <element api="M:Zhaord.DependencyManagement.ContainerManager.Resolve(System.Type,Autofac.ILifetimeScope)" />
        </element>
        <element api="M:Zhaord.DependencyManagement.ContainerManager.ResolveAll``1(System.String,Autofac.ILifetimeScope)" />
        <element api="Overload:Zhaord.DependencyManagement.ContainerManager.ResolveNamed">
          <element api="M:Zhaord.DependencyManagement.ContainerManager.ResolveNamed``1(System.String,Autofac.ILifetimeScope)" />
          <element api="M:Zhaord.DependencyManagement.ContainerManager.ResolveNamed(System.String,System.Type,Autofac.ILifetimeScope)" />
        </element>
        <element api="M:Zhaord.DependencyManagement.ContainerManager.ResolveOptional(System.Type,Autofac.ILifetimeScope)" />
        <element api="Overload:Zhaord.DependencyManagement.ContainerManager.ResolveUnregistered">
          <element api="M:Zhaord.DependencyManagement.ContainerManager.ResolveUnregistered``1(Autofac.ILifetimeScope)" />
          <element api="M:Zhaord.DependencyManagement.ContainerManager.ResolveUnregistered(System.Type,Autofac.ILifetimeScope)" />
        </element>
        <element api="M:Zhaord.DependencyManagement.ContainerManager.Scope" />
        <element api="Overload:Zhaord.DependencyManagement.ContainerManager.TryResolve">
          <element api="M:Zhaord.DependencyManagement.ContainerManager.TryResolve``1(Autofac.ILifetimeScope,``0@)" />
          <element api="M:Zhaord.DependencyManagement.ContainerManager.TryResolve(System.Type,Autofac.ILifetimeScope,System.Object@)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" />
      </containers>
      <file name="2e4d659a-caa5-dd58-9301-c8fac2a3c1ba" />
    </api>
    <api id="Properties.T:Zhaord.DependencyManagement.ContainerManager">
      <topicdata name="ContainerManager" group="list" subgroup="Properties" typeTopicId="T:Zhaord.DependencyManagement.ContainerManager" />
      <apidata name="ContainerManager" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.DependencyManagement.ContainerManager.Container" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" />
      </containers>
      <file name="de93fae1-a965-5169-0ecb-a1046dcdbec2" />
    </api>
    <api id="Overload:Zhaord.DependencyManagement.ContainerManager.Resolve">
      <topicdata name="Resolve" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.DependencyManagement.ContainerManager.Resolve``1(System.String,Autofac.ILifetimeScope)" />
        <element api="M:Zhaord.DependencyManagement.ContainerManager.Resolve(System.Type,Autofac.ILifetimeScope)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
      <file name="2097f073-ff3d-1d0a-6506-84ca279b42dd" />
    </api>
    <api id="Overload:Zhaord.DependencyManagement.ContainerManager.ResolveNamed">
      <topicdata name="ResolveNamed" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ResolveNamed" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.DependencyManagement.ContainerManager.ResolveNamed``1(System.String,Autofac.ILifetimeScope)" />
        <element api="M:Zhaord.DependencyManagement.ContainerManager.ResolveNamed(System.String,System.Type,Autofac.ILifetimeScope)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
      <file name="58b28226-394d-b709-05bd-31426da22452" />
    </api>
    <api id="Overload:Zhaord.DependencyManagement.ContainerManager.ResolveUnregistered">
      <topicdata name="ResolveUnregistered" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ResolveUnregistered" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.DependencyManagement.ContainerManager.ResolveUnregistered``1(Autofac.ILifetimeScope)" />
        <element api="M:Zhaord.DependencyManagement.ContainerManager.ResolveUnregistered(System.Type,Autofac.ILifetimeScope)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
      <file name="6b547bc3-c92e-60db-90c2-86517f11bfe5" />
    </api>
    <api id="Overload:Zhaord.DependencyManagement.ContainerManager.TryResolve">
      <topicdata name="TryResolve" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="TryResolve" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.DependencyManagement.ContainerManager.TryResolve``1(Autofac.ILifetimeScope,``0@)" />
        <element api="M:Zhaord.DependencyManagement.ContainerManager.TryResolve(System.Type,Autofac.ILifetimeScope,System.Object@)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
      <file name="894103b3-b4fe-9b26-027a-a8ef6119e42d" />
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManager.#ctor(Autofac.IContainer)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="container">
          <type api="T:Autofac.IContainer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
      <file name="e31a5310-db13-5740-0f53-3a134f9123cf" />
    </api>
    <api id="P:Zhaord.DependencyManagement.ContainerManager.Container">
      <topicdata group="api" />
      <apidata name="Container" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Container" />
      <returns>
        <type api="T:Autofac.IContainer" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
      <file name="4f24faf7-4001-b389-962f-f84c9fedffa8" />
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManager.InjectProperties``1(``0,Autofac.ILifetimeScope)">
      <topicdata group="api" />
      <apidata name="InjectProperties" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="instance">
          <template name="T" index="0" api="M:Zhaord.DependencyManagement.ContainerManager.InjectProperties``1(``0,Autofac.ILifetimeScope)" />
        </parameter>
        <parameter name="scope" optional="true">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.DependencyManagement.ContainerManager.InjectProperties``1(``0,Autofac.ILifetimeScope)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
      <file name="26497cb8-d849-9bc1-4bf3-1a29e8e3d245" />
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManager.InjectUnsetProperties``1(``0,Autofac.ILifetimeScope)">
      <topicdata group="api" />
      <apidata name="InjectUnsetProperties" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="instance">
          <template name="T" index="0" api="M:Zhaord.DependencyManagement.ContainerManager.InjectUnsetProperties``1(``0,Autofac.ILifetimeScope)" />
        </parameter>
        <parameter name="scope" optional="true">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.DependencyManagement.ContainerManager.InjectUnsetProperties``1(``0,Autofac.ILifetimeScope)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
      <file name="fbad1ca9-8aef-3f86-5889-e855fddea8f4" />
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManager.IsRegistered(System.Type,Autofac.ILifetimeScope)">
      <topicdata group="api" />
      <apidata name="IsRegistered" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="scope" optional="true">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
      <file name="59cfcbfb-ec96-c8c1-12da-41c3bacd3d01" />
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManager.Resolve``1(System.String,Autofac.ILifetimeScope)">
      <topicdata group="api" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.DependencyManagement.ContainerManager.Resolve" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="key" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
        <parameter name="scope" optional="true">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.DependencyManagement.ContainerManager.Resolve``1(System.String,Autofac.ILifetimeScope)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
      <file name="7d9f6822-a198-e56f-6a4d-a9dff49d79a0" />
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManager.Resolve(System.Type,Autofac.ILifetimeScope)">
      <topicdata group="api" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.DependencyManagement.ContainerManager.Resolve" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="scope" optional="true">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
      <file name="0692a0cb-ed83-8394-26bd-02e80e2e9924" />
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManager.ResolveAll``1(System.String,Autofac.ILifetimeScope)">
      <topicdata group="api" />
      <apidata name="ResolveAll" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="key" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
        <parameter name="scope" optional="true">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <template name="T" index="0" api="M:Zhaord.DependencyManagement.ContainerManager.ResolveAll``1(System.String,Autofac.ILifetimeScope)" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
      <file name="c74b9611-78ba-5e14-5fa1-62943aa857fa" />
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManager.ResolveNamed``1(System.String,Autofac.ILifetimeScope)">
      <topicdata group="api" />
      <apidata name="ResolveNamed" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.DependencyManagement.ContainerManager.ResolveNamed" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="scope" optional="true">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.DependencyManagement.ContainerManager.ResolveNamed``1(System.String,Autofac.ILifetimeScope)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
      <file name="2a48b8cf-136c-37f2-ea8d-8bc41cb9cfbb" />
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManager.ResolveNamed(System.String,System.Type,Autofac.ILifetimeScope)">
      <topicdata group="api" />
      <apidata name="ResolveNamed" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.DependencyManagement.ContainerManager.ResolveNamed" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="scope" optional="true">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
      <file name="ab07411a-4b97-73dc-f29e-d1733fb37685" />
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManager.ResolveOptional(System.Type,Autofac.ILifetimeScope)">
      <topicdata group="api" />
      <apidata name="ResolveOptional" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="scope" optional="true">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
      <file name="3ebf3cac-ab9b-e45a-e0e4-72d474deb499" />
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManager.ResolveUnregistered``1(Autofac.ILifetimeScope)">
      <topicdata group="api" />
      <apidata name="ResolveUnregistered" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.DependencyManagement.ContainerManager.ResolveUnregistered" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="scope" optional="true">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.DependencyManagement.ContainerManager.ResolveUnregistered``1(Autofac.ILifetimeScope)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
      <file name="915aee2a-c856-6604-9852-b7af5ca539ac" />
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManager.ResolveUnregistered(System.Type,Autofac.ILifetimeScope)">
      <topicdata group="api" />
      <apidata name="ResolveUnregistered" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.DependencyManagement.ContainerManager.ResolveUnregistered" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="scope" optional="true">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
      <file name="65ae7950-c4ab-aa7e-8fb7-090a845f39e3" />
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManager.Scope">
      <topicdata group="api" />
      <apidata name="Scope" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Autofac.ILifetimeScope" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
      <file name="c00634b2-3bc4-e555-189e-ec3f48a19ef5" />
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManager.TryResolve``1(Autofac.ILifetimeScope,``0@)">
      <topicdata group="api" />
      <apidata name="TryResolve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.DependencyManagement.ContainerManager.TryResolve" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="scope">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
        </parameter>
        <parameter name="instance" out="true">
          <referenceTo>
            <template name="T" index="0" api="M:Zhaord.DependencyManagement.ContainerManager.TryResolve``1(Autofac.ILifetimeScope,``0@)" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
      <file name="7ad7e905-e4de-238a-54ea-baf541fac955" />
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManager.TryResolve(System.Type,Autofac.ILifetimeScope,System.Object@)">
      <topicdata group="api" />
      <apidata name="TryResolve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.DependencyManagement.ContainerManager.TryResolve" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="scope">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
        </parameter>
        <parameter name="instance" out="true">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </containers>
      <file name="c4709780-f0a3-674d-267a-782f423bdf47" />
    </api>
    <api id="T:Zhaord.DependencyManagement.ContainerManagerExtensions">
      <topicdata group="api" />
      <apidata name="ContainerManagerExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithAspNetCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
        <element api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithNullCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
        <element api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithStaticCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="77e69172-f39b-6ff0-a330-c4d0e3905287" />
    </api>
    <api id="Methods.T:Zhaord.DependencyManagement.ContainerManagerExtensions">
      <topicdata name="ContainerManagerExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.DependencyManagement.ContainerManagerExtensions" />
      <apidata name="ContainerManagerExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithAspNetCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
        <element api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithNullCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
        <element api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithStaticCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManagerExtensions" />
      </containers>
      <file name="05cc4518-63ec-ff31-1e4c-6e2fcecd954a" />
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithAspNetCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})">
      <topicdata group="api" />
      <apidata name="WithAspNetCache" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TLimit" />
        <template name="TReflectionActivatorData">
          <constrained>
            <type api="T:Autofac.Builder.ReflectionActivatorData" ref="true" />
          </constrained>
        </template>
        <template name="TStyle" />
      </templates>
      <parameters>
        <parameter name="registration">
          <type api="T:Autofac.Builder.IRegistrationBuilder`3" ref="true">
            <specialization>
              <template name="TLimit" index="0" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithAspNetCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
              <template name="TReflectionActivatorData" index="1" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithAspNetCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
              <template name="TStyle" index="2" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithAspNetCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Autofac.Builder.IRegistrationBuilder`3" ref="true">
          <specialization>
            <template name="TLimit" index="0" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithAspNetCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
            <template name="TReflectionActivatorData" index="1" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithAspNetCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
            <template name="TStyle" index="2" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithAspNetCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManagerExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="96358216-b910-c5c3-3e21-e1323f388ca4" />
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithNullCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})">
      <topicdata group="api" />
      <apidata name="WithNullCache" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TLimit" />
        <template name="TReflectionActivatorData">
          <constrained>
            <type api="T:Autofac.Builder.ReflectionActivatorData" ref="true" />
          </constrained>
        </template>
        <template name="TStyle" />
      </templates>
      <parameters>
        <parameter name="registration">
          <type api="T:Autofac.Builder.IRegistrationBuilder`3" ref="true">
            <specialization>
              <template name="TLimit" index="0" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithNullCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
              <template name="TReflectionActivatorData" index="1" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithNullCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
              <template name="TStyle" index="2" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithNullCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Autofac.Builder.IRegistrationBuilder`3" ref="true">
          <specialization>
            <template name="TLimit" index="0" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithNullCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
            <template name="TReflectionActivatorData" index="1" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithNullCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
            <template name="TStyle" index="2" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithNullCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManagerExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="e3ded38b-496a-9060-cf7c-2be6697ea3ee" />
    </api>
    <api id="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithStaticCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})">
      <topicdata group="api" />
      <apidata name="WithStaticCache" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TLimit" />
        <template name="TReflectionActivatorData">
          <constrained>
            <type api="T:Autofac.Builder.ReflectionActivatorData" ref="true" />
          </constrained>
        </template>
        <template name="TStyle" />
      </templates>
      <parameters>
        <parameter name="registration">
          <type api="T:Autofac.Builder.IRegistrationBuilder`3" ref="true">
            <specialization>
              <template name="TLimit" index="0" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithStaticCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
              <template name="TReflectionActivatorData" index="1" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithStaticCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
              <template name="TStyle" index="2" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithStaticCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Autofac.Builder.IRegistrationBuilder`3" ref="true">
          <specialization>
            <template name="TLimit" index="0" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithStaticCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
            <template name="TReflectionActivatorData" index="1" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithStaticCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
            <template name="TStyle" index="2" api="M:Zhaord.DependencyManagement.ContainerManagerExtensions.WithStaticCache``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.ContainerManagerExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="a31e7f9f-d80d-fbd3-3347-317e349e3c09" />
    </api>
    <api id="T:Zhaord.DependencyManagement.IDependencyRegistrar">
      <topicdata group="api" />
      <apidata name="IDependencyRegistrar" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.DependencyManagement.IDependencyRegistrar.Order" />
        <element api="M:Zhaord.DependencyManagement.IDependencyRegistrar.Register(Autofac.ContainerBuilder,Zhaord.TypeFinders.ITypeFinder,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
      </containers>
      <file name="bd71687a-0614-174b-4376-8fb57eb40e67" />
    </api>
    <api id="Methods.T:Zhaord.DependencyManagement.IDependencyRegistrar">
      <topicdata name="IDependencyRegistrar" group="list" subgroup="Methods" typeTopicId="T:Zhaord.DependencyManagement.IDependencyRegistrar" />
      <apidata name="IDependencyRegistrar" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.DependencyManagement.IDependencyRegistrar.Register(Autofac.ContainerBuilder,Zhaord.TypeFinders.ITypeFinder,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.IDependencyRegistrar" />
      </containers>
      <file name="9e1bb876-0298-1954-ef29-d59a2dd761ee" />
    </api>
    <api id="Properties.T:Zhaord.DependencyManagement.IDependencyRegistrar">
      <topicdata name="IDependencyRegistrar" group="list" subgroup="Properties" typeTopicId="T:Zhaord.DependencyManagement.IDependencyRegistrar" />
      <apidata name="IDependencyRegistrar" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.DependencyManagement.IDependencyRegistrar.Order" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.IDependencyRegistrar" />
      </containers>
      <file name="29bb6c83-abeb-622f-04f6-6e20e3e4653c" />
    </api>
    <api id="P:Zhaord.DependencyManagement.IDependencyRegistrar.Order">
      <topicdata group="api" />
      <apidata name="Order" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Order" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.IDependencyRegistrar" ref="true" />
      </containers>
      <file name="b72e7073-503e-a027-2264-8e7247ba422b" />
    </api>
    <api id="M:Zhaord.DependencyManagement.IDependencyRegistrar.Register(Autofac.ContainerBuilder,Zhaord.TypeFinders.ITypeFinder,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="builder">
          <type api="T:Autofac.ContainerBuilder" ref="true" />
        </parameter>
        <parameter name="typeFinder">
          <type api="T:Zhaord.TypeFinders.ITypeFinder" ref="true" />
        </parameter>
        <parameter name="isActiveModule">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.DependencyManagement" />
        <type api="T:Zhaord.DependencyManagement.IDependencyRegistrar" ref="true" />
      </containers>
      <file name="dbd37af7-a293-cbf5-c209-3f3e2c696298" />
    </api>
    <api id="N:Zhaord.Engines">
      <topicdata group="api" />
      <apidata name="Zhaord.Engines" group="namespace" />
      <elements>
        <element api="T:Zhaord.Engines.EngineContext" />
        <element api="T:Zhaord.Engines.IEngine" />
        <element api="T:Zhaord.Engines.Engine" />
      </elements>
      <file name="9918ea93-fba7-c82e-b1fe-22d15436e87b" />
    </api>
    <api id="T:Zhaord.Engines.Engine">
      <topicdata group="api" />
      <apidata name="Engine" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Zhaord.Engines.IEngine" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Engines.Engine.#ctor" />
        <element api="P:Zhaord.Engines.Engine.Container" />
        <element api="P:Zhaord.Engines.Engine.ContainerManager" />
        <element api="M:Zhaord.Engines.Engine.CreateDependencyResolver(Autofac.IContainer)" />
        <element api="M:Zhaord.Engines.Engine.CreateTypeFinder" />
        <element api="M:Zhaord.Engines.Engine.Initialize" />
        <element api="M:Zhaord.Engines.Engine.RegisterDependencies" />
        <element api="Overload:Zhaord.Engines.Engine.Resolve">
          <element api="M:Zhaord.Engines.Engine.Resolve``1(System.String)" />
          <element api="M:Zhaord.Engines.Engine.Resolve(System.Type,System.String)" />
        </element>
        <element api="M:Zhaord.Engines.Engine.ResolveAll``1" />
        <element api="M:Zhaord.Engines.Engine.RunStartupTasks" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Engines" />
      </containers>
      <file name="941010aa-adb7-257e-9065-4caa958804e1" />
    </api>
    <api id="Methods.T:Zhaord.Engines.Engine">
      <topicdata name="Engine" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Engines.Engine" />
      <apidata name="Engine" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Engines.Engine.CreateDependencyResolver(Autofac.IContainer)" />
        <element api="M:Zhaord.Engines.Engine.CreateTypeFinder" />
        <element api="M:Zhaord.Engines.Engine.Initialize" />
        <element api="M:Zhaord.Engines.Engine.RegisterDependencies" />
        <element api="Overload:Zhaord.Engines.Engine.Resolve">
          <element api="M:Zhaord.Engines.Engine.Resolve``1(System.String)" />
          <element api="M:Zhaord.Engines.Engine.Resolve(System.Type,System.String)" />
        </element>
        <element api="M:Zhaord.Engines.Engine.ResolveAll``1" />
        <element api="M:Zhaord.Engines.Engine.RunStartupTasks" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.Engine" />
      </containers>
      <file name="38a2972b-c952-01bd-71e1-b835fc28de32" />
    </api>
    <api id="Properties.T:Zhaord.Engines.Engine">
      <topicdata name="Engine" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Engines.Engine" />
      <apidata name="Engine" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.Engines.Engine.Container" />
        <element api="P:Zhaord.Engines.Engine.ContainerManager" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.Engine" />
      </containers>
      <file name="9a0f7305-ac71-e10c-3c36-5fb8df020100" />
    </api>
    <api id="Overload:Zhaord.Engines.Engine.Resolve">
      <topicdata name="Resolve" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Engines.Engine.Resolve``1(System.String)" />
        <element api="M:Zhaord.Engines.Engine.Resolve(System.Type,System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.Engine" ref="true" />
      </containers>
      <file name="d441c875-3d13-6e10-54af-8cae6f5c81a4" />
    </api>
    <api id="M:Zhaord.Engines.Engine.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.Engine" ref="true" />
      </containers>
      <file name="13aed595-658a-efcd-4836-4da283086cae" />
    </api>
    <api id="P:Zhaord.Engines.Engine.Container">
      <topicdata group="api" />
      <apidata name="Container" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Container" />
      <returns>
        <type api="T:Autofac.IContainer" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.Engine" ref="true" />
      </containers>
      <file name="22c60cc4-c12e-7831-5ae4-9956f629fe5c" />
    </api>
    <api id="P:Zhaord.Engines.Engine.ContainerManager">
      <topicdata group="api" />
      <apidata name="ContainerManager" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ContainerManager" />
      <returns>
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </returns>
      <implements>
        <member api="P:Zhaord.Engines.IEngine.ContainerManager">
          <type api="T:Zhaord.Engines.IEngine" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.Engine" ref="true" />
      </containers>
      <file name="4545a34f-25cc-48c8-4e69-04ee674bc5b4" />
    </api>
    <api id="M:Zhaord.Engines.Engine.CreateDependencyResolver(Autofac.IContainer)">
      <topicdata group="api" />
      <apidata name="CreateDependencyResolver" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="container">
          <type api="T:Autofac.IContainer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.Engine" ref="true" />
      </containers>
      <file name="557c1f7a-5aab-12ed-4c0e-8251e34fb71f" />
    </api>
    <api id="M:Zhaord.Engines.Engine.CreateTypeFinder">
      <topicdata group="api" />
      <apidata name="CreateTypeFinder" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:Zhaord.TypeFinders.ITypeFinder" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.Engine" ref="true" />
      </containers>
      <file name="6fd45366-b91f-ebd1-2473-512f9826c92c" />
    </api>
    <api id="M:Zhaord.Engines.Engine.Initialize">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:Zhaord.Engines.IEngine.Initialize">
          <type api="T:Zhaord.Engines.IEngine" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.Engine" ref="true" />
      </containers>
      <file name="b0cf2127-78fc-16c7-64c2-2388816d8c87" />
    </api>
    <api id="M:Zhaord.Engines.Engine.RegisterDependencies">
      <topicdata group="api" />
      <apidata name="RegisterDependencies" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.Engine" ref="true" />
      </containers>
      <file name="aa2e29f4-ac13-9c4f-88b3-31c6d9554231" />
    </api>
    <api id="M:Zhaord.Engines.Engine.Resolve``1(System.String)">
      <topicdata group="api" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.Engines.Engine.Resolve" />
      <proceduredata virtual="true" final="true" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="name" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Engines.Engine.Resolve``1(System.String)" />
      </returns>
      <implements>
        <member api="M:Zhaord.Engines.IEngine.Resolve``1(System.String)">
          <type api="T:Zhaord.Engines.IEngine" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.Engine" ref="true" />
      </containers>
      <file name="b1a53776-d505-0562-4a87-ff3d8ede2a9d" />
    </api>
    <api id="M:Zhaord.Engines.Engine.Resolve(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.Engines.Engine.Resolve" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="name" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:Zhaord.Engines.IEngine.Resolve(System.Type,System.String)">
          <type api="T:Zhaord.Engines.IEngine" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.Engine" ref="true" />
      </containers>
      <file name="de64b5b5-e3bc-f7ab-1337-e58798a26e80" />
    </api>
    <api id="M:Zhaord.Engines.Engine.ResolveAll``1">
      <topicdata group="api" />
      <apidata name="ResolveAll" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <arrayOf rank="1">
          <template name="T" index="0" api="M:Zhaord.Engines.Engine.ResolveAll``1" />
        </arrayOf>
      </returns>
      <implements>
        <member api="M:Zhaord.Engines.IEngine.ResolveAll``1">
          <type api="T:Zhaord.Engines.IEngine" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.Engine" ref="true" />
      </containers>
      <file name="d0795939-77fb-5e13-6629-1fbadd551e30" />
    </api>
    <api id="M:Zhaord.Engines.Engine.RunStartupTasks">
      <topicdata group="api" />
      <apidata name="RunStartupTasks" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.Engine" ref="true" />
      </containers>
      <file name="12220ba0-7e92-4ae5-079e-44692eb56c79" />
    </api>
    <api id="T:Zhaord.Engines.EngineContext">
      <topicdata group="api" />
      <apidata name="EngineContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Engines.EngineContext.#ctor" />
        <element api="M:Zhaord.Engines.EngineContext.CreateEngineInstance" />
        <element api="P:Zhaord.Engines.EngineContext.Current" />
        <element api="M:Zhaord.Engines.EngineContext.Initialize(System.Boolean,Zhaord.Engines.IEngine)" />
        <element api="M:Zhaord.Engines.EngineContext.Replace(Zhaord.Engines.IEngine)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Engines" />
      </containers>
      <file name="a8d7768a-6fc6-7747-0d95-dab44447e186" />
    </api>
    <api id="Methods.T:Zhaord.Engines.EngineContext">
      <topicdata name="EngineContext" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Engines.EngineContext" />
      <apidata name="EngineContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Engines.EngineContext.CreateEngineInstance" />
        <element api="M:Zhaord.Engines.EngineContext.Initialize(System.Boolean,Zhaord.Engines.IEngine)" />
        <element api="M:Zhaord.Engines.EngineContext.Replace(Zhaord.Engines.IEngine)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.EngineContext" />
      </containers>
      <file name="f8aa5263-611e-166b-2c2d-7fcfb0570443" />
    </api>
    <api id="Properties.T:Zhaord.Engines.EngineContext">
      <topicdata name="EngineContext" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Engines.EngineContext" />
      <apidata name="EngineContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Zhaord.Engines.EngineContext.Current" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.EngineContext" />
      </containers>
      <file name="f4e09672-de31-07a4-2338-ef4f13e6e9c1" />
    </api>
    <api id="M:Zhaord.Engines.EngineContext.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.EngineContext" ref="true" />
      </containers>
      <file name="f062d5cb-b252-194a-07f3-f8efb23563fa" />
    </api>
    <api id="M:Zhaord.Engines.EngineContext.CreateEngineInstance">
      <topicdata group="api" />
      <apidata name="CreateEngineInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Zhaord.Engines.IEngine" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.EngineContext" ref="true" />
      </containers>
      <file name="885b0a6e-339f-5704-a921-526aebc757ea" />
    </api>
    <api id="P:Zhaord.Engines.EngineContext.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:Zhaord.Engines.IEngine" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.EngineContext" ref="true" />
      </containers>
      <file name="a4b56b6c-df40-dc37-7a6e-f5a346dabaef" />
    </api>
    <api id="M:Zhaord.Engines.EngineContext.Initialize(System.Boolean,Zhaord.Engines.IEngine)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="forceRecreate">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="engine" optional="true">
          <type api="T:Zhaord.Engines.IEngine" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Zhaord.Engines.IEngine" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.EngineContext" ref="true" />
      </containers>
      <file name="9df925a3-b1f2-356a-0ab5-69988bbe7d52" />
    </api>
    <api id="M:Zhaord.Engines.EngineContext.Replace(Zhaord.Engines.IEngine)">
      <topicdata group="api" />
      <apidata name="Replace" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="engine">
          <type api="T:Zhaord.Engines.IEngine" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.EngineContext" ref="true" />
      </containers>
      <file name="7a21e487-805a-2d16-31cf-12f1631aee75" />
    </api>
    <api id="T:Zhaord.Engines.IEngine">
      <topicdata group="api" />
      <apidata name="IEngine" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:Zhaord.Engines.Engine" ref="true" />
      </implementors>
      <elements>
        <element api="P:Zhaord.Engines.IEngine.ContainerManager" />
        <element api="M:Zhaord.Engines.IEngine.Initialize" />
        <element api="Overload:Zhaord.Engines.IEngine.Resolve">
          <element api="M:Zhaord.Engines.IEngine.Resolve``1(System.String)" />
          <element api="M:Zhaord.Engines.IEngine.Resolve(System.Type,System.String)" />
        </element>
        <element api="M:Zhaord.Engines.IEngine.ResolveAll``1" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Engines" />
      </containers>
      <file name="e5300c48-ce28-34c9-f1da-d26bc0ade8bd" />
    </api>
    <api id="Methods.T:Zhaord.Engines.IEngine">
      <topicdata name="IEngine" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Engines.IEngine" />
      <apidata name="IEngine" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Engines.IEngine.Initialize" />
        <element api="Overload:Zhaord.Engines.IEngine.Resolve">
          <element api="M:Zhaord.Engines.IEngine.Resolve``1(System.String)" />
          <element api="M:Zhaord.Engines.IEngine.Resolve(System.Type,System.String)" />
        </element>
        <element api="M:Zhaord.Engines.IEngine.ResolveAll``1" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.IEngine" />
      </containers>
      <file name="f9fd1f32-af92-9e4a-7f8e-a1ff9b4dcfd0" />
    </api>
    <api id="Properties.T:Zhaord.Engines.IEngine">
      <topicdata name="IEngine" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Engines.IEngine" />
      <apidata name="IEngine" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.Engines.IEngine.ContainerManager" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.IEngine" />
      </containers>
      <file name="2ecc9e69-4c32-48e5-58cd-60a25179f340" />
    </api>
    <api id="Overload:Zhaord.Engines.IEngine.Resolve">
      <topicdata name="Resolve" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Engines.IEngine.Resolve``1(System.String)" />
        <element api="M:Zhaord.Engines.IEngine.Resolve(System.Type,System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.IEngine" ref="true" />
      </containers>
      <file name="cb7dbdd2-7daf-d50a-fd33-7ee2b6286048" />
    </api>
    <api id="P:Zhaord.Engines.IEngine.ContainerManager">
      <topicdata group="api" />
      <apidata name="ContainerManager" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ContainerManager" />
      <returns>
        <type api="T:Zhaord.DependencyManagement.ContainerManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.IEngine" ref="true" />
      </containers>
      <file name="9f07458c-419f-2ef6-922f-50b1d421f649" />
    </api>
    <api id="M:Zhaord.Engines.IEngine.Initialize">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.IEngine" ref="true" />
      </containers>
      <file name="29f3436c-57b6-152b-0c1d-5fd64dffcd21" />
    </api>
    <api id="M:Zhaord.Engines.IEngine.Resolve``1(System.String)">
      <topicdata group="api" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.Engines.IEngine.Resolve" />
      <proceduredata abstract="true" virtual="true" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="name" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Engines.IEngine.Resolve``1(System.String)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.IEngine" ref="true" />
      </containers>
      <file name="4ac827e9-a6e3-da89-f1fc-65ebb2805f0a" />
    </api>
    <api id="M:Zhaord.Engines.IEngine.Resolve(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.Engines.IEngine.Resolve" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="name" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.IEngine" ref="true" />
      </containers>
      <file name="f46c70b8-f1ac-6979-8190-0ee9159bd1ff" />
    </api>
    <api id="M:Zhaord.Engines.IEngine.ResolveAll``1">
      <topicdata group="api" />
      <apidata name="ResolveAll" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <arrayOf rank="1">
          <template name="T" index="0" api="M:Zhaord.Engines.IEngine.ResolveAll``1" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Engines" />
        <type api="T:Zhaord.Engines.IEngine" ref="true" />
      </containers>
      <file name="a670bb05-fd70-b62e-2c70-df021e1798d0" />
    </api>
    <api id="N:Zhaord.Expressions">
      <topicdata group="api" />
      <apidata name="Zhaord.Expressions" group="namespace" />
      <elements>
        <element api="T:Zhaord.Expressions.RegularExpressions" />
      </elements>
      <file name="8e00aa82-2366-ad9f-0278-afb6aa4b97e0" />
    </api>
    <api id="T:Zhaord.Expressions.RegularExpressions">
      <topicdata group="api" />
      <apidata name="RegularExpressions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:Zhaord.Expressions.RegularExpressions.IsAlpha" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsAlphaNumeric" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsBase64Guid" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsBic" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsCultureCode" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsEmail" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsGuid" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsIban" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsNotNumber" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsNumeric" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsPositiveInteger" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsWebUrl" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsYearRange" />
        <element api="F:Zhaord.Expressions.RegularExpressions.RemoveHtml" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Expressions" />
      </containers>
      <file name="11bed04c-1699-9fdc-e0bf-71f214bc9d5f" />
    </api>
    <api id="Fields.T:Zhaord.Expressions.RegularExpressions">
      <topicdata name="RegularExpressions" group="list" subgroup="Fields" typeTopicId="T:Zhaord.Expressions.RegularExpressions" />
      <apidata name="RegularExpressions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:Zhaord.Expressions.RegularExpressions.IsAlpha" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsAlphaNumeric" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsBase64Guid" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsBic" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsCultureCode" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsEmail" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsGuid" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsIban" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsNotNumber" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsNumeric" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsPositiveInteger" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsWebUrl" />
        <element api="F:Zhaord.Expressions.RegularExpressions.IsYearRange" />
        <element api="F:Zhaord.Expressions.RegularExpressions.RemoveHtml" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Expressions" />
        <type api="T:Zhaord.Expressions.RegularExpressions" />
      </containers>
      <file name="3678c2dc-3e89-ca89-78ea-d794ed92cefe" />
    </api>
    <api id="F:Zhaord.Expressions.RegularExpressions.IsAlpha">
      <topicdata group="api" />
      <apidata name="IsAlpha" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Expressions" />
        <type api="T:Zhaord.Expressions.RegularExpressions" ref="true" />
      </containers>
      <file name="f703cdca-dff1-74df-9e8a-c2aad1a16e94" />
    </api>
    <api id="F:Zhaord.Expressions.RegularExpressions.IsAlphaNumeric">
      <topicdata group="api" />
      <apidata name="IsAlphaNumeric" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Expressions" />
        <type api="T:Zhaord.Expressions.RegularExpressions" ref="true" />
      </containers>
      <file name="250dfdf0-eb8a-f6e4-a35f-009c2f34f7db" />
    </api>
    <api id="F:Zhaord.Expressions.RegularExpressions.IsBase64Guid">
      <topicdata group="api" />
      <apidata name="IsBase64Guid" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Expressions" />
        <type api="T:Zhaord.Expressions.RegularExpressions" ref="true" />
      </containers>
      <file name="6db7056b-4212-9815-75da-2260fd28c372" />
    </api>
    <api id="F:Zhaord.Expressions.RegularExpressions.IsBic">
      <topicdata group="api" />
      <apidata name="IsBic" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Expressions" />
        <type api="T:Zhaord.Expressions.RegularExpressions" ref="true" />
      </containers>
      <file name="b18edb00-932f-188d-15dc-5b02ce0ac2ed" />
    </api>
    <api id="F:Zhaord.Expressions.RegularExpressions.IsCultureCode">
      <topicdata group="api" />
      <apidata name="IsCultureCode" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Expressions" />
        <type api="T:Zhaord.Expressions.RegularExpressions" ref="true" />
      </containers>
      <file name="f4d87ad4-4f91-6b9e-80a7-5678fc09ce13" />
    </api>
    <api id="F:Zhaord.Expressions.RegularExpressions.IsEmail">
      <topicdata group="api" />
      <apidata name="IsEmail" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Expressions" />
        <type api="T:Zhaord.Expressions.RegularExpressions" ref="true" />
      </containers>
      <file name="47db3636-891a-4480-cbf2-e1e31123fe87" />
    </api>
    <api id="F:Zhaord.Expressions.RegularExpressions.IsGuid">
      <topicdata group="api" />
      <apidata name="IsGuid" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Expressions" />
        <type api="T:Zhaord.Expressions.RegularExpressions" ref="true" />
      </containers>
      <file name="78b89b02-f591-2235-8926-25c125464ad8" />
    </api>
    <api id="F:Zhaord.Expressions.RegularExpressions.IsIban">
      <topicdata group="api" />
      <apidata name="IsIban" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Expressions" />
        <type api="T:Zhaord.Expressions.RegularExpressions" ref="true" />
      </containers>
      <file name="71ad9299-4396-6c77-e61b-45161db848f1" />
    </api>
    <api id="F:Zhaord.Expressions.RegularExpressions.IsNotNumber">
      <topicdata group="api" />
      <apidata name="IsNotNumber" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Expressions" />
        <type api="T:Zhaord.Expressions.RegularExpressions" ref="true" />
      </containers>
      <file name="930f83a0-ecd0-a15c-37cd-97ea1f1b62cd" />
    </api>
    <api id="F:Zhaord.Expressions.RegularExpressions.IsNumeric">
      <topicdata group="api" />
      <apidata name="IsNumeric" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Expressions" />
        <type api="T:Zhaord.Expressions.RegularExpressions" ref="true" />
      </containers>
      <file name="df1503ac-6149-c7f7-7f77-be93f2e2b071" />
    </api>
    <api id="F:Zhaord.Expressions.RegularExpressions.IsPositiveInteger">
      <topicdata group="api" />
      <apidata name="IsPositiveInteger" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Expressions" />
        <type api="T:Zhaord.Expressions.RegularExpressions" ref="true" />
      </containers>
      <file name="1bee642e-cbcb-3dfc-6d0b-3ff1b46faa5c" />
    </api>
    <api id="F:Zhaord.Expressions.RegularExpressions.IsWebUrl">
      <topicdata group="api" />
      <apidata name="IsWebUrl" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Expressions" />
        <type api="T:Zhaord.Expressions.RegularExpressions" ref="true" />
      </containers>
      <file name="12dfcf3a-b515-b2a1-d8ab-791818779442" />
    </api>
    <api id="F:Zhaord.Expressions.RegularExpressions.IsYearRange">
      <topicdata group="api" />
      <apidata name="IsYearRange" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Expressions" />
        <type api="T:Zhaord.Expressions.RegularExpressions" ref="true" />
      </containers>
      <file name="84580e12-f449-4f30-7314-5e2c9740890d" />
    </api>
    <api id="F:Zhaord.Expressions.RegularExpressions.RemoveHtml">
      <topicdata group="api" />
      <apidata name="RemoveHtml" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Expressions" />
        <type api="T:Zhaord.Expressions.RegularExpressions" ref="true" />
      </containers>
      <file name="f90ba453-4cda-28b6-d752-ad1c04c09ee1" />
    </api>
    <api id="N:Zhaord.Extensions">
      <topicdata group="api" />
      <apidata name="Zhaord.Extensions" group="namespace" />
      <elements>
        <element api="T:Zhaord.Extensions.CollectionExtensions" />
        <element api="T:Zhaord.Extensions.ConversionExtensions" />
        <element api="T:Zhaord.Extensions.DateTimeExtensions" />
        <element api="T:Zhaord.Extensions.DecimalExtensions" />
        <element api="T:Zhaord.Extensions.DictionaryExtensions" />
        <element api="T:Zhaord.Extensions.EnumerableExtensions" />
        <element api="T:Zhaord.Extensions.EnumExtensions" />
        <element api="T:Zhaord.Extensions.IoExtensions" />
        <element api="T:Zhaord.Extensions.LinqExtensions" />
        <element api="T:Zhaord.Extensions.ListExtensions" />
        <element api="T:Zhaord.Extensions.MiscExtensions" />
        <element api="T:Zhaord.Extensions.StreamExtensions" />
        <element api="T:Zhaord.Extensions.StringExtensions" />
        <element api="T:Zhaord.Extensions.TypeDescriptorExtensions" />
        <element api="T:Zhaord.Extensions.TypeExtensions" />
        <element api="T:Zhaord.Extensions.XmlNodeExtensions" />
        <element api="T:Zhaord.Extensions.XmlWriterExtensions" />
      </elements>
      <file name="cadecb05-b734-62ae-2acd-1f292c82333a" />
    </api>
    <api id="T:Zhaord.Extensions.CollectionExtensions">
      <topicdata group="api" />
      <apidata name="CollectionExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.Extensions.CollectionExtensions.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:Zhaord.Extensions.CollectionExtensions.EqualsAll``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0})" />
        <element api="M:Zhaord.Extensions.CollectionExtensions.IsNullOrEmpty``1(System.Collections.Generic.ICollection{``0})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="df06b909-befa-f219-4718-74193d97b8cb" />
    </api>
    <api id="Methods.T:Zhaord.Extensions.CollectionExtensions">
      <topicdata name="CollectionExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.CollectionExtensions" />
      <apidata name="CollectionExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Extensions.CollectionExtensions.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:Zhaord.Extensions.CollectionExtensions.EqualsAll``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0})" />
        <element api="M:Zhaord.Extensions.CollectionExtensions.IsNullOrEmpty``1(System.Collections.Generic.ICollection{``0})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.CollectionExtensions" />
      </containers>
      <file name="8b117911-9dfd-438c-31aa-603f192802bf" />
    </api>
    <api id="M:Zhaord.Extensions.CollectionExtensions.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="initial">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.CollectionExtensions.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="other">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.CollectionExtensions.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="3b48506d-c1e8-960c-792d-97c70b84baf8" />
    </api>
    <api id="M:Zhaord.Extensions.CollectionExtensions.EqualsAll``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0})">
      <topicdata group="api" />
      <apidata name="EqualsAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="a">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.CollectionExtensions.EqualsAll``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="b">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.CollectionExtensions.EqualsAll``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="7111738c-15d1-b58f-e445-c397692790a3" />
    </api>
    <api id="M:Zhaord.Extensions.CollectionExtensions.IsNullOrEmpty``1(System.Collections.Generic.ICollection{``0})">
      <topicdata group="api" />
      <apidata name="IsNullOrEmpty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.CollectionExtensions.IsNullOrEmpty``1(System.Collections.Generic.ICollection{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.CollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="cb1d8a26-307c-5731-c6c1-4c1f4a545426" />
    </api>
    <api id="T:Zhaord.Extensions.ConversionExtensions">
      <topicdata group="api" />
      <apidata name="ConversionExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.AsString">
          <element api="M:Zhaord.Extensions.ConversionExtensions.AsString(System.Byte[])" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.AsString(System.IO.Stream)" />
        </element>
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.Convert">
          <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" />
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Hash(System.Byte[],System.Boolean)" />
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToArray">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToArray(System.String)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToArray(System.String,System.Char[])" />
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToBool(System.String,System.Boolean)" />
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToByteArray">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToByteArray(System.IO.Stream)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToByteArray(System.String)" />
        </element>
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToDateTime">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToDateTime(System.String,System.Nullable{System.DateTime})" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToDateTime(System.String,System.String[],System.Nullable{System.DateTime})" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToDateTime(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.Nullable{System.DateTime})" />
        </element>
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToDays">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToDays(System.Double)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToDays(System.Int32)" />
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToEnum``1(System.String,``0)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToFloat(System.String,System.Single)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToGuid(System.String)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToHex(System.Int32)" />
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToHours">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToHours(System.Double)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToHours(System.Int32)" />
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToInt(System.String,System.Int32)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToKb(System.Int32)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToMb(System.Int32)" />
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToMilliseconds">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToMilliseconds(System.Double)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToMilliseconds(System.Int32)" />
        </element>
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToMinutes">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToMinutes(System.Double)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToMinutes(System.Int32)" />
        </element>
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToObject">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToObject(System.Byte[])" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToObject``1(System.Collections.Generic.IDictionary{System.String,System.Object})" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToObject(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type)" />
        </element>
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToSeconds">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToSeconds(System.Double)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToSeconds(System.Int32)" />
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToStream(System.Byte[])" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToVersion(System.String,System.Version)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="0fe73e26-75a7-67f9-a88d-c362cf5f5e19" />
    </api>
    <api id="Methods.T:Zhaord.Extensions.ConversionExtensions">
      <topicdata name="ConversionExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.ConversionExtensions" />
      <apidata name="ConversionExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.AsString">
          <element api="M:Zhaord.Extensions.ConversionExtensions.AsString(System.Byte[])" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.AsString(System.IO.Stream)" />
        </element>
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.Convert">
          <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" />
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Hash(System.Byte[],System.Boolean)" />
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToArray">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToArray(System.String)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToArray(System.String,System.Char[])" />
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToBool(System.String,System.Boolean)" />
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToByteArray">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToByteArray(System.IO.Stream)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToByteArray(System.String)" />
        </element>
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToDateTime">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToDateTime(System.String,System.Nullable{System.DateTime})" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToDateTime(System.String,System.String[],System.Nullable{System.DateTime})" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToDateTime(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.Nullable{System.DateTime})" />
        </element>
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToDays">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToDays(System.Double)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToDays(System.Int32)" />
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToEnum``1(System.String,``0)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToFloat(System.String,System.Single)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToGuid(System.String)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToHex(System.Int32)" />
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToHours">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToHours(System.Double)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToHours(System.Int32)" />
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToInt(System.String,System.Int32)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToKb(System.Int32)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToMb(System.Int32)" />
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToMilliseconds">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToMilliseconds(System.Double)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToMilliseconds(System.Int32)" />
        </element>
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToMinutes">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToMinutes(System.Double)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToMinutes(System.Int32)" />
        </element>
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToObject">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToObject(System.Byte[])" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToObject``1(System.Collections.Generic.IDictionary{System.String,System.Object})" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToObject(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type)" />
        </element>
        <element api="Overload:Zhaord.Extensions.ConversionExtensions.ToSeconds">
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToSeconds(System.Double)" />
          <element api="M:Zhaord.Extensions.ConversionExtensions.ToSeconds(System.Int32)" />
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToStream(System.Byte[])" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToVersion(System.String,System.Version)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" />
      </containers>
      <file name="80bac5e1-1f85-44c3-38eb-e86fc8f061fb" />
    </api>
    <api id="Overload:Zhaord.Extensions.ConversionExtensions.AsString">
      <topicdata name="AsString" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="AsString" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.ConversionExtensions.AsString(System.Byte[])" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.AsString(System.IO.Stream)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <file name="d0d72102-e9d5-f782-900c-2e1097e8062f" />
    </api>
    <api id="Overload:Zhaord.Extensions.ConversionExtensions.Convert">
      <topicdata name="Convert" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Convert" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <file name="d195315e-b35a-7770-0293-712b67ae0ddc" />
    </api>
    <api id="Overload:Zhaord.Extensions.ConversionExtensions.ToArray">
      <topicdata name="ToArray" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ToArray" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToArray(System.String)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToArray(System.String,System.Char[])" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <file name="641af23c-db6f-4e89-58b6-0498c9ed5e04" />
    </api>
    <api id="Overload:Zhaord.Extensions.ConversionExtensions.ToByteArray">
      <topicdata name="ToByteArray" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ToByteArray" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToByteArray(System.IO.Stream)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToByteArray(System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <file name="3669c1ca-1b51-6dbf-861a-0f3c82927d50" />
    </api>
    <api id="Overload:Zhaord.Extensions.ConversionExtensions.ToDateTime">
      <topicdata name="ToDateTime" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ToDateTime" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToDateTime(System.String,System.Nullable{System.DateTime})" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToDateTime(System.String,System.String[],System.Nullable{System.DateTime})" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToDateTime(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.Nullable{System.DateTime})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <file name="0b412df1-58b1-eca2-9699-bfb1143dcb08" />
    </api>
    <api id="Overload:Zhaord.Extensions.ConversionExtensions.ToDays">
      <topicdata name="ToDays" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ToDays" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToDays(System.Double)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToDays(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <file name="0868b1d9-52cb-1f4f-9520-cc49c661c88d" />
    </api>
    <api id="Overload:Zhaord.Extensions.ConversionExtensions.ToHours">
      <topicdata name="ToHours" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ToHours" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToHours(System.Double)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToHours(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <file name="768093df-19cf-72fd-57a3-4c65cadf0818" />
    </api>
    <api id="Overload:Zhaord.Extensions.ConversionExtensions.ToMilliseconds">
      <topicdata name="ToMilliseconds" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ToMilliseconds" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToMilliseconds(System.Double)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToMilliseconds(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <file name="04358b2a-f113-c70b-50b6-cb354fab2e43" />
    </api>
    <api id="Overload:Zhaord.Extensions.ConversionExtensions.ToMinutes">
      <topicdata name="ToMinutes" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ToMinutes" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToMinutes(System.Double)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToMinutes(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <file name="759b5cb8-ea1d-8c61-0c08-208df00a2b9a" />
    </api>
    <api id="Overload:Zhaord.Extensions.ConversionExtensions.ToObject">
      <topicdata name="ToObject" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ToObject" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToObject(System.Byte[])" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToObject``1(System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToObject(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <file name="650afa5d-bcda-d27b-1cf8-39ed34ffe645" />
    </api>
    <api id="Overload:Zhaord.Extensions.ConversionExtensions.ToSeconds">
      <topicdata name="ToSeconds" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ToSeconds" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToSeconds(System.Double)" />
        <element api="M:Zhaord.Extensions.ConversionExtensions.ToSeconds(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <file name="1be8fedd-b837-f864-7212-de3683b85155" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.AsString(System.Byte[])">
      <topicdata group="api" />
      <apidata name="AsString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.AsString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bytes">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="5698752b-e0b1-8d7e-af03-6e5dacc2b671" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.AsString(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="AsString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.AsString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="295c87e1-333a-f39a-661c-7fa051ab6b20" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)">
      <topicdata group="api" />
      <apidata name="Convert" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.Convert" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="94fb9b53-718b-f86c-6b15-a36e5e55b651" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name="Convert" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.Convert" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="9089b229-03f5-3298-d0cd-8f15f8ca9ff6" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="Convert" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.Convert" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="to">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="d99a4411-6e04-180e-5ea6-a9baf45150e0" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name="Convert" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.Convert" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="to">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="9ca96a57-993a-e786-c664-6edb4cbc719d" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.Hash(System.Byte[],System.Boolean)">
      <topicdata group="api" />
      <apidata name="Hash" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="toBase64" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="9a1cb24f-b2c4-c574-fce0-1e4c23f0c0fd" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToArray(System.String)">
      <topicdata group="api" />
      <apidata name="ToArray" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToArray" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="a628419e-84f1-036e-30d4-ee65ff34b209" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToArray(System.String,System.Char[])">
      <topicdata group="api" />
      <apidata name="ToArray" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToArray" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="separator" params="true">
          <arrayOf rank="1">
            <type api="T:System.Char" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="2c6bc839-a913-32a1-3a3a-4dee0a4135c0" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToBool(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="ToBool" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultValue" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="241c513e-2a99-83c1-c770-e020d21fc80a" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToByteArray(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="ToByteArray" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToByteArray" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="7615a3d5-328d-d4f7-bd74-5654e96def93" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToByteArray(System.String)">
      <topicdata group="api" />
      <apidata name="ToByteArray" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToByteArray" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="f0246b03-fcdd-f355-7a7d-77c720ba926c" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToDateTime(System.String,System.Nullable{System.DateTime})">
      <topicdata group="api" />
      <apidata name="ToDateTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToDateTime" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultValue">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="cb47de9a-e90f-43c6-cd15-adeed19130eb" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToDateTime(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.Nullable{System.DateTime})">
      <topicdata group="api" />
      <apidata name="ToDateTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToDateTime" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="formats">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
        <parameter name="styles">
          <type api="T:System.Globalization.DateTimeStyles" ref="false" />
        </parameter>
        <parameter name="defaultValue">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="0b025116-59a4-04f4-0282-b12fb3213942" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToDateTime(System.String,System.String[],System.Nullable{System.DateTime})">
      <topicdata group="api" />
      <apidata name="ToDateTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToDateTime" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="formats">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="defaultValue">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="1c0d0333-e876-e3f7-9d7b-19a17abeb508" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToDays(System.Double)">
      <topicdata group="api" />
      <apidata name="ToDays" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToDays" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="days">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="9b062614-90b3-ea5b-44da-607f9cf50632" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToDays(System.Int32)">
      <topicdata group="api" />
      <apidata name="ToDays" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToDays" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="days">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="99b47044-c9bc-f6bb-2aff-5912022aaad2" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToEnum``1(System.String,``0)">
      <topicdata group="api" />
      <apidata name="ToEnum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:System.IComparable" ref="true" />
              <type api="T:System.IFormattable" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultValue">
          <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.ToEnum``1(System.String,``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.ToEnum``1(System.String,``0)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="ab83203c-324c-d161-6751-19f325fa6b6f" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToFloat(System.String,System.Single)">
      <topicdata group="api" />
      <apidata name="ToFloat" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultValue" optional="true">
          <type api="T:System.Single" ref="false" />
          <argument>
            <type api="T:System.Single" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="483f3de4-a2be-21df-a684-b43a37871147" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToGuid(System.String)">
      <topicdata group="api" />
      <apidata name="ToGuid" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="2a794e5c-5bd3-8cb4-175f-91070313757d" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToHex(System.Int32)">
      <topicdata group="api" />
      <apidata name="ToHex" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="8750043f-f321-647d-8352-6e014b06312a" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToHours(System.Double)">
      <topicdata group="api" />
      <apidata name="ToHours" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToHours" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="hours">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="462337bd-f927-16b2-bcef-d7396d71b334" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToHours(System.Int32)">
      <topicdata group="api" />
      <apidata name="ToHours" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToHours" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="hours">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="7bf81822-3784-74ba-afa8-8b908a311580" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToInt(System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="ToInt" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultValue" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="92f7c526-6b57-e87b-6ac9-e13b7d9def16" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToKb(System.Int32)">
      <topicdata group="api" />
      <apidata name="ToKb" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="efb984d5-c92b-0e22-80f6-835a5527beaf" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToMb(System.Int32)">
      <topicdata group="api" />
      <apidata name="ToMb" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="fb7d4806-95c6-9394-0279-f61f61d8d14c" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToMilliseconds(System.Double)">
      <topicdata group="api" />
      <apidata name="ToMilliseconds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToMilliseconds" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="milliseconds">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="cdb68062-642d-a628-2234-191703cfacaf" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToMilliseconds(System.Int32)">
      <topicdata group="api" />
      <apidata name="ToMilliseconds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToMilliseconds" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="milliseconds">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="6321cd75-e0be-8328-9f84-7672f1b9b999" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToMinutes(System.Double)">
      <topicdata group="api" />
      <apidata name="ToMinutes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToMinutes" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="minutes">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="a2831bc1-a8a5-8564-5866-ba3f171eff25" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToMinutes(System.Int32)">
      <topicdata group="api" />
      <apidata name="ToMinutes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToMinutes" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="minutes">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="8143b18e-7617-47ca-9546-d5add88dbc49" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToObject(System.Byte[])">
      <topicdata group="api" />
      <apidata name="ToObject" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToObject" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bytes">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="4ee21d4d-267d-afd5-0f6a-5fd662377632" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToObject``1(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <topicdata group="api" />
      <apidata name="ToObject" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToObject" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="values">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.ToObject``1(System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="f9b4d0f5-3682-28a6-bb16-976e7e23ce61" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToObject(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type)">
      <topicdata group="api" />
      <apidata name="ToObject" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToObject" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="values">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="objectType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="c7f2573b-a689-99ae-fe8d-ceb5a6630439" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToSeconds(System.Double)">
      <topicdata group="api" />
      <apidata name="ToSeconds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToSeconds" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="seconds">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="9c206926-f9fc-a1d9-d86b-d0bbbc53da3c" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToSeconds(System.Int32)">
      <topicdata group="api" />
      <apidata name="ToSeconds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ConversionExtensions.ToSeconds" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="seconds">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="04cca3dd-4166-9f96-3d1b-641ede9aa4c2" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToStream(System.Byte[])">
      <topicdata group="api" />
      <apidata name="ToStream" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bytes">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="f8f2a67e-4e66-d463-4c10-29e04428bd41" />
    </api>
    <api id="M:Zhaord.Extensions.ConversionExtensions.ToVersion(System.String,System.Version)">
      <topicdata group="api" />
      <apidata name="ToVersion" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultVersion" optional="true">
          <type api="T:System.Version" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Version" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="ba3dcdc0-1c0b-77f1-e454-85b1cf63bd07" />
    </api>
    <api id="T:Zhaord.Extensions.DateTimeExtensions">
      <topicdata group="api" />
      <apidata name="DateTimeExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Zhaord.Extensions.DateTimeExtensions.AssumeUniversalTime">
          <element api="M:Zhaord.Extensions.DateTimeExtensions.AssumeUniversalTime(System.DateTime)" />
          <element api="M:Zhaord.Extensions.DateTimeExtensions.AssumeUniversalTime(System.Nullable{System.DateTime})" />
        </element>
        <element api="F:Zhaord.Extensions.DateTimeExtensions.BeginOfEpoch" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.FromUnixTime(System.Int64)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetEvenHourDate(System.Nullable{System.DateTime})" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetEvenMinuteDate(System.Nullable{System.DateTime})" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetEvenMinuteDateBefore(System.Nullable{System.DateTime})" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetEvenSecondDate(System.Nullable{System.DateTime})" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetEvenSecondDateBefore(System.Nullable{System.DateTime})" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetFirstDayOfMonth(System.DateTime)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetLastDayOfMonth(System.DateTime)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetLocalOffset(System.DateTime)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetNextGivenMinuteDate(System.Nullable{System.DateTime},System.Int32)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetNextGivenSecondDate(System.Nullable{System.DateTime},System.Int32)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetOffset(System.DateTime,System.TimeZoneInfo)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.IsValid(System.DateTime)" />
        <element api="Overload:Zhaord.Extensions.DateTimeExtensions.ToEndOfTheDay">
          <element api="M:Zhaord.Extensions.DateTimeExtensions.ToEndOfTheDay(System.DateTime)" />
          <element api="M:Zhaord.Extensions.DateTimeExtensions.ToEndOfTheDay(System.Nullable{System.DateTime})" />
        </element>
        <element api="M:Zhaord.Extensions.DateTimeExtensions.ToJavaScriptTicks(System.DateTime)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.ToLocalTime(System.Nullable{System.DateTime})" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.ToSerializationMode(System.DateTimeKind)" />
        <element api="Overload:Zhaord.Extensions.DateTimeExtensions.ToStartOfTheDay">
          <element api="M:Zhaord.Extensions.DateTimeExtensions.ToStartOfTheDay(System.DateTime)" />
          <element api="M:Zhaord.Extensions.DateTimeExtensions.ToStartOfTheDay(System.Nullable{System.DateTime})" />
        </element>
        <element api="M:Zhaord.Extensions.DateTimeExtensions.ToUniversalTime(System.Nullable{System.DateTime})" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.ToUnixTime(System.DateTime)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.TranslateTime(System.DateTime,System.TimeZoneInfo,System.TimeZoneInfo)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.UseDaylightTime(System.TimeZoneInfo)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="99bc0917-0875-8e63-eca7-e47d23dd48e2" />
    </api>
    <api id="Methods.T:Zhaord.Extensions.DateTimeExtensions">
      <topicdata name="DateTimeExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.DateTimeExtensions" />
      <apidata name="DateTimeExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:Zhaord.Extensions.DateTimeExtensions.AssumeUniversalTime">
          <element api="M:Zhaord.Extensions.DateTimeExtensions.AssumeUniversalTime(System.DateTime)" />
          <element api="M:Zhaord.Extensions.DateTimeExtensions.AssumeUniversalTime(System.Nullable{System.DateTime})" />
        </element>
        <element api="M:Zhaord.Extensions.DateTimeExtensions.FromUnixTime(System.Int64)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetEvenHourDate(System.Nullable{System.DateTime})" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetEvenMinuteDate(System.Nullable{System.DateTime})" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetEvenMinuteDateBefore(System.Nullable{System.DateTime})" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetEvenSecondDate(System.Nullable{System.DateTime})" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetEvenSecondDateBefore(System.Nullable{System.DateTime})" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetFirstDayOfMonth(System.DateTime)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetLastDayOfMonth(System.DateTime)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetLocalOffset(System.DateTime)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetNextGivenMinuteDate(System.Nullable{System.DateTime},System.Int32)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetNextGivenSecondDate(System.Nullable{System.DateTime},System.Int32)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.GetOffset(System.DateTime,System.TimeZoneInfo)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.IsValid(System.DateTime)" />
        <element api="Overload:Zhaord.Extensions.DateTimeExtensions.ToEndOfTheDay">
          <element api="M:Zhaord.Extensions.DateTimeExtensions.ToEndOfTheDay(System.DateTime)" />
          <element api="M:Zhaord.Extensions.DateTimeExtensions.ToEndOfTheDay(System.Nullable{System.DateTime})" />
        </element>
        <element api="M:Zhaord.Extensions.DateTimeExtensions.ToJavaScriptTicks(System.DateTime)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.ToLocalTime(System.Nullable{System.DateTime})" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.ToSerializationMode(System.DateTimeKind)" />
        <element api="Overload:Zhaord.Extensions.DateTimeExtensions.ToStartOfTheDay">
          <element api="M:Zhaord.Extensions.DateTimeExtensions.ToStartOfTheDay(System.DateTime)" />
          <element api="M:Zhaord.Extensions.DateTimeExtensions.ToStartOfTheDay(System.Nullable{System.DateTime})" />
        </element>
        <element api="M:Zhaord.Extensions.DateTimeExtensions.ToUniversalTime(System.Nullable{System.DateTime})" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.ToUnixTime(System.DateTime)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.TranslateTime(System.DateTime,System.TimeZoneInfo,System.TimeZoneInfo)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.UseDaylightTime(System.TimeZoneInfo)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" />
      </containers>
      <file name="830eb06b-171f-5b58-42fc-cfb5385c3634" />
    </api>
    <api id="Fields.T:Zhaord.Extensions.DateTimeExtensions">
      <topicdata name="DateTimeExtensions" group="list" subgroup="Fields" typeTopicId="T:Zhaord.Extensions.DateTimeExtensions" />
      <apidata name="DateTimeExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:Zhaord.Extensions.DateTimeExtensions.BeginOfEpoch" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" />
      </containers>
      <file name="be35ef12-95ca-d873-0beb-08ae119e788e" />
    </api>
    <api id="Overload:Zhaord.Extensions.DateTimeExtensions.AssumeUniversalTime">
      <topicdata name="AssumeUniversalTime" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="AssumeUniversalTime" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.DateTimeExtensions.AssumeUniversalTime(System.DateTime)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.AssumeUniversalTime(System.Nullable{System.DateTime})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <file name="0d181b04-09fc-9ab0-765e-c785c4c13b3a" />
    </api>
    <api id="Overload:Zhaord.Extensions.DateTimeExtensions.ToEndOfTheDay">
      <topicdata name="ToEndOfTheDay" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ToEndOfTheDay" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.DateTimeExtensions.ToEndOfTheDay(System.DateTime)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.ToEndOfTheDay(System.Nullable{System.DateTime})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <file name="b72006e8-617a-6787-38a4-85e75b54f9af" />
    </api>
    <api id="Overload:Zhaord.Extensions.DateTimeExtensions.ToStartOfTheDay">
      <topicdata name="ToStartOfTheDay" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ToStartOfTheDay" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.DateTimeExtensions.ToStartOfTheDay(System.DateTime)" />
        <element api="M:Zhaord.Extensions.DateTimeExtensions.ToStartOfTheDay(System.Nullable{System.DateTime})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <file name="326d5f49-2f80-0ec0-d596-e2b7b17ec383" />
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.AssumeUniversalTime(System.DateTime)">
      <topicdata group="api" />
      <apidata name="AssumeUniversalTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.DateTimeExtensions.AssumeUniversalTime" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="16c503e0-9435-c002-df37-99aba2682bd4" />
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.AssumeUniversalTime(System.Nullable{System.DateTime})">
      <topicdata group="api" />
      <apidata name="AssumeUniversalTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.DateTimeExtensions.AssumeUniversalTime" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="f3e7937a-1239-ff35-bafd-dcd34d1340c8" />
    </api>
    <api id="F:Zhaord.Extensions.DateTimeExtensions.BeginOfEpoch">
      <topicdata group="api" />
      <apidata name="BeginOfEpoch" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <file name="70c7cf27-4097-831d-8f28-55af81655e0b" />
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.FromUnixTime(System.Int64)">
      <topicdata group="api" />
      <apidata name="FromUnixTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="unixTime">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="a79a63a2-ed39-47aa-3f97-24cb3dac6c28" />
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.GetEvenHourDate(System.Nullable{System.DateTime})">
      <topicdata group="api" />
      <apidata name="GetEvenHourDate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="21ef4bad-9dd5-7086-a536-08a901153c79" />
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.GetEvenMinuteDate(System.Nullable{System.DateTime})">
      <topicdata group="api" />
      <apidata name="GetEvenMinuteDate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="c65710c0-3dc2-b6ef-ef48-d5a12de1006c" />
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.GetEvenMinuteDateBefore(System.Nullable{System.DateTime})">
      <topicdata group="api" />
      <apidata name="GetEvenMinuteDateBefore" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="6393c09c-1726-73d9-4c29-bc8b528e8354" />
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.GetEvenSecondDate(System.Nullable{System.DateTime})">
      <topicdata group="api" />
      <apidata name="GetEvenSecondDate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="132b4f7e-eaa8-1fe2-5b66-3ee70a9833c0" />
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.GetEvenSecondDateBefore(System.Nullable{System.DateTime})">
      <topicdata group="api" />
      <apidata name="GetEvenSecondDateBefore" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="10b8079d-6a3a-b072-4ca7-20c8c1bcbea3" />
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.GetFirstDayOfMonth(System.DateTime)">
      <topicdata group="api" />
      <apidata name="GetFirstDayOfMonth" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="date">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="5ac81f79-03d4-fa80-bb7d-f410fa0121a9" />
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.GetLastDayOfMonth(System.DateTime)">
      <topicdata group="api" />
      <apidata name="GetLastDayOfMonth" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="date">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="d04eaa01-c2da-2b56-a0de-38bdf851c5e6" />
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.GetLocalOffset(System.DateTime)">
      <topicdata group="api" />
      <apidata name="GetLocalOffset" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="01811276-4d6d-72cd-6ce4-fb0a3f0217d5" />
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.GetNextGivenMinuteDate(System.Nullable{System.DateTime},System.Int32)">
      <topicdata group="api" />
      <apidata name="GetNextGivenMinuteDate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="minuteBase">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="9cb5968d-1296-291d-c212-1ff5e3ef394a" />
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.GetNextGivenSecondDate(System.Nullable{System.DateTime},System.Int32)">
      <topicdata group="api" />
      <apidata name="GetNextGivenSecondDate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="secondBase">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="f069cf34-955e-ebf6-e708-dd29b4edbaed" />
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.GetOffset(System.DateTime,System.TimeZoneInfo)">
      <topicdata group="api" />
      <apidata name="GetOffset" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="date">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="tz">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="90477d2b-dae3-dda1-fe2e-06c68270b77d" />
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.IsValid(System.DateTime)">
      <topicdata group="api" />
      <apidata name="IsValid" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="a8e2bb93-319d-1b66-f737-e04a82540721" />
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.ToEndOfTheDay(System.DateTime)">
      <topicdata group="api" />
      <apidata name="ToEndOfTheDay" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.DateTimeExtensions.ToEndOfTheDay" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dt">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="9ad306ce-d596-b20b-9c64-83f75720bce1" />
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.ToEndOfTheDay(System.Nullable{System.DateTime})">
      <topicdata group="api" />
      <apidata name="ToEndOfTheDay" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.DateTimeExtensions.ToEndOfTheDay" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dt">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="40455be1-e2c8-16fe-6c8e-d97933240ea4" />
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.ToJavaScriptTicks(System.DateTime)">
      <topicdata group="api" />
      <apidata name="ToJavaScriptTicks" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="2a7b261a-fc17-1c6b-a31e-c9ad36cf14c0" />
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.ToLocalTime(System.Nullable{System.DateTime})">
      <topicdata group="api" />
      <apidata name="ToLocalTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="78b62dcb-b2d4-9e89-ded0-97ea75c36156" />
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.ToSerializationMode(System.DateTimeKind)">
      <topicdata group="api" />
      <apidata name="ToSerializationMode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="kind">
          <type api="T:System.DateTimeKind" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlDateTimeSerializationMode" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <file name="6a71b34e-d954-8a7d-c779-3bf913552bc5" />
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.ToStartOfTheDay(System.DateTime)">
      <topicdata group="api" />
      <apidata name="ToStartOfTheDay" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.DateTimeExtensions.ToStartOfTheDay" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dt">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="7e4c6082-64ab-7d74-56da-2501513ac44b" />
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.ToStartOfTheDay(System.Nullable{System.DateTime})">
      <topicdata group="api" />
      <apidata name="ToStartOfTheDay" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.DateTimeExtensions.ToStartOfTheDay" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dt">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="6ead5645-ad10-070a-dbe5-2c4e084044f7" />
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.ToUniversalTime(System.Nullable{System.DateTime})">
      <topicdata group="api" />
      <apidata name="ToUniversalTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="44145339-2ec1-5927-5ce0-2437ba091acb" />
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.ToUnixTime(System.DateTime)">
      <topicdata group="api" />
      <apidata name="ToUnixTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="date">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="188d7318-67aa-8ae9-9782-b5e9caa852fb" />
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.TranslateTime(System.DateTime,System.TimeZoneInfo,System.TimeZoneInfo)">
      <topicdata group="api" />
      <apidata name="TranslateTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="date">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="src">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </parameter>
        <parameter name="dest">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="17deebcf-4b20-d82c-b13f-569668c3dc44" />
    </api>
    <api id="M:Zhaord.Extensions.DateTimeExtensions.UseDaylightTime(System.TimeZoneInfo)">
      <topicdata group="api" />
      <apidata name="UseDaylightTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timezone">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DateTimeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="ac4e628c-a3a2-020a-990f-691797c67f10" />
    </api>
    <api id="T:Zhaord.Extensions.DecimalExtensions">
      <topicdata group="api" />
      <apidata name="DecimalExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.Extensions.DecimalExtensions.FormatInvariant(System.Decimal,System.Int32)" />
        <element api="M:Zhaord.Extensions.DecimalExtensions.ToSmallestCurrencyUnit(System.Decimal,System.MidpointRounding)" />
        <element api="M:Zhaord.Extensions.DecimalExtensions.ToTaxPercentage(System.Decimal,System.Decimal,System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="a3df4d67-ca64-9f72-8913-f63fde2acd22" />
    </api>
    <api id="Methods.T:Zhaord.Extensions.DecimalExtensions">
      <topicdata name="DecimalExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.DecimalExtensions" />
      <apidata name="DecimalExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Extensions.DecimalExtensions.FormatInvariant(System.Decimal,System.Int32)" />
        <element api="M:Zhaord.Extensions.DecimalExtensions.ToSmallestCurrencyUnit(System.Decimal,System.MidpointRounding)" />
        <element api="M:Zhaord.Extensions.DecimalExtensions.ToTaxPercentage(System.Decimal,System.Decimal,System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DecimalExtensions" />
      </containers>
      <file name="fa2e337b-d74e-5944-a7a9-667b4e2938b3" />
    </api>
    <api id="M:Zhaord.Extensions.DecimalExtensions.FormatInvariant(System.Decimal,System.Int32)">
      <topicdata group="api" />
      <apidata name="FormatInvariant" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Decimal" ref="false" />
        </parameter>
        <parameter name="decimals" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>2</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DecimalExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="9bcee1df-fe6a-7e4d-cd0c-ea5d1454d704" />
    </api>
    <api id="M:Zhaord.Extensions.DecimalExtensions.ToSmallestCurrencyUnit(System.Decimal,System.MidpointRounding)">
      <topicdata group="api" />
      <apidata name="ToSmallestCurrencyUnit" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Decimal" ref="false" />
        </parameter>
        <parameter name="rounding" optional="true">
          <type api="T:System.MidpointRounding" ref="false" />
          <argument>
            <type api="T:System.MidpointRounding" ref="false" />
            <enumValue>
              <field name="AwayFromZero" />
            </enumValue>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DecimalExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="fb4338c7-ca00-b647-46b5-4059a1a5b548" />
    </api>
    <api id="M:Zhaord.Extensions.DecimalExtensions.ToTaxPercentage(System.Decimal,System.Decimal,System.Nullable{System.Int32})">
      <topicdata group="api" />
      <apidata name="ToTaxPercentage" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inclTax">
          <type api="T:System.Decimal" ref="false" />
        </parameter>
        <parameter name="exclTax">
          <type api="T:System.Decimal" ref="false" />
        </parameter>
        <parameter name="decimals" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DecimalExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="650f1e05-7772-73b4-03d2-d7ffdf65ec70" />
    </api>
    <api id="T:Zhaord.Extensions.DictionaryExtensions">
      <topicdata group="api" />
      <apidata name="DictionaryExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.Extensions.DictionaryExtensions.AddRange``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
        <element api="M:Zhaord.Extensions.DictionaryExtensions.AppendInValue(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.Object)" />
        <element api="M:Zhaord.Extensions.DictionaryExtensions.GetValue``2(System.Collections.Generic.IDictionary{``0,System.Object},``0)" />
        <element api="Overload:Zhaord.Extensions.DictionaryExtensions.Merge">
          <element api="M:Zhaord.Extensions.DictionaryExtensions.Merge``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1},System.Boolean)" />
          <element api="M:Zhaord.Extensions.DictionaryExtensions.Merge(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Object,System.Boolean)" />
        </element>
        <element api="M:Zhaord.Extensions.DictionaryExtensions.PrependInValue(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.Object)" />
        <element api="M:Zhaord.Extensions.DictionaryExtensions.ToExpandoObject(System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="2636065b-4654-f9bd-a703-cc2a6bd96b8f" />
    </api>
    <api id="Methods.T:Zhaord.Extensions.DictionaryExtensions">
      <topicdata name="DictionaryExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.DictionaryExtensions" />
      <apidata name="DictionaryExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Extensions.DictionaryExtensions.AddRange``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
        <element api="M:Zhaord.Extensions.DictionaryExtensions.AppendInValue(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.Object)" />
        <element api="M:Zhaord.Extensions.DictionaryExtensions.GetValue``2(System.Collections.Generic.IDictionary{``0,System.Object},``0)" />
        <element api="Overload:Zhaord.Extensions.DictionaryExtensions.Merge">
          <element api="M:Zhaord.Extensions.DictionaryExtensions.Merge``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1},System.Boolean)" />
          <element api="M:Zhaord.Extensions.DictionaryExtensions.Merge(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Object,System.Boolean)" />
        </element>
        <element api="M:Zhaord.Extensions.DictionaryExtensions.PrependInValue(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.Object)" />
        <element api="M:Zhaord.Extensions.DictionaryExtensions.ToExpandoObject(System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DictionaryExtensions" />
      </containers>
      <file name="448ee8ac-12a4-23e4-6696-9144a2c3a986" />
    </api>
    <api id="Overload:Zhaord.Extensions.DictionaryExtensions.Merge">
      <topicdata name="Merge" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Merge" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.DictionaryExtensions.Merge``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1},System.Boolean)" />
        <element api="M:Zhaord.Extensions.DictionaryExtensions.Merge(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Object,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DictionaryExtensions" ref="true" />
      </containers>
      <file name="7cf770d8-e3ec-875d-e331-b9bb854f9ac3" />
    </api>
    <api id="M:Zhaord.Extensions.DictionaryExtensions.AddRange``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TU" />
      </templates>
      <parameters>
        <parameter name="values">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.DictionaryExtensions.AddRange``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
              <template name="TU" index="1" api="M:Zhaord.Extensions.DictionaryExtensions.AddRange``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="other">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <template name="T" index="0" api="M:Zhaord.Extensions.DictionaryExtensions.AddRange``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
                  <template name="TU" index="1" api="M:Zhaord.Extensions.DictionaryExtensions.AddRange``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DictionaryExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="f633b1dc-6902-47c8-a974-6d703ed847de" />
    </api>
    <api id="M:Zhaord.Extensions.DictionaryExtensions.AppendInValue(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="AppendInValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="separator">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DictionaryExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="d2302e1e-a597-e805-db9e-98bb2d405830" />
    </api>
    <api id="M:Zhaord.Extensions.DictionaryExtensions.GetValue``2(System.Collections.Generic.IDictionary{``0,System.Object},``0)">
      <topicdata group="api" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TK" />
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="instance">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <template name="TK" index="0" api="M:Zhaord.Extensions.DictionaryExtensions.GetValue``2(System.Collections.Generic.IDictionary{``0,System.Object},``0)" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="key">
          <template name="TK" index="0" api="M:Zhaord.Extensions.DictionaryExtensions.GetValue``2(System.Collections.Generic.IDictionary{``0,System.Object},``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="1" api="M:Zhaord.Extensions.DictionaryExtensions.GetValue``2(System.Collections.Generic.IDictionary{``0,System.Object},``0)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DictionaryExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="efe31a45-7d5b-1be0-ac09-2a847f40858b" />
    </api>
    <api id="M:Zhaord.Extensions.DictionaryExtensions.Merge(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Object,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Merge" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.DictionaryExtensions.Merge" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="replaceExisting" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DictionaryExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="e44dfed7-8acf-50e2-8f73-95f44ea59fb6" />
    </api>
    <api id="M:Zhaord.Extensions.DictionaryExtensions.Merge``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1},System.Boolean)">
      <topicdata group="api" />
      <apidata name="Merge" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.DictionaryExtensions.Merge" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TU" />
      </templates>
      <parameters>
        <parameter name="instance">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.DictionaryExtensions.Merge``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1},System.Boolean)" />
              <template name="TU" index="1" api="M:Zhaord.Extensions.DictionaryExtensions.Merge``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1},System.Boolean)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="from">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.DictionaryExtensions.Merge``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1},System.Boolean)" />
              <template name="TU" index="1" api="M:Zhaord.Extensions.DictionaryExtensions.Merge``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1},System.Boolean)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="replaceExisting" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DictionaryExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="902361a9-84fd-0f46-1be7-fd2363ede653" />
    </api>
    <api id="M:Zhaord.Extensions.DictionaryExtensions.PrependInValue(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="PrependInValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="separator">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DictionaryExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="e848d152-d357-ccf2-7046-3ef528b120d0" />
    </api>
    <api id="M:Zhaord.Extensions.DictionaryExtensions.ToExpandoObject(System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
      <topicdata group="api" />
      <apidata name="ToExpandoObject" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="castIfPossible" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Dynamic.ExpandoObject" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.DictionaryExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="c93ef457-07b1-b056-55cc-b964db762636" />
    </api>
    <api id="T:Zhaord.Extensions.EnumerableExtensions">
      <topicdata group="api" />
      <apidata name="EnumerableExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.AddRange(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection)" />
        <element api="M:Zhaord.Extensions.EnumerableExtensions.AsReadOnly``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:Zhaord.Extensions.EnumerableExtensions.AsSerializable``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:Zhaord.Extensions.EnumerableExtensions.CastValid``1(System.Collections.IEnumerable)" />
        <element api="M:Zhaord.Extensions.EnumerableExtensions.Chunk``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
        <element api="Overload:Zhaord.Extensions.EnumerableExtensions.Each">
          <element api="M:Zhaord.Extensions.EnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" />
          <element api="M:Zhaord.Extensions.EnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Int32})" />
        </element>
        <element api="Overload:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal">
          <element api="M:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)" />
        </element>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="9ab9a251-da8b-6ea7-4f47-aa6f965d65d8" />
    </api>
    <api id="Methods.T:Zhaord.Extensions.EnumerableExtensions">
      <topicdata name="EnumerableExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.EnumerableExtensions" />
      <apidata name="EnumerableExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.AddRange(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection)" />
        <element api="M:Zhaord.Extensions.EnumerableExtensions.AsReadOnly``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:Zhaord.Extensions.EnumerableExtensions.AsSerializable``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:Zhaord.Extensions.EnumerableExtensions.CastValid``1(System.Collections.IEnumerable)" />
        <element api="M:Zhaord.Extensions.EnumerableExtensions.Chunk``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
        <element api="Overload:Zhaord.Extensions.EnumerableExtensions.Each">
          <element api="M:Zhaord.Extensions.EnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" />
          <element api="M:Zhaord.Extensions.EnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Int32})" />
        </element>
        <element api="Overload:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal">
          <element api="M:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)" />
        </element>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumerableExtensions" />
      </containers>
      <file name="379aa935-638d-df3c-15d2-e60c4d0f23f8" />
    </api>
    <api id="Overload:Zhaord.Extensions.EnumerableExtensions.Each">
      <topicdata name="Each" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Each" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" />
        <element api="M:Zhaord.Extensions.EnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
      </containers>
      <file name="7ba09308-8303-1e50-d213-34aa1c9859e6" />
    </api>
    <api id="Overload:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal">
      <topicdata name="OrderByOrdinal" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="OrderByOrdinal" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
      </containers>
      <file name="ca65e589-0c33-baac-a9b9-7aeb349e6e75" />
    </api>
    <api id="M:Zhaord.Extensions.EnumerableExtensions.AddRange(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="initial">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </parameter>
        <parameter name="other">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="2377beb5-0daf-63bf-a5aa-0a724bf77519" />
    </api>
    <api id="M:Zhaord.Extensions.EnumerableExtensions.AsReadOnly``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="AsReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.AsReadOnly``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.AsReadOnly``1(System.Collections.Generic.IEnumerable{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="fb28a72e-bc6a-63af-d7c2-8b03e735c6cf" />
    </api>
    <api id="M:Zhaord.Extensions.EnumerableExtensions.AsSerializable``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="AsSerializable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.AsSerializable``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.AsSerializable``1(System.Collections.Generic.IEnumerable{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="9a763d8c-9c9f-4044-d632-f1557f748d72" />
    </api>
    <api id="M:Zhaord.Extensions.EnumerableExtensions.CastValid``1(System.Collections.IEnumerable)">
      <topicdata group="api" />
      <apidata name="CastValid" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.CastValid``1(System.Collections.IEnumerable)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="2f730d6c-0c4e-dcb6-916d-fc6a48cb4967" />
    </api>
    <api id="M:Zhaord.Extensions.EnumerableExtensions.Chunk``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
      <topicdata group="api" />
      <apidata name="Chunk" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="items">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.Chunk``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="chunkSize" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>100</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.Chunk``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="3cefe1c4-9a01-92ff-c4c9-9d6f598e3e30" />
    </api>
    <api id="M:Zhaord.Extensions.EnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
      <topicdata group="api" />
      <apidata name="Each" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.EnumerableExtensions.Each" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="5ff97794-f969-b479-a643-bf9bb7e345d0" />
    </api>
    <api id="M:Zhaord.Extensions.EnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Int32})">
      <topicdata group="api" />
      <apidata name="Each" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.EnumerableExtensions.Each" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Int32})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="action">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Int32})" />
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="7cd38e4d-b8c7-40fe-080b-e47c8aa9d744" />
    </api>
    <api id="M:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="OrderByOrdinal" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:Zhaord.IOrdered" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal``1(System.Collections.Generic.IEnumerable{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="8ee03bb0-5d42-31a6-c29d-ae274e2f4211" />
    </api>
    <api id="M:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
      <topicdata group="api" />
      <apidata name="OrderByOrdinal" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:Zhaord.IOrdered" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="descending">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.OrderByOrdinal``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="12d5161a-b6b4-33ec-b1e8-1ae10ef19d27" />
    </api>
    <api id="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <topicdata group="api" />
      <apidata name="ToMultimap" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              <template name="TKey" index="1" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="valueSelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              <template name="TValue" index="2" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Zhaord.Collections.Multimap`2" ref="true">
          <specialization>
            <template name="TKey" index="1" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TValue" index="2" api="M:Zhaord.Extensions.EnumerableExtensions.ToMultimap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumerableExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="9b7c5c97-c002-beb8-8c13-1faa8b041ea2" />
    </api>
    <api id="T:Zhaord.Extensions.EnumExtensions">
      <topicdata group="api" />
      <apidata name="EnumExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.Extensions.EnumExtensions.GetDescription(System.Enum)" />
        <element api="M:Zhaord.Extensions.EnumExtensions.GetFriendlyName(System.Enum)" />
        <element api="M:Zhaord.Extensions.EnumExtensions.IsSet``1(``0,``0)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="c2258917-8373-4827-5804-9c06022beb14" />
    </api>
    <api id="Methods.T:Zhaord.Extensions.EnumExtensions">
      <topicdata name="EnumExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.EnumExtensions" />
      <apidata name="EnumExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Extensions.EnumExtensions.GetDescription(System.Enum)" />
        <element api="M:Zhaord.Extensions.EnumExtensions.GetFriendlyName(System.Enum)" />
        <element api="M:Zhaord.Extensions.EnumExtensions.IsSet``1(``0,``0)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumExtensions" />
      </containers>
      <file name="6d4d369c-0b59-5464-ffe1-7d552e42493c" />
    </api>
    <api id="M:Zhaord.Extensions.EnumExtensions.GetDescription(System.Enum)">
      <topicdata group="api" />
      <apidata name="GetDescription" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Enum" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="7bd8af22-2b18-960f-8615-eadf2895e739" />
    </api>
    <api id="M:Zhaord.Extensions.EnumExtensions.GetFriendlyName(System.Enum)">
      <topicdata group="api" />
      <apidata name="GetFriendlyName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Enum" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="a1d45ca6-f63c-d10e-3889-c0d6b11f7227" />
    </api>
    <api id="M:Zhaord.Extensions.EnumExtensions.IsSet``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="IsSet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Zhaord.Extensions.EnumExtensions.IsSet``1(``0,``0)" />
        </parameter>
        <parameter name="flags">
          <template name="T" index="0" api="M:Zhaord.Extensions.EnumExtensions.IsSet``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.EnumExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="db9f921d-dc7b-7957-798c-eab3c79a59af" />
    </api>
    <api id="T:Zhaord.Extensions.IoExtensions">
      <topicdata group="api" />
      <apidata name="IoExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.Extensions.IoExtensions.IsFileLocked(System.IO.FileInfo)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="ae470df3-4b80-7cfa-c941-fa664424ffd9" />
    </api>
    <api id="Methods.T:Zhaord.Extensions.IoExtensions">
      <topicdata name="IoExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.IoExtensions" />
      <apidata name="IoExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Extensions.IoExtensions.IsFileLocked(System.IO.FileInfo)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.IoExtensions" />
      </containers>
      <file name="d1b46f31-e7ba-0d48-86ba-24db5ffc5c09" />
    </api>
    <api id="M:Zhaord.Extensions.IoExtensions.IsFileLocked(System.IO.FileInfo)">
      <topicdata group="api" />
      <apidata name="IsFileLocked" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file">
          <type api="T:System.IO.FileInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.IoExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="ca3ac6bf-c586-bd09-b78b-6aa245aa0322" />
    </api>
    <api id="T:Zhaord.Extensions.LinqExtensions">
      <topicdata group="api" />
      <apidata name="LinqExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.Extensions.LinqExtensions.ExtractFieldInfo(System.Linq.Expressions.LambdaExpression)" />
        <element api="M:Zhaord.Extensions.LinqExtensions.ExtractMemberInfo(System.Linq.Expressions.LambdaExpression)" />
        <element api="M:Zhaord.Extensions.LinqExtensions.ExtractPropertyInfo(System.Linq.Expressions.LambdaExpression)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="1c31f5d3-2b98-9e24-b811-72d4585b118c" />
    </api>
    <api id="Methods.T:Zhaord.Extensions.LinqExtensions">
      <topicdata name="LinqExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.LinqExtensions" />
      <apidata name="LinqExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Extensions.LinqExtensions.ExtractFieldInfo(System.Linq.Expressions.LambdaExpression)" />
        <element api="M:Zhaord.Extensions.LinqExtensions.ExtractMemberInfo(System.Linq.Expressions.LambdaExpression)" />
        <element api="M:Zhaord.Extensions.LinqExtensions.ExtractPropertyInfo(System.Linq.Expressions.LambdaExpression)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.LinqExtensions" />
      </containers>
      <file name="b0894b7e-5167-d7f3-46b2-94412000501e" />
    </api>
    <api id="M:Zhaord.Extensions.LinqExtensions.ExtractFieldInfo(System.Linq.Expressions.LambdaExpression)">
      <topicdata group="api" />
      <apidata name="ExtractFieldInfo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyAccessor">
          <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Reflection.FieldInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.LinqExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="2d983df6-69da-a8e3-8509-1a28d9284cb6" />
    </api>
    <api id="M:Zhaord.Extensions.LinqExtensions.ExtractMemberInfo(System.Linq.Expressions.LambdaExpression)">
      <topicdata group="api" />
      <apidata name="ExtractMemberInfo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyAccessor">
          <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Reflection.MemberInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.LinqExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="303bba00-3a3f-f131-9299-1c1cfc405ddf" />
    </api>
    <api id="M:Zhaord.Extensions.LinqExtensions.ExtractPropertyInfo(System.Linq.Expressions.LambdaExpression)">
      <topicdata group="api" />
      <apidata name="ExtractPropertyInfo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyAccessor">
          <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Reflection.PropertyInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.LinqExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="850870c9-49d8-69d8-5351-d1ba98df4d48" />
    </api>
    <api id="T:Zhaord.Extensions.ListExtensions">
      <topicdata group="api" />
      <apidata name="ListExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Zhaord.Extensions.ListExtensions.Slice">
          <element api="M:Zhaord.Extensions.ListExtensions.Slice``1(System.Collections.Generic.IList{``0},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
          <element api="M:Zhaord.Extensions.ListExtensions.Slice``1(System.Collections.Generic.IList{``0},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
        </element>
        <element api="Overload:Zhaord.Extensions.ListExtensions.ToSeparatedString">
          <element api="M:Zhaord.Extensions.ListExtensions.ToSeparatedString``1(System.Collections.Generic.IList{``0})" />
          <element api="M:Zhaord.Extensions.ListExtensions.ToSeparatedString``1(System.Collections.Generic.IList{``0},System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="cd0a497d-16c5-6b1e-f333-9b6b052f7007" />
    </api>
    <api id="Methods.T:Zhaord.Extensions.ListExtensions">
      <topicdata name="ListExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.ListExtensions" />
      <apidata name="ListExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:Zhaord.Extensions.ListExtensions.Slice">
          <element api="M:Zhaord.Extensions.ListExtensions.Slice``1(System.Collections.Generic.IList{``0},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
          <element api="M:Zhaord.Extensions.ListExtensions.Slice``1(System.Collections.Generic.IList{``0},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
        </element>
        <element api="Overload:Zhaord.Extensions.ListExtensions.ToSeparatedString">
          <element api="M:Zhaord.Extensions.ListExtensions.ToSeparatedString``1(System.Collections.Generic.IList{``0})" />
          <element api="M:Zhaord.Extensions.ListExtensions.ToSeparatedString``1(System.Collections.Generic.IList{``0},System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ListExtensions" />
      </containers>
      <file name="ecd67ca6-1d4e-8e14-2cbc-4d66d958dfde" />
    </api>
    <api id="Overload:Zhaord.Extensions.ListExtensions.Slice">
      <topicdata name="Slice" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Slice" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.ListExtensions.Slice``1(System.Collections.Generic.IList{``0},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
        <element api="M:Zhaord.Extensions.ListExtensions.Slice``1(System.Collections.Generic.IList{``0},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ListExtensions" ref="true" />
      </containers>
      <file name="912b5516-bf38-9293-a2d7-a16b15f09c04" />
    </api>
    <api id="Overload:Zhaord.Extensions.ListExtensions.ToSeparatedString">
      <topicdata name="ToSeparatedString" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ToSeparatedString" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.ListExtensions.ToSeparatedString``1(System.Collections.Generic.IList{``0})" />
        <element api="M:Zhaord.Extensions.ListExtensions.ToSeparatedString``1(System.Collections.Generic.IList{``0},System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ListExtensions" ref="true" />
      </containers>
      <file name="18e7ec9d-cd1a-c326-007b-e58553a8549c" />
    </api>
    <api id="M:Zhaord.Extensions.ListExtensions.Slice``1(System.Collections.Generic.IList{``0},System.Nullable{System.Int32},System.Nullable{System.Int32})">
      <topicdata group="api" />
      <apidata name="Slice" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ListExtensions.Slice" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="list">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.ListExtensions.Slice``1(System.Collections.Generic.IList{``0},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="start">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="end">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Zhaord.Extensions.ListExtensions.Slice``1(System.Collections.Generic.IList{``0},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ListExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="d3654d42-7da9-ebc2-3280-f0acb406ed68" />
    </api>
    <api id="M:Zhaord.Extensions.ListExtensions.Slice``1(System.Collections.Generic.IList{``0},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
      <topicdata group="api" />
      <apidata name="Slice" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ListExtensions.Slice" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="list">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.ListExtensions.Slice``1(System.Collections.Generic.IList{``0},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="start">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="end">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="step">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Zhaord.Extensions.ListExtensions.Slice``1(System.Collections.Generic.IList{``0},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ListExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="fdbeb6b9-b5c1-5796-20e8-0557bf7d5def" />
    </api>
    <api id="M:Zhaord.Extensions.ListExtensions.ToSeparatedString``1(System.Collections.Generic.IList{``0})">
      <topicdata group="api" />
      <apidata name="ToSeparatedString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ListExtensions.ToSeparatedString" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.ListExtensions.ToSeparatedString``1(System.Collections.Generic.IList{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ListExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="2df323d2-c8e0-a9ef-6e49-a2934e7e0d17" />
    </api>
    <api id="M:Zhaord.Extensions.ListExtensions.ToSeparatedString``1(System.Collections.Generic.IList{``0},System.String)">
      <topicdata group="api" />
      <apidata name="ToSeparatedString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.ListExtensions.ToSeparatedString" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.ListExtensions.ToSeparatedString``1(System.Collections.Generic.IList{``0},System.String)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="separator">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.ListExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="6397edfa-7c7c-73da-3e43-7ecb18d6f2e4" />
    </api>
    <api id="T:Zhaord.Extensions.MiscExtensions">
      <topicdata group="api" />
      <apidata name="MiscExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.Extensions.MiscExtensions.CountExecute(System.Data.OleDb.OleDbConnection,System.String)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.Dump(System.Exception)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.GetDataType(System.Data.DataTable,System.String)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.GetMergedDataValue``1(Zhaord.IMergedData,System.String,``0)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.Grow(System.Text.StringBuilder,System.String,System.String)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.HasColumn(System.Data.DataView,System.String)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.IsEqual(System.ComponentModel.TypeConverter,System.String,System.Object)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.IsNullOrDefault``1(System.Nullable{``0})" />
        <element api="M:Zhaord.Extensions.MiscExtensions.SafeConvert(System.ComponentModel.TypeConverter,System.String)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.SafeGet(System.String[],System.Int32)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.ToAllMessages(System.Exception)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.ToElapsedMinutes(System.Diagnostics.Stopwatch)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.ToElapsedSeconds(System.Diagnostics.Stopwatch)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.ToHexString(System.Byte[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="c1545c6e-38f3-fffa-a8a8-7bc6fc85feab" />
    </api>
    <api id="Methods.T:Zhaord.Extensions.MiscExtensions">
      <topicdata name="MiscExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.MiscExtensions" />
      <apidata name="MiscExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Extensions.MiscExtensions.CountExecute(System.Data.OleDb.OleDbConnection,System.String)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.Dump(System.Exception)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.GetDataType(System.Data.DataTable,System.String)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.GetMergedDataValue``1(Zhaord.IMergedData,System.String,``0)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.Grow(System.Text.StringBuilder,System.String,System.String)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.HasColumn(System.Data.DataView,System.String)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.IsEqual(System.ComponentModel.TypeConverter,System.String,System.Object)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.IsNullOrDefault``1(System.Nullable{``0})" />
        <element api="M:Zhaord.Extensions.MiscExtensions.SafeConvert(System.ComponentModel.TypeConverter,System.String)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.SafeGet(System.String[],System.Int32)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.ToAllMessages(System.Exception)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.ToElapsedMinutes(System.Diagnostics.Stopwatch)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.ToElapsedSeconds(System.Diagnostics.Stopwatch)" />
        <element api="M:Zhaord.Extensions.MiscExtensions.ToHexString(System.Byte[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.MiscExtensions" />
      </containers>
      <file name="0795bea6-d15f-6c52-bcaa-ba201702cb42" />
    </api>
    <api id="M:Zhaord.Extensions.MiscExtensions.CountExecute(System.Data.OleDb.OleDbConnection,System.String)">
      <topicdata group="api" />
      <apidata name="CountExecute" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="conn">
          <type api="T:System.Data.OleDb.OleDbConnection" ref="true" />
        </parameter>
        <parameter name="sqlCount">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="0e8abdf7-e53b-9926-3d4e-a618d7945b38" />
    </api>
    <api id="M:Zhaord.Extensions.MiscExtensions.Dump(System.Exception)">
      <topicdata group="api" />
      <apidata name="Dump" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="exc">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="2a070159-c3f8-3a2d-cac9-6b39043c4073" />
    </api>
    <api id="M:Zhaord.Extensions.MiscExtensions.GetDataType(System.Data.DataTable,System.String)">
      <topicdata group="api" />
      <apidata name="GetDataType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dt">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="6593f8be-d54a-6e37-90dd-2ffad37afb01" />
    </api>
    <api id="M:Zhaord.Extensions.MiscExtensions.GetMergedDataValue``1(Zhaord.IMergedData,System.String,``0)">
      <topicdata group="api" />
      <apidata name="GetMergedDataValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="mergedData">
          <type api="T:Zhaord.IMergedData" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultValue">
          <template name="T" index="0" api="M:Zhaord.Extensions.MiscExtensions.GetMergedDataValue``1(Zhaord.IMergedData,System.String,``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Extensions.MiscExtensions.GetMergedDataValue``1(Zhaord.IMergedData,System.String,``0)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="ab488258-ec28-7668-d9ba-ac4e6857d3b9" />
    </api>
    <api id="M:Zhaord.Extensions.MiscExtensions.Grow(System.Text.StringBuilder,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Grow" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sb">
          <type api="T:System.Text.StringBuilder" ref="true" />
        </parameter>
        <parameter name="grow">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="delimiter">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="31c01ff9-d5a1-9b4c-7e02-6832dc324276" />
    </api>
    <api id="M:Zhaord.Extensions.MiscExtensions.HasColumn(System.Data.DataView,System.String)">
      <topicdata group="api" />
      <apidata name="HasColumn" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dv">
          <type api="T:System.Data.DataView" ref="true" />
        </parameter>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="10f8ee1a-9e3e-2308-a562-d5ceaacfe6db" />
    </api>
    <api id="M:Zhaord.Extensions.MiscExtensions.IsEqual(System.ComponentModel.TypeConverter,System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="IsEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="converter">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="compareWith">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="dc6ed744-1465-ba19-5281-e4e4000210d6" />
    </api>
    <api id="M:Zhaord.Extensions.MiscExtensions.IsNullOrDefault``1(System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="IsNullOrDefault" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Zhaord.Extensions.MiscExtensions.IsNullOrDefault``1(System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="60eeea13-2a16-2073-c5d4-366d45e71186" />
    </api>
    <api id="M:Zhaord.Extensions.MiscExtensions.SafeConvert(System.ComponentModel.TypeConverter,System.String)">
      <topicdata group="api" />
      <apidata name="SafeConvert" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="converter">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="13d40daa-6a34-2886-e342-fc5a81f03482" />
    </api>
    <api id="M:Zhaord.Extensions.MiscExtensions.SafeGet(System.String[],System.Int32)">
      <topicdata group="api" />
      <apidata name="SafeGet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arr">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="7c9dea94-ca37-cb4a-9597-5260a3447564" />
    </api>
    <api id="M:Zhaord.Extensions.MiscExtensions.ToAllMessages(System.Exception)">
      <topicdata group="api" />
      <apidata name="ToAllMessages" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="exc">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="2d4b3861-eee5-f4ee-0e22-55456da37837" />
    </api>
    <api id="M:Zhaord.Extensions.MiscExtensions.ToElapsedMinutes(System.Diagnostics.Stopwatch)">
      <topicdata group="api" />
      <apidata name="ToElapsedMinutes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="watch">
          <type api="T:System.Diagnostics.Stopwatch" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="74331db1-adcc-5a89-9390-a384a4c514a6" />
    </api>
    <api id="M:Zhaord.Extensions.MiscExtensions.ToElapsedSeconds(System.Diagnostics.Stopwatch)">
      <topicdata group="api" />
      <apidata name="ToElapsedSeconds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="watch">
          <type api="T:System.Diagnostics.Stopwatch" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="d07f8fca-f896-74d4-e602-ab3acb95a874" />
    </api>
    <api id="M:Zhaord.Extensions.MiscExtensions.ToHexString(System.Byte[],System.Int32)">
      <topicdata group="api" />
      <apidata name="ToHexString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bytes">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="length" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="912f4157-d32e-71f6-b9d6-c282cecd0829" />
    </api>
    <api id="T:Zhaord.Extensions.StreamExtensions">
      <topicdata group="api" />
      <apidata name="StreamExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.Extensions.StreamExtensions.ContentsEqual(System.IO.Stream,System.IO.Stream)" />
        <element api="M:Zhaord.Extensions.StreamExtensions.ToFile(System.IO.Stream,System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="be9f177e-06b3-48ae-5be1-d518f41b090c" />
    </api>
    <api id="Methods.T:Zhaord.Extensions.StreamExtensions">
      <topicdata name="StreamExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.StreamExtensions" />
      <apidata name="StreamExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Extensions.StreamExtensions.ContentsEqual(System.IO.Stream,System.IO.Stream)" />
        <element api="M:Zhaord.Extensions.StreamExtensions.ToFile(System.IO.Stream,System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StreamExtensions" />
      </containers>
      <file name="698e3688-2558-fef2-1158-90a363da89ee" />
    </api>
    <api id="M:Zhaord.Extensions.StreamExtensions.ContentsEqual(System.IO.Stream,System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="ContentsEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="src">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="other">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="181cd489-cc6e-daaf-12eb-43fd06bc8764" />
    </api>
    <api id="M:Zhaord.Extensions.StreamExtensions.ToFile(System.IO.Stream,System.String)">
      <topicdata group="api" />
      <apidata name="ToFile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="srcStream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StreamExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="c472cb65-7467-08c8-a213-862e889a0eaf" />
    </api>
    <api id="T:Zhaord.Extensions.StringExtensions">
      <topicdata group="api" />
      <apidata name="StringExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.Extensions.StringExtensions.AttributeEncode(System.String)" />
        <element api="F:Zhaord.Extensions.StringExtensions.CarriageReturn" />
        <element api="F:Zhaord.Extensions.StringExtensions.CarriageReturnLineFeed" />
        <element api="M:Zhaord.Extensions.StringExtensions.ContainsWhiteSpace(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.Dump(System.String,System.Boolean)" />
        <element api="F:Zhaord.Extensions.StringExtensions.Empty" />
        <element api="M:Zhaord.Extensions.StringExtensions.EmptyNull(System.String)" />
        <element api="Overload:Zhaord.Extensions.StringExtensions.EncodeJsString">
          <element api="M:Zhaord.Extensions.StringExtensions.EncodeJsString(System.String)" />
          <element api="M:Zhaord.Extensions.StringExtensions.EncodeJsString(System.String,System.Char,System.Boolean)" />
        </element>
        <element api="M:Zhaord.Extensions.StringExtensions.EnsureEndsWith(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.EnsureNumericOnly(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.EnsureStartsWith(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.FormatCurrent(System.String,System.Object[])" />
        <element api="M:Zhaord.Extensions.StringExtensions.FormatCurrentUI(System.String,System.Object[])" />
        <element api="M:Zhaord.Extensions.StringExtensions.FormatInvariant(System.String,System.Object[])" />
        <element api="Overload:Zhaord.Extensions.StringExtensions.FormatWith">
          <element api="M:Zhaord.Extensions.StringExtensions.FormatWith(System.String,System.Object[])" />
          <element api="M:Zhaord.Extensions.StringExtensions.FormatWith(System.String,System.IFormatProvider,System.Object[])" />
        </element>
        <element api="M:Zhaord.Extensions.StringExtensions.GetLength(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.Grow(System.String,System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.Hash(System.String,System.Text.Encoding,System.Boolean)" />
        <element api="M:Zhaord.Extensions.StringExtensions.HasValue(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.HtmlDecode(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.HtmlEncode(System.String)" />
        <element api="Overload:Zhaord.Extensions.StringExtensions.Indent">
          <element api="M:Zhaord.Extensions.StringExtensions.Indent(System.String,System.Int32)" />
          <element api="M:Zhaord.Extensions.StringExtensions.Indent(System.String,System.Int32,System.Char)" />
        </element>
        <element api="M:Zhaord.Extensions.StringExtensions.IsAlpha(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsAlphaNumeric(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsCaseInsensitiveEqual(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsCaseSensitiveEqual(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsEmail(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsEmpty(System.String)" />
        <element api="Overload:Zhaord.Extensions.StringExtensions.IsEnclosedIn">
          <element api="M:Zhaord.Extensions.StringExtensions.IsEnclosedIn(System.String,System.String)" />
          <element api="M:Zhaord.Extensions.StringExtensions.IsEnclosedIn(System.String,System.String,System.String)" />
          <element api="M:Zhaord.Extensions.StringExtensions.IsEnclosedIn(System.String,System.String,System.StringComparison)" />
          <element api="M:Zhaord.Extensions.StringExtensions.IsEnclosedIn(System.String,System.String,System.String,System.StringComparison)" />
        </element>
        <element api="Overload:Zhaord.Extensions.StringExtensions.IsMatch">
          <element api="M:Zhaord.Extensions.StringExtensions.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)" />
          <element api="M:Zhaord.Extensions.StringExtensions.IsMatch(System.String,System.String,System.Text.RegularExpressions.Match@,System.Text.RegularExpressions.RegexOptions)" />
        </element>
        <element api="M:Zhaord.Extensions.StringExtensions.IsNumeric(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsWebUrl(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsWhiteSpace(System.String)" />
        <element api="F:Zhaord.Extensions.StringExtensions.LineFeed" />
        <element api="M:Zhaord.Extensions.StringExtensions.Mask(System.String,System.Int32)" />
        <element api="M:Zhaord.Extensions.StringExtensions.NaIfEmpty(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.NullEmpty(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.NumberLines(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.Prettify(System.String,System.Boolean,System.Char[])" />
        <element api="M:Zhaord.Extensions.StringExtensions.RegexRemove(System.String,System.String,System.Text.RegularExpressions.RegexOptions)" />
        <element api="M:Zhaord.Extensions.StringExtensions.RegexReplace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)" />
        <element api="Overload:Zhaord.Extensions.StringExtensions.RemoveEncloser">
          <element api="M:Zhaord.Extensions.StringExtensions.RemoveEncloser(System.String,System.String)" />
          <element api="M:Zhaord.Extensions.StringExtensions.RemoveEncloser(System.String,System.String,System.String)" />
          <element api="M:Zhaord.Extensions.StringExtensions.RemoveEncloser(System.String,System.String,System.StringComparison)" />
          <element api="M:Zhaord.Extensions.StringExtensions.RemoveEncloser(System.String,System.String,System.String,System.StringComparison)" />
        </element>
        <element api="Overload:Zhaord.Extensions.StringExtensions.RemoveHtml">
          <element api="M:Zhaord.Extensions.StringExtensions.RemoveHtml(System.String)" />
          <element api="M:Zhaord.Extensions.StringExtensions.RemoveHtml(System.String,System.Collections.Generic.ICollection{System.String})" />
        </element>
        <element api="M:Zhaord.Extensions.StringExtensions.RemoveInvalidXmlChars(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.Replace(System.String,System.Int32,System.Int32,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ReplaceCsvChars(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ReplaceNewLines(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.SanitizeHtmlId(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.Sha(System.String,System.Text.Encoding)" />
        <element api="M:Zhaord.Extensions.StringExtensions.SplitPascalCase(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.SplitSafe(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.SplitToPair(System.String,System.String@,System.String@,System.String)" />
        <element api="F:Zhaord.Extensions.StringExtensions.Tab" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToAttribute(System.String,System.String,System.Boolean)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToCamelCase(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToEnum``1(System.String,``0)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToInt(System.Char)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToIntArray(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToIntArrayContains(System.String,System.Int32,System.Boolean)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToSafe(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToUnicode(System.Char)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToValidFileName(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToValidPath(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.TrimSafe(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.Truncate(System.String,System.Int32,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.UrlDecode(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.UrlEncode(System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="4f94490c-55c1-ca82-c2d6-34abb67a10a9" />
    </api>
    <api id="Methods.T:Zhaord.Extensions.StringExtensions">
      <topicdata name="StringExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.StringExtensions" />
      <apidata name="StringExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Extensions.StringExtensions.AttributeEncode(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ContainsWhiteSpace(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.Dump(System.String,System.Boolean)" />
        <element api="M:Zhaord.Extensions.StringExtensions.EmptyNull(System.String)" />
        <element api="Overload:Zhaord.Extensions.StringExtensions.EncodeJsString">
          <element api="M:Zhaord.Extensions.StringExtensions.EncodeJsString(System.String)" />
          <element api="M:Zhaord.Extensions.StringExtensions.EncodeJsString(System.String,System.Char,System.Boolean)" />
        </element>
        <element api="M:Zhaord.Extensions.StringExtensions.EnsureEndsWith(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.EnsureNumericOnly(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.EnsureStartsWith(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.FormatCurrent(System.String,System.Object[])" />
        <element api="M:Zhaord.Extensions.StringExtensions.FormatCurrentUI(System.String,System.Object[])" />
        <element api="M:Zhaord.Extensions.StringExtensions.FormatInvariant(System.String,System.Object[])" />
        <element api="Overload:Zhaord.Extensions.StringExtensions.FormatWith">
          <element api="M:Zhaord.Extensions.StringExtensions.FormatWith(System.String,System.Object[])" />
          <element api="M:Zhaord.Extensions.StringExtensions.FormatWith(System.String,System.IFormatProvider,System.Object[])" />
        </element>
        <element api="M:Zhaord.Extensions.StringExtensions.GetLength(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.Grow(System.String,System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.Hash(System.String,System.Text.Encoding,System.Boolean)" />
        <element api="M:Zhaord.Extensions.StringExtensions.HasValue(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.HtmlDecode(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.HtmlEncode(System.String)" />
        <element api="Overload:Zhaord.Extensions.StringExtensions.Indent">
          <element api="M:Zhaord.Extensions.StringExtensions.Indent(System.String,System.Int32)" />
          <element api="M:Zhaord.Extensions.StringExtensions.Indent(System.String,System.Int32,System.Char)" />
        </element>
        <element api="M:Zhaord.Extensions.StringExtensions.IsAlpha(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsAlphaNumeric(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsCaseInsensitiveEqual(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsCaseSensitiveEqual(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsEmail(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsEmpty(System.String)" />
        <element api="Overload:Zhaord.Extensions.StringExtensions.IsEnclosedIn">
          <element api="M:Zhaord.Extensions.StringExtensions.IsEnclosedIn(System.String,System.String)" />
          <element api="M:Zhaord.Extensions.StringExtensions.IsEnclosedIn(System.String,System.String,System.String)" />
          <element api="M:Zhaord.Extensions.StringExtensions.IsEnclosedIn(System.String,System.String,System.StringComparison)" />
          <element api="M:Zhaord.Extensions.StringExtensions.IsEnclosedIn(System.String,System.String,System.String,System.StringComparison)" />
        </element>
        <element api="Overload:Zhaord.Extensions.StringExtensions.IsMatch">
          <element api="M:Zhaord.Extensions.StringExtensions.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)" />
          <element api="M:Zhaord.Extensions.StringExtensions.IsMatch(System.String,System.String,System.Text.RegularExpressions.Match@,System.Text.RegularExpressions.RegexOptions)" />
        </element>
        <element api="M:Zhaord.Extensions.StringExtensions.IsNumeric(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsWebUrl(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsWhiteSpace(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.Mask(System.String,System.Int32)" />
        <element api="M:Zhaord.Extensions.StringExtensions.NaIfEmpty(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.NullEmpty(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.NumberLines(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.Prettify(System.String,System.Boolean,System.Char[])" />
        <element api="M:Zhaord.Extensions.StringExtensions.RegexRemove(System.String,System.String,System.Text.RegularExpressions.RegexOptions)" />
        <element api="M:Zhaord.Extensions.StringExtensions.RegexReplace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)" />
        <element api="Overload:Zhaord.Extensions.StringExtensions.RemoveEncloser">
          <element api="M:Zhaord.Extensions.StringExtensions.RemoveEncloser(System.String,System.String)" />
          <element api="M:Zhaord.Extensions.StringExtensions.RemoveEncloser(System.String,System.String,System.String)" />
          <element api="M:Zhaord.Extensions.StringExtensions.RemoveEncloser(System.String,System.String,System.StringComparison)" />
          <element api="M:Zhaord.Extensions.StringExtensions.RemoveEncloser(System.String,System.String,System.String,System.StringComparison)" />
        </element>
        <element api="Overload:Zhaord.Extensions.StringExtensions.RemoveHtml">
          <element api="M:Zhaord.Extensions.StringExtensions.RemoveHtml(System.String)" />
          <element api="M:Zhaord.Extensions.StringExtensions.RemoveHtml(System.String,System.Collections.Generic.ICollection{System.String})" />
        </element>
        <element api="M:Zhaord.Extensions.StringExtensions.RemoveInvalidXmlChars(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.Replace(System.String,System.Int32,System.Int32,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ReplaceCsvChars(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ReplaceNewLines(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.SanitizeHtmlId(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.Sha(System.String,System.Text.Encoding)" />
        <element api="M:Zhaord.Extensions.StringExtensions.SplitPascalCase(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.SplitSafe(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.SplitToPair(System.String,System.String@,System.String@,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToAttribute(System.String,System.String,System.Boolean)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToCamelCase(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToEnum``1(System.String,``0)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToInt(System.Char)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToIntArray(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToIntArrayContains(System.String,System.Int32,System.Boolean)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToSafe(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToUnicode(System.Char)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToValidFileName(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.ToValidPath(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.TrimSafe(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.Truncate(System.String,System.Int32,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.UrlDecode(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.UrlEncode(System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" />
      </containers>
      <file name="e9b36efd-94ec-748a-0395-5b1b752299f8" />
    </api>
    <api id="Fields.T:Zhaord.Extensions.StringExtensions">
      <topicdata name="StringExtensions" group="list" subgroup="Fields" typeTopicId="T:Zhaord.Extensions.StringExtensions" />
      <apidata name="StringExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:Zhaord.Extensions.StringExtensions.CarriageReturn" />
        <element api="F:Zhaord.Extensions.StringExtensions.CarriageReturnLineFeed" />
        <element api="F:Zhaord.Extensions.StringExtensions.Empty" />
        <element api="F:Zhaord.Extensions.StringExtensions.LineFeed" />
        <element api="F:Zhaord.Extensions.StringExtensions.Tab" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" />
      </containers>
      <file name="afb108e6-daeb-4d6f-d1fc-bfc91a71323e" />
    </api>
    <api id="Overload:Zhaord.Extensions.StringExtensions.EncodeJsString">
      <topicdata name="EncodeJsString" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="EncodeJsString" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.StringExtensions.EncodeJsString(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.EncodeJsString(System.String,System.Char,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <file name="583c282a-c119-a7a8-c9d6-46ac35d49ba0" />
    </api>
    <api id="Overload:Zhaord.Extensions.StringExtensions.FormatWith">
      <topicdata name="FormatWith" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="FormatWith" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.StringExtensions.FormatWith(System.String,System.Object[])" />
        <element api="M:Zhaord.Extensions.StringExtensions.FormatWith(System.String,System.IFormatProvider,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <file name="5b0c4e1b-1926-51e1-ec4d-69504684b8a6" />
    </api>
    <api id="Overload:Zhaord.Extensions.StringExtensions.Indent">
      <topicdata name="Indent" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Indent" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.StringExtensions.Indent(System.String,System.Int32)" />
        <element api="M:Zhaord.Extensions.StringExtensions.Indent(System.String,System.Int32,System.Char)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <file name="1a302a35-84f9-fc98-9c7f-cf18082bae0d" />
    </api>
    <api id="Overload:Zhaord.Extensions.StringExtensions.IsEnclosedIn">
      <topicdata name="IsEnclosedIn" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="IsEnclosedIn" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.StringExtensions.IsEnclosedIn(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsEnclosedIn(System.String,System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsEnclosedIn(System.String,System.String,System.StringComparison)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsEnclosedIn(System.String,System.String,System.String,System.StringComparison)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <file name="f146c4f9-33fd-0d12-98a3-7c1176610178" />
    </api>
    <api id="Overload:Zhaord.Extensions.StringExtensions.IsMatch">
      <topicdata name="IsMatch" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="IsMatch" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.StringExtensions.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)" />
        <element api="M:Zhaord.Extensions.StringExtensions.IsMatch(System.String,System.String,System.Text.RegularExpressions.Match@,System.Text.RegularExpressions.RegexOptions)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <file name="9d3f5ad5-2092-3909-cd2f-b661f5f122a7" />
    </api>
    <api id="Overload:Zhaord.Extensions.StringExtensions.RemoveEncloser">
      <topicdata name="RemoveEncloser" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="RemoveEncloser" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.StringExtensions.RemoveEncloser(System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.RemoveEncloser(System.String,System.String,System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.RemoveEncloser(System.String,System.String,System.StringComparison)" />
        <element api="M:Zhaord.Extensions.StringExtensions.RemoveEncloser(System.String,System.String,System.String,System.StringComparison)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <file name="357d2ce1-b264-e895-76c1-13075352bb50" />
    </api>
    <api id="Overload:Zhaord.Extensions.StringExtensions.RemoveHtml">
      <topicdata name="RemoveHtml" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="RemoveHtml" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.StringExtensions.RemoveHtml(System.String)" />
        <element api="M:Zhaord.Extensions.StringExtensions.RemoveHtml(System.String,System.Collections.Generic.ICollection{System.String})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <file name="10d85676-77fa-8099-38a3-c747e11468ca" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.AttributeEncode(System.String)">
      <topicdata group="api" />
      <apidata name="AttributeEncode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="502844dc-509a-8eff-37b6-6041e7bfbd22" />
    </api>
    <api id="F:Zhaord.Extensions.StringExtensions.CarriageReturn">
      <topicdata group="api" />
      <apidata name="CarriageReturn" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <value />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <file name="085a72ef-5f09-d228-b0f9-3e35a8729776" />
    </api>
    <api id="F:Zhaord.Extensions.StringExtensions.CarriageReturnLineFeed">
      <topicdata group="api" />
      <apidata name="CarriageReturnLineFeed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <file name="da236841-261e-f586-5eae-d5e2a925a2b9" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.ContainsWhiteSpace(System.String)">
      <topicdata group="api" />
      <apidata name="ContainsWhiteSpace" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="d4d3d3ca-7ef1-0fe0-e873-48ccf5b2f7ef" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.Dump(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dump" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="appendMarks" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="9c879306-ca3d-e467-2214-8bb3969b689a" />
    </api>
    <api id="F:Zhaord.Extensions.StringExtensions.Empty">
      <topicdata group="api" />
      <apidata name="Empty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <file name="35e86a24-68ff-506d-0e99-61a48d7eea29" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.EmptyNull(System.String)">
      <topicdata group="api" />
      <apidata name="EmptyNull" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="709b17f8-27d0-8e3a-50a2-8abb11672a08" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.EncodeJsString(System.String)">
      <topicdata group="api" />
      <apidata name="EncodeJsString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.EncodeJsString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="f75083ee-25bd-8b07-77a3-f978085dedef" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.EncodeJsString(System.String,System.Char,System.Boolean)">
      <topicdata group="api" />
      <apidata name="EncodeJsString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.EncodeJsString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="delimiter">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="appendDelimiters">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="a44f7e2d-7c9d-b1cd-5283-f9fca8b633d4" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.EnsureEndsWith(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="EnsureEndsWith" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="endWith">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="21ece5a5-b36f-8389-5c57-4fbdc3df0f7f" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.EnsureNumericOnly(System.String)">
      <topicdata group="api" />
      <apidata name="EnsureNumericOnly" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="str">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="6bb5a224-e3ef-63e4-2bc0-38f38dfa5c7e" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.EnsureStartsWith(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="EnsureStartsWith" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="startsWith">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="38c249b6-88eb-2301-d395-14eb5e84316d" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.FormatCurrent(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="FormatCurrent" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="objects" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="92fd936b-64cb-4aad-ecfb-3d5143934f5c" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.FormatCurrentUI(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="FormatCurrentUI" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="objects" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="fab52dae-5908-ad66-dc52-dfd3d1cbc8b4" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.FormatInvariant(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="FormatInvariant" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="objects" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="37919e78-84b6-6d7a-d2ed-b1a9cdea1ba6" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.FormatWith(System.String,System.IFormatProvider,System.Object[])">
      <topicdata group="api" />
      <apidata name="FormatWith" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.FormatWith" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="7c4e448e-b420-7f69-1235-eb43fec09094" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.FormatWith(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="FormatWith" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.FormatWith" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="a2dc4ea8-6c3d-98ef-0eb5-3b660e9cf304" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.GetLength(System.String)">
      <topicdata group="api" />
      <apidata name="GetLength" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="b5cb35e0-9294-3111-9e2a-4092ed35d26e" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.Grow(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Grow" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="grow">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="delimiter">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="8e139376-4f94-a64e-5390-7db00fa68e27" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.Hash(System.String,System.Text.Encoding,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Hash" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
        <parameter name="toBase64" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="a8833b5e-8bd0-ba0e-c412-9bfb78b1c1aa" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.HasValue(System.String)">
      <topicdata group="api" />
      <apidata name="HasValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="8b5d6a7e-6ea6-aa90-fb83-ca4a36714a9d" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.HtmlDecode(System.String)">
      <topicdata group="api" />
      <apidata name="HtmlDecode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="6c04fa60-a2ea-4aca-e576-e08e9a2bbb7b" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.HtmlEncode(System.String)">
      <topicdata group="api" />
      <apidata name="HtmlEncode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="0b4f569d-5dfd-23df-b808-f9a231b3bef5" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.Indent(System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Indent" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.Indent" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="indentation">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="91dc8d01-0cf5-d5d5-a26a-fbbaf1adb097" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.Indent(System.String,System.Int32,System.Char)">
      <topicdata group="api" />
      <apidata name="Indent" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.Indent" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="indentation">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="indentChar">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="adda8519-6118-6a87-6849-c14fc1401295" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.IsAlpha(System.String)">
      <topicdata group="api" />
      <apidata name="IsAlpha" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="85b5e014-5591-e1a5-b5d5-e6d8f2daf822" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.IsAlphaNumeric(System.String)">
      <topicdata group="api" />
      <apidata name="IsAlphaNumeric" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="f56f2667-3543-61ae-e140-195a13ce7088" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.IsCaseInsensitiveEqual(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="IsCaseInsensitiveEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="comparing">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="3cb45626-f749-87d2-a511-6693dcef718a" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.IsCaseSensitiveEqual(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="IsCaseSensitiveEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="comparing">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="f47e4071-5357-9752-b795-cb6e68775fb7" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.IsEmail(System.String)">
      <topicdata group="api" />
      <apidata name="IsEmail" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="c241e4d9-c331-b939-6fbd-bea4695e3ae8" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.IsEmpty(System.String)">
      <topicdata group="api" />
      <apidata name="IsEmpty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="884185ad-b631-6dee-5cfb-6f9715bcd488" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.IsEnclosedIn(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="IsEnclosedIn" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.IsEnclosedIn" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="enclosedIn">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="505744bb-1000-f90e-dc73-7106bbeae080" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.IsEnclosedIn(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="IsEnclosedIn" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.IsEnclosedIn" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="start">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="end">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="f12b3a21-1ab8-7cf3-f2cd-0a480cc1bc2d" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.IsEnclosedIn(System.String,System.String,System.String,System.StringComparison)">
      <topicdata group="api" />
      <apidata name="IsEnclosedIn" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.IsEnclosedIn" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="start">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="end">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="comparisonType">
          <type api="T:System.StringComparison" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="c9f65dec-4d10-c5c6-7636-d6e370fa95fa" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.IsEnclosedIn(System.String,System.String,System.StringComparison)">
      <topicdata group="api" />
      <apidata name="IsEnclosedIn" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.IsEnclosedIn" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="enclosedIn">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="comparisonType">
          <type api="T:System.StringComparison" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="08e9ebd2-1130-4f23-c747-ca745cdff658" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.IsMatch(System.String,System.String,System.Text.RegularExpressions.Match@,System.Text.RegularExpressions.RegexOptions)">
      <topicdata group="api" />
      <apidata name="IsMatch" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.IsMatch" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pattern">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="match" out="true">
          <referenceTo>
            <type api="T:System.Text.RegularExpressions.Match" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="options" optional="true">
          <type api="T:System.Text.RegularExpressions.RegexOptions" ref="false" />
          <argument>
            <type api="T:System.Text.RegularExpressions.RegexOptions" ref="false" />
            <enumValue>
              <field name="None" />
              <field name="IgnoreCase" />
              <field name="Multiline" />
            </enumValue>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="a46ca5d6-665f-58d9-177c-e1d6ca9aeed5" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <topicdata group="api" />
      <apidata name="IsMatch" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.IsMatch" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pattern">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options" optional="true">
          <type api="T:System.Text.RegularExpressions.RegexOptions" ref="false" />
          <argument>
            <type api="T:System.Text.RegularExpressions.RegexOptions" ref="false" />
            <enumValue>
              <field name="None" />
              <field name="IgnoreCase" />
              <field name="Multiline" />
            </enumValue>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="ff9355f3-413c-4517-5ac1-95a00d5b887f" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.IsNumeric(System.String)">
      <topicdata group="api" />
      <apidata name="IsNumeric" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="dc4ab9a8-d5a1-9c31-d54c-97c2681ab427" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.IsWebUrl(System.String)">
      <topicdata group="api" />
      <apidata name="IsWebUrl" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="44115148-708f-424c-6382-b55511568327" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.IsWhiteSpace(System.String)">
      <topicdata group="api" />
      <apidata name="IsWhiteSpace" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="3257a997-b84c-9e0d-9e80-5a09875025c4" />
    </api>
    <api id="F:Zhaord.Extensions.StringExtensions.LineFeed">
      <topicdata group="api" />
      <apidata name="LineFeed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <value />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <file name="4e373f97-1d68-5cc9-26b2-4c26e6b8314f" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.Mask(System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Mask" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="45b479e7-30ac-c4a5-eb37-5244d11255ab" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.NaIfEmpty(System.String)">
      <topicdata group="api" />
      <apidata name="NaIfEmpty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="c3ea4748-c780-455d-3d2c-345bc676349c" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.NullEmpty(System.String)">
      <topicdata group="api" />
      <apidata name="NullEmpty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="f604c241-b8d2-ab02-36a5-122f5b2090f1" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.NumberLines(System.String)">
      <topicdata group="api" />
      <apidata name="NumberLines" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="9a50ca5c-908f-013b-5680-ce382f365612" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.Prettify(System.String,System.Boolean,System.Char[])">
      <topicdata group="api" />
      <apidata name="Prettify" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="allowSpace" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
        <parameter name="allowChars" optional="true">
          <arrayOf rank="1">
            <type api="T:System.Char" ref="false" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="660a0656-49c7-bdc4-03cb-177a993a82c8" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.RegexRemove(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <topicdata group="api" />
      <apidata name="RegexRemove" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pattern">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options" optional="true">
          <type api="T:System.Text.RegularExpressions.RegexOptions" ref="false" />
          <argument>
            <type api="T:System.Text.RegularExpressions.RegexOptions" ref="false" />
            <enumValue>
              <field name="None" />
              <field name="IgnoreCase" />
              <field name="Multiline" />
            </enumValue>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="5a4f150b-9b78-ff72-cee8-204334e75513" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.RegexReplace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <topicdata group="api" />
      <apidata name="RegexReplace" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pattern">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="replacement">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options" optional="true">
          <type api="T:System.Text.RegularExpressions.RegexOptions" ref="false" />
          <argument>
            <type api="T:System.Text.RegularExpressions.RegexOptions" ref="false" />
            <enumValue>
              <field name="None" />
              <field name="IgnoreCase" />
              <field name="Multiline" />
            </enumValue>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="c8d5f026-d0ea-342f-918c-70d93508ade8" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.RemoveEncloser(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="RemoveEncloser" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.RemoveEncloser" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encloser">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="9e9b465c-bd76-1859-9158-993efac48281" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.RemoveEncloser(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="RemoveEncloser" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.RemoveEncloser" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="start">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="end">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="be0f8129-e1ab-e836-a79e-039fc3c071fe" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.RemoveEncloser(System.String,System.String,System.String,System.StringComparison)">
      <topicdata group="api" />
      <apidata name="RemoveEncloser" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.RemoveEncloser" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="start">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="end">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="comparisonType">
          <type api="T:System.StringComparison" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="27d00fc4-87cd-c078-e8b9-f3096d7159f7" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.RemoveEncloser(System.String,System.String,System.StringComparison)">
      <topicdata group="api" />
      <apidata name="RemoveEncloser" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.RemoveEncloser" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encloser">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="comparisonType">
          <type api="T:System.StringComparison" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="1c77ecfe-1f6c-716a-4f96-e88c8fdbdc9a" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.RemoveHtml(System.String)">
      <topicdata group="api" />
      <apidata name="RemoveHtml" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.RemoveHtml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="d522587d-2554-c911-43f9-a5171c8f00d8" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.RemoveHtml(System.String,System.Collections.Generic.ICollection{System.String})">
      <topicdata group="api" />
      <apidata name="RemoveHtml" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.StringExtensions.RemoveHtml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="removeTags">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="50fd3139-9a9c-4352-96c7-3b46c8907153" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.RemoveInvalidXmlChars(System.String)">
      <topicdata group="api" />
      <apidata name="RemoveInvalidXmlChars" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="8a91803f-0a16-ca5a-89b0-9f8c1e5ebe7b" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.Replace(System.String,System.Int32,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="Replace" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="x1">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="x2">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="replaceBy" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="8d03fb15-026b-f7e8-5905-341f8dfe00c3" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.ReplaceCsvChars(System.String)">
      <topicdata group="api" />
      <apidata name="ReplaceCsvChars" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="aeefd215-eee1-67de-ce56-b088d35ccff7" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.ReplaceNewLines(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ReplaceNewLines" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="replacement">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="22020516-c5c2-136d-544a-3bf27c34a69d" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.SanitizeHtmlId(System.String)">
      <topicdata group="api" />
      <apidata name="SanitizeHtmlId" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="788f0fca-57ba-747a-eec5-b5ea6435e618" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.Sha(System.String,System.Text.Encoding)">
      <topicdata group="api" />
      <apidata name="Sha" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="669529cf-366a-a80d-fc02-c707e70d4443" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.SplitPascalCase(System.String)">
      <topicdata group="api" />
      <apidata name="SplitPascalCase" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="295383a7-c118-4f24-f564-e51bd18bd726" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.SplitSafe(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="SplitSafe" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="separator">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="8eec2979-aee8-5ab6-f7d4-7ed36bda97c4" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.SplitToPair(System.String,System.String@,System.String@,System.String)">
      <topicdata group="api" />
      <apidata name="SplitToPair" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="strLeft" out="true">
          <referenceTo>
            <type api="T:System.String" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="strRight" out="true">
          <referenceTo>
            <type api="T:System.String" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="delimiter">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="bd330e03-ae00-8537-74e1-f1e466d3504a" />
    </api>
    <api id="F:Zhaord.Extensions.StringExtensions.Tab">
      <topicdata group="api" />
      <apidata name="Tab" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <value />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <file name="b3a3f1a5-f04d-8548-c951-91004c352e7a" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.ToAttribute(System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="ToAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="htmlEncode" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="b1511c31-5527-2bbe-c4d2-f616976388b3" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.ToCamelCase(System.String)">
      <topicdata group="api" />
      <apidata name="ToCamelCase" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="95acc192-b000-cdef-c15e-50e10a5e9986" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.ToEnum``1(System.String,``0)">
      <topicdata group="api" />
      <apidata name="ToEnum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultValue">
          <template name="T" index="0" api="M:Zhaord.Extensions.StringExtensions.ToEnum``1(System.String,``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Extensions.StringExtensions.ToEnum``1(System.String,``0)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="9c861676-9d58-439c-f157-2d3bd88ae205" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.ToInt(System.Char)">
      <topicdata group="api" />
      <apidata name="ToInt" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="4a5cd87a-c3be-e0e4-c5ce-88e7fb96da80" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.ToIntArray(System.String)">
      <topicdata group="api" />
      <apidata name="ToIntArray" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Int32" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="7e30a819-3fe3-e204-cfee-d16ff4ba9234" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.ToIntArrayContains(System.String,System.Int32,System.Boolean)">
      <topicdata group="api" />
      <apidata name="ToIntArrayContains" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="defaultValue">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="7c9b597a-b946-77fe-27a8-5631b3634d22" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.ToSafe(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ToSafe" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultValue" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="11cf8dba-efaa-122d-44f2-1048a8b20c13" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.ToUnicode(System.Char)">
      <topicdata group="api" />
      <apidata name="ToUnicode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="c">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="044db28f-c9a9-3a98-eb95-4b7c1f3c01f4" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.ToValidFileName(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ToValidFileName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="replacement" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>-</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="8ff1030d-3a82-2aa3-6249-099a42feed4a" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.ToValidPath(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ToValidPath" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="replacement" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>-</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="41454b71-d29f-d523-2c01-e1f16ecb1b9b" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.TrimSafe(System.String)">
      <topicdata group="api" />
      <apidata name="TrimSafe" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="4acd3607-ca1f-ec65-47ed-af8e63909e5d" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.Truncate(System.String,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="Truncate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="maxLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="suffix" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="7218e6cf-6bd3-e960-c081-c7e1c2e750f4" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.UrlDecode(System.String)">
      <topicdata group="api" />
      <apidata name="UrlDecode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="831a5977-2158-1bbf-0cb2-ede08bd64faa" />
    </api>
    <api id="M:Zhaord.Extensions.StringExtensions.UrlEncode(System.String)">
      <topicdata group="api" />
      <apidata name="UrlEncode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.StringExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="cdc8f684-1ab5-ed83-bf51-3316714535c8" />
    </api>
    <api id="T:Zhaord.Extensions.TypeDescriptorExtensions">
      <topicdata group="api" />
      <apidata name="TypeDescriptorExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes">
          <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes``1(System.ComponentModel.ICustomTypeDescriptor)" />
          <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes``1(System.ComponentModel.PropertyDescriptor)" />
          <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes``1(System.ComponentModel.PropertyDescriptor,System.Func{``0,System.Boolean})" />
        </element>
        <element api="Overload:Zhaord.Extensions.TypeDescriptorExtensions.GetPropertiesWith">
          <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetPropertiesWith``1(System.ComponentModel.ICustomTypeDescriptor)" />
          <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetPropertiesWith``1(System.ComponentModel.ICustomTypeDescriptor,System.Func{``0,System.Boolean})" />
        </element>
        <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetProperty(System.ComponentModel.ICustomTypeDescriptor,System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="d5a5213a-78e0-a4bb-b065-a488342eb6ec" />
    </api>
    <api id="Methods.T:Zhaord.Extensions.TypeDescriptorExtensions">
      <topicdata name="TypeDescriptorExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.TypeDescriptorExtensions" />
      <apidata name="TypeDescriptorExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes">
          <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes``1(System.ComponentModel.ICustomTypeDescriptor)" />
          <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes``1(System.ComponentModel.PropertyDescriptor)" />
          <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes``1(System.ComponentModel.PropertyDescriptor,System.Func{``0,System.Boolean})" />
        </element>
        <element api="Overload:Zhaord.Extensions.TypeDescriptorExtensions.GetPropertiesWith">
          <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetPropertiesWith``1(System.ComponentModel.ICustomTypeDescriptor)" />
          <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetPropertiesWith``1(System.ComponentModel.ICustomTypeDescriptor,System.Func{``0,System.Boolean})" />
        </element>
        <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetProperty(System.ComponentModel.ICustomTypeDescriptor,System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeDescriptorExtensions" />
      </containers>
      <file name="390c49d6-9eb8-0eca-9350-10f4c93b3117" />
    </api>
    <api id="Overload:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes">
      <topicdata name="GetAttributes" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="GetAttributes" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes``1(System.ComponentModel.ICustomTypeDescriptor)" />
        <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes``1(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes``1(System.ComponentModel.PropertyDescriptor,System.Func{``0,System.Boolean})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeDescriptorExtensions" ref="true" />
      </containers>
      <file name="66bf9404-bc5c-248d-1c62-87017dba3f17" />
    </api>
    <api id="Overload:Zhaord.Extensions.TypeDescriptorExtensions.GetPropertiesWith">
      <topicdata name="GetPropertiesWith" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="GetPropertiesWith" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetPropertiesWith``1(System.ComponentModel.ICustomTypeDescriptor)" />
        <element api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetPropertiesWith``1(System.ComponentModel.ICustomTypeDescriptor,System.Func{``0,System.Boolean})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeDescriptorExtensions" ref="true" />
      </containers>
      <file name="e5a04f52-e37c-715e-041a-8cf42966b4ce" />
    </api>
    <api id="M:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes``1(System.ComponentModel.ICustomTypeDescriptor)">
      <topicdata group="api" />
      <apidata name="GetAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAttribute">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="td">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TAttribute" index="0" api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes``1(System.ComponentModel.ICustomTypeDescriptor)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeDescriptorExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="bc6d26a5-a1ba-bc59-4027-edc60c1dd7df" />
    </api>
    <api id="M:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes``1(System.ComponentModel.PropertyDescriptor)">
      <topicdata group="api" />
      <apidata name="GetAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAttribute">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="pd">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TAttribute" index="0" api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes``1(System.ComponentModel.PropertyDescriptor)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeDescriptorExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="c3ba09e3-194a-e5f4-4e62-4dea9d2cd3bc" />
    </api>
    <api id="M:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes``1(System.ComponentModel.PropertyDescriptor,System.Func{``0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="GetAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAttribute">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="pd">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TAttribute" index="0" api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes``1(System.ComponentModel.PropertyDescriptor,System.Func{``0,System.Boolean})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TAttribute" index="0" api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetAttributes``1(System.ComponentModel.PropertyDescriptor,System.Func{``0,System.Boolean})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeDescriptorExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="2412c2a1-8eae-1490-7026-144cce8aa221" />
    </api>
    <api id="M:Zhaord.Extensions.TypeDescriptorExtensions.GetPropertiesWith``1(System.ComponentModel.ICustomTypeDescriptor)">
      <topicdata group="api" />
      <apidata name="GetPropertiesWith" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.TypeDescriptorExtensions.GetPropertiesWith" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAttribute">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="td">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeDescriptorExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="006ed428-0362-de03-cade-f1ec159afc49" />
    </api>
    <api id="M:Zhaord.Extensions.TypeDescriptorExtensions.GetPropertiesWith``1(System.ComponentModel.ICustomTypeDescriptor,System.Func{``0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="GetPropertiesWith" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.TypeDescriptorExtensions.GetPropertiesWith" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAttribute">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="td">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TAttribute" index="0" api="M:Zhaord.Extensions.TypeDescriptorExtensions.GetPropertiesWith``1(System.ComponentModel.ICustomTypeDescriptor,System.Func{``0,System.Boolean})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeDescriptorExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="081a03d2-0b26-ebf7-6ddb-6d06c3e40b08" />
    </api>
    <api id="M:Zhaord.Extensions.TypeDescriptorExtensions.GetProperty(System.ComponentModel.ICustomTypeDescriptor,System.String)">
      <topicdata group="api" />
      <apidata name="GetProperty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="td">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeDescriptorExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="642fca35-290b-1472-e8c1-3b5cf8983d54" />
    </api>
    <api id="T:Zhaord.Extensions.TypeExtensions">
      <topicdata group="api" />
      <apidata name="TypeExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.Extensions.TypeExtensions.AssemblyQualifiedNameWithoutVersion(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.CanReadValue(System.Reflection.MemberInfo)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.CanSetValue(System.Reflection.MemberInfo)" />
        <element api="Overload:Zhaord.Extensions.TypeExtensions.CreateGeneric">
          <element api="M:Zhaord.Extensions.TypeExtensions.CreateGeneric(System.Type,System.Type,System.Object[])" />
          <element api="M:Zhaord.Extensions.TypeExtensions.CreateGeneric(System.Type,System.Type[],System.Object[])" />
          <element api="M:Zhaord.Extensions.TypeExtensions.CreateGeneric(System.Type,System.Type[],System.Func{System.Type,System.Object[],System.Object},System.Object[])" />
        </element>
        <element api="M:Zhaord.Extensions.TypeExtensions.CreateGenericList(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.FindMembers(System.Type,System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetAllAttributes``1(System.Reflection.MemberInfo,System.Boolean)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetAttribute``1(System.Reflection.ICustomAttributeProvider,System.Boolean)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetAttributes``1(System.Reflection.ICustomAttributeProvider,System.Boolean)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetFieldOrProperty(System.Type,System.String,System.Boolean)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetFieldsAndProperties(System.Type,System.Reflection.BindingFlags)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetNameAndAssemblyName(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetNonNullableType(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetPropertyFromMethod(System.Reflection.MethodBase)" />
        <element api="Overload:Zhaord.Extensions.TypeExtensions.GetSingleMember">
          <element api="M:Zhaord.Extensions.TypeExtensions.GetSingleMember(System.Type,System.String,System.Reflection.MemberTypes)" />
          <element api="M:Zhaord.Extensions.TypeExtensions.GetSingleMember(System.Type,System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" />
        </element>
        <element api="M:Zhaord.Extensions.TypeExtensions.GetValue(System.Reflection.MemberInfo,System.Object)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.HasAttribute``1(System.Reflection.ICustomAttributeProvider,System.Boolean)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.HasDefaultConstructor(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsAnonymous(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsConstructable(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsEnumerable(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsGenericDictionary(System.Type)" />
        <element api="Overload:Zhaord.Extensions.TypeExtensions.IsIndexed">
          <element api="M:Zhaord.Extensions.TypeExtensions.IsIndexed(System.Reflection.MemberInfo)" />
          <element api="M:Zhaord.Extensions.TypeExtensions.IsIndexed(System.Reflection.PropertyInfo)" />
        </element>
        <element api="M:Zhaord.Extensions.TypeExtensions.IsInteger(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsNullable(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsNullAssignable(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsPredefinedGenericType(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsPredefinedSimpleType(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsPredefinedType(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsSequenceType(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsStruct(System.Type)" />
        <element api="Overload:Zhaord.Extensions.TypeExtensions.IsSubClass">
          <element api="M:Zhaord.Extensions.TypeExtensions.IsSubClass(System.Type,System.Type)" />
          <element api="M:Zhaord.Extensions.TypeExtensions.IsSubClass(System.Type,System.Type,System.Type@)" />
        </element>
        <element api="M:Zhaord.Extensions.TypeExtensions.IsType``1(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.SetValue(System.Reflection.MemberInfo,System.Object,System.Object)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="0a5c6af3-9632-eca5-e99d-cbcc252d08ef" />
    </api>
    <api id="Methods.T:Zhaord.Extensions.TypeExtensions">
      <topicdata name="TypeExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.TypeExtensions" />
      <apidata name="TypeExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Extensions.TypeExtensions.AssemblyQualifiedNameWithoutVersion(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.CanReadValue(System.Reflection.MemberInfo)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.CanSetValue(System.Reflection.MemberInfo)" />
        <element api="Overload:Zhaord.Extensions.TypeExtensions.CreateGeneric">
          <element api="M:Zhaord.Extensions.TypeExtensions.CreateGeneric(System.Type,System.Type,System.Object[])" />
          <element api="M:Zhaord.Extensions.TypeExtensions.CreateGeneric(System.Type,System.Type[],System.Object[])" />
          <element api="M:Zhaord.Extensions.TypeExtensions.CreateGeneric(System.Type,System.Type[],System.Func{System.Type,System.Object[],System.Object},System.Object[])" />
        </element>
        <element api="M:Zhaord.Extensions.TypeExtensions.CreateGenericList(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.FindMembers(System.Type,System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetAllAttributes``1(System.Reflection.MemberInfo,System.Boolean)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetAttribute``1(System.Reflection.ICustomAttributeProvider,System.Boolean)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetAttributes``1(System.Reflection.ICustomAttributeProvider,System.Boolean)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetFieldOrProperty(System.Type,System.String,System.Boolean)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetFieldsAndProperties(System.Type,System.Reflection.BindingFlags)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetNameAndAssemblyName(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetNonNullableType(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetPropertyFromMethod(System.Reflection.MethodBase)" />
        <element api="Overload:Zhaord.Extensions.TypeExtensions.GetSingleMember">
          <element api="M:Zhaord.Extensions.TypeExtensions.GetSingleMember(System.Type,System.String,System.Reflection.MemberTypes)" />
          <element api="M:Zhaord.Extensions.TypeExtensions.GetSingleMember(System.Type,System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" />
        </element>
        <element api="M:Zhaord.Extensions.TypeExtensions.GetValue(System.Reflection.MemberInfo,System.Object)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.HasAttribute``1(System.Reflection.ICustomAttributeProvider,System.Boolean)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.HasDefaultConstructor(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsAnonymous(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsConstructable(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsEnumerable(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsGenericDictionary(System.Type)" />
        <element api="Overload:Zhaord.Extensions.TypeExtensions.IsIndexed">
          <element api="M:Zhaord.Extensions.TypeExtensions.IsIndexed(System.Reflection.MemberInfo)" />
          <element api="M:Zhaord.Extensions.TypeExtensions.IsIndexed(System.Reflection.PropertyInfo)" />
        </element>
        <element api="M:Zhaord.Extensions.TypeExtensions.IsInteger(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsNullable(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsNullAssignable(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsPredefinedGenericType(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsPredefinedSimpleType(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsPredefinedType(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsSequenceType(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsStruct(System.Type)" />
        <element api="Overload:Zhaord.Extensions.TypeExtensions.IsSubClass">
          <element api="M:Zhaord.Extensions.TypeExtensions.IsSubClass(System.Type,System.Type)" />
          <element api="M:Zhaord.Extensions.TypeExtensions.IsSubClass(System.Type,System.Type,System.Type@)" />
        </element>
        <element api="M:Zhaord.Extensions.TypeExtensions.IsType``1(System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.SetValue(System.Reflection.MemberInfo,System.Object,System.Object)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" />
      </containers>
      <file name="116e1fdf-21ab-24c4-5f07-9256e2aa8bf6" />
    </api>
    <api id="Overload:Zhaord.Extensions.TypeExtensions.CreateGeneric">
      <topicdata name="CreateGeneric" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="CreateGeneric" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.TypeExtensions.CreateGeneric(System.Type,System.Type,System.Object[])" />
        <element api="M:Zhaord.Extensions.TypeExtensions.CreateGeneric(System.Type,System.Type[],System.Object[])" />
        <element api="M:Zhaord.Extensions.TypeExtensions.CreateGeneric(System.Type,System.Type[],System.Func{System.Type,System.Object[],System.Object},System.Object[])" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <file name="f54a7cfa-0af4-d8fb-5c6c-10cee03a76ac" />
    </api>
    <api id="Overload:Zhaord.Extensions.TypeExtensions.GetSingleMember">
      <topicdata name="GetSingleMember" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="GetSingleMember" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.TypeExtensions.GetSingleMember(System.Type,System.String,System.Reflection.MemberTypes)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.GetSingleMember(System.Type,System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <file name="8713d1a5-c80b-36e3-e5dd-f16eeae99ac6" />
    </api>
    <api id="Overload:Zhaord.Extensions.TypeExtensions.IsIndexed">
      <topicdata name="IsIndexed" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="IsIndexed" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.TypeExtensions.IsIndexed(System.Reflection.MemberInfo)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsIndexed(System.Reflection.PropertyInfo)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <file name="5df11f4e-015d-7cf3-0bb2-b162470b0f90" />
    </api>
    <api id="Overload:Zhaord.Extensions.TypeExtensions.IsSubClass">
      <topicdata name="IsSubClass" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="IsSubClass" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.TypeExtensions.IsSubClass(System.Type,System.Type)" />
        <element api="M:Zhaord.Extensions.TypeExtensions.IsSubClass(System.Type,System.Type,System.Type@)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <file name="3caa794b-6837-6a8e-a6b2-1f0b77cf04f2" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.AssemblyQualifiedNameWithoutVersion(System.Type)">
      <topicdata group="api" />
      <apidata name="AssemblyQualifiedNameWithoutVersion" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="84bc50ed-309a-afd7-8f33-bbeb570e78a7" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.CanReadValue(System.Reflection.MemberInfo)">
      <topicdata group="api" />
      <apidata name="CanReadValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="member">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="95888bb3-4ebb-6680-cc29-7277697a2bfb" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.CanSetValue(System.Reflection.MemberInfo)">
      <topicdata group="api" />
      <apidata name="CanSetValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="member">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="6d125bc3-b67a-ed9c-765b-060aecfdebb1" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.CreateGeneric(System.Type,System.Type,System.Object[])">
      <topicdata group="api" />
      <apidata name="CreateGeneric" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.TypeExtensions.CreateGeneric" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="genericTypeDefinition">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="innerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="db993108-ef2a-b660-d5f4-9c8cd8bbcfe4" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.CreateGeneric(System.Type,System.Type[],System.Func{System.Type,System.Object[],System.Object},System.Object[])">
      <topicdata group="api" />
      <apidata name="CreateGeneric" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.TypeExtensions.CreateGeneric" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="genericTypeDefinition">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="innerTypes">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="instanceCreator">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
              <arrayOf rank="1">
                <type api="T:System.Object" ref="true" />
              </arrayOf>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="8eebdf9d-0c29-db7a-12c7-a0ea5303e632" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.CreateGeneric(System.Type,System.Type[],System.Object[])">
      <topicdata group="api" />
      <apidata name="CreateGeneric" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.TypeExtensions.CreateGeneric" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="genericTypeDefinition">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="innerTypes">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="f554ca14-2bb0-53d3-7537-fb45cd4056de" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.CreateGenericList(System.Type)">
      <topicdata group="api" />
      <apidata name="CreateGenericList" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="listType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.IList" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="38804a41-a027-5dec-01d7-e4de0ac9d593" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.FindMembers(System.Type,System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
      <topicdata group="api" />
      <apidata name="FindMembers" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="memberType">
          <type api="T:System.Reflection.MemberTypes" ref="false" />
        </parameter>
        <parameter name="bindingAttr">
          <type api="T:System.Reflection.BindingFlags" ref="false" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.Reflection.MemberFilter" ref="true" />
        </parameter>
        <parameter name="filterCriteria">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Reflection.MemberInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="8623e7e9-a2c0-d8ac-e264-52b22fd8a32c" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.GetAllAttributes``1(System.Reflection.MemberInfo,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetAllAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAttribute">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="member">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
        <parameter name="inherits">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <template name="TAttribute" index="0" api="M:Zhaord.Extensions.TypeExtensions.GetAllAttributes``1(System.Reflection.MemberInfo,System.Boolean)" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="725c83eb-9bdf-1fba-81e0-b9c38d128fea" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.GetAttribute``1(System.Reflection.ICustomAttributeProvider,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAttribute">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="target">
          <type api="T:System.Reflection.ICustomAttributeProvider" ref="true" />
        </parameter>
        <parameter name="inherits">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="TAttribute" index="0" api="M:Zhaord.Extensions.TypeExtensions.GetAttribute``1(System.Reflection.ICustomAttributeProvider,System.Boolean)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="2a940b17-4c02-847b-15d4-ab39a2d674a9" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.GetAttributes``1(System.Reflection.ICustomAttributeProvider,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAttribute">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="target">
          <type api="T:System.Reflection.ICustomAttributeProvider" ref="true" />
        </parameter>
        <parameter name="inherits">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <template name="TAttribute" index="0" api="M:Zhaord.Extensions.TypeExtensions.GetAttributes``1(System.Reflection.ICustomAttributeProvider,System.Boolean)" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="3fc86cdf-03d2-6701-cc1d-eaf4a3437736" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.GetFieldOrProperty(System.Type,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetFieldOrProperty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ignoreCase">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Reflection.MemberInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="d951e5cf-51b5-4670-0dbf-e09ab8cf1357" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.GetFieldsAndProperties(System.Type,System.Reflection.BindingFlags)">
      <topicdata group="api" />
      <apidata name="GetFieldsAndProperties" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="bindingAttr">
          <type api="T:System.Reflection.BindingFlags" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Reflection.MemberInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="b4bd866c-bafc-4ef4-9ed6-e0af1157a88a" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.GetNameAndAssemblyName(System.Type)">
      <topicdata group="api" />
      <apidata name="GetNameAndAssemblyName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="e8188018-2146-3d09-d5a2-2ce19de4e396" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.GetNonNullableType(System.Type)">
      <topicdata group="api" />
      <apidata name="GetNonNullableType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="4ac49281-bbfc-1a0a-9204-3f113ac1d9cd" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.GetPropertyFromMethod(System.Reflection.MethodBase)">
      <topicdata group="api" />
      <apidata name="GetPropertyFromMethod" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="method">
          <type api="T:System.Reflection.MethodBase" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Reflection.PropertyInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="3bf28f66-d681-5242-d01a-97139445bdc7" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.GetSingleMember(System.Type,System.String,System.Reflection.MemberTypes)">
      <topicdata group="api" />
      <apidata name="GetSingleMember" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.TypeExtensions.GetSingleMember" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="memberTypes">
          <type api="T:System.Reflection.MemberTypes" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Reflection.MemberInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="07332454-4c79-9058-c584-cead5c200473" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.GetSingleMember(System.Type,System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
      <topicdata group="api" />
      <apidata name="GetSingleMember" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.TypeExtensions.GetSingleMember" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="memberTypes">
          <type api="T:System.Reflection.MemberTypes" ref="false" />
        </parameter>
        <parameter name="bindingAttr">
          <type api="T:System.Reflection.BindingFlags" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Reflection.MemberInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="2cab1f58-3a20-052a-812f-796f2d53154b" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.GetValue(System.Reflection.MemberInfo,System.Object)">
      <topicdata group="api" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="member">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="818b425b-46c2-1f0e-c708-b952862bcbe5" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.HasAttribute``1(System.Reflection.ICustomAttributeProvider,System.Boolean)">
      <topicdata group="api" />
      <apidata name="HasAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAttribute">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="target">
          <type api="T:System.Reflection.ICustomAttributeProvider" ref="true" />
        </parameter>
        <parameter name="inherits">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="ecba1a7f-abbe-0cc5-2fca-9156ef01ceed" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.HasDefaultConstructor(System.Type)">
      <topicdata group="api" />
      <apidata name="HasDefaultConstructor" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="6b93ed56-d7bc-59b4-1a6d-9d8db45bf42e" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsAnonymous(System.Type)">
      <topicdata group="api" />
      <apidata name="IsAnonymous" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="6aa3f0c7-8c8c-98f5-6028-9b13d453ac0e" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsConstructable(System.Type)">
      <topicdata group="api" />
      <apidata name="IsConstructable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="1f1854ee-65a1-c3b4-0a56-d6e73036be67" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsEnumerable(System.Type)">
      <topicdata group="api" />
      <apidata name="IsEnumerable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="9194c104-bee3-b161-1653-a7ce095a01f9" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsGenericDictionary(System.Type)">
      <topicdata group="api" />
      <apidata name="IsGenericDictionary" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="e74baedb-071b-c59a-2e15-78c3efbece20" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsIndexed(System.Reflection.MemberInfo)">
      <topicdata group="api" />
      <apidata name="IsIndexed" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.TypeExtensions.IsIndexed" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="member">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="621aeaa4-5828-1f75-91b9-13fdf7a6ca85" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsIndexed(System.Reflection.PropertyInfo)">
      <topicdata group="api" />
      <apidata name="IsIndexed" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.TypeExtensions.IsIndexed" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="property">
          <type api="T:System.Reflection.PropertyInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="c40ec7d4-653b-6161-bc9b-b629530ea3f9" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsInteger(System.Type)">
      <topicdata group="api" />
      <apidata name="IsInteger" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="9940d924-de83-8fad-0267-ca1468fc16ff" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsNullable(System.Type)">
      <topicdata group="api" />
      <apidata name="IsNullable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="76ad2ddd-4c12-2c25-0058-3920197c5df6" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsNullAssignable(System.Type)">
      <topicdata group="api" />
      <apidata name="IsNullAssignable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="c8a41e04-f087-587b-a9f0-d4e043b38c64" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsPredefinedGenericType(System.Type)">
      <topicdata group="api" />
      <apidata name="IsPredefinedGenericType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="9b237528-20b2-a73b-65c2-375ba1a21469" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsPredefinedSimpleType(System.Type)">
      <topicdata group="api" />
      <apidata name="IsPredefinedSimpleType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="b0330847-54d1-cbdf-91ed-6ea5d9608cd2" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsPredefinedType(System.Type)">
      <topicdata group="api" />
      <apidata name="IsPredefinedType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="0163fc12-f1d9-ff83-56cf-5083ad623d89" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsSequenceType(System.Type)">
      <topicdata group="api" />
      <apidata name="IsSequenceType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="seqType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="ffb09506-7ae7-8c6c-4078-977eae6759d9" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsStruct(System.Type)">
      <topicdata group="api" />
      <apidata name="IsStruct" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="d27cb358-c7f6-a977-0c52-29ebd559be2a" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsSubClass(System.Type,System.Type)">
      <topicdata group="api" />
      <apidata name="IsSubClass" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.TypeExtensions.IsSubClass" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="check">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="cdcd60e5-93de-44f4-db4f-31c515405255" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsSubClass(System.Type,System.Type,System.Type@)">
      <topicdata group="api" />
      <apidata name="IsSubClass" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.TypeExtensions.IsSubClass" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="check">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="implementingType" out="true">
          <referenceTo>
            <type api="T:System.Type" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="24b593e8-6487-6aa5-eb0a-3d68ac7c04b9" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.IsType``1(System.Type)">
      <topicdata group="api" />
      <apidata name="IsType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TType" />
      </templates>
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="460c6b1f-da3b-1df9-7b5e-0e33f1e6c004" />
    </api>
    <api id="M:Zhaord.Extensions.TypeExtensions.SetValue(System.Reflection.MemberInfo,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="SetValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="member">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.TypeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="ba63e1da-e6c8-04e8-d8ba-e2e108d6bc78" />
    </api>
    <api id="T:Zhaord.Extensions.XmlNodeExtensions">
      <topicdata group="api" />
      <apidata name="XmlNodeExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Zhaord.Extensions.XmlNodeExtensions.GetAttributeText">
          <element api="M:Zhaord.Extensions.XmlNodeExtensions.GetAttributeText(System.Xml.XmlNode,System.String)" />
          <element api="M:Zhaord.Extensions.XmlNodeExtensions.GetAttributeText``1(System.Xml.XmlNode,System.String,``0)" />
        </element>
        <element api="Overload:Zhaord.Extensions.XmlNodeExtensions.GetText">
          <element api="M:Zhaord.Extensions.XmlNodeExtensions.GetText(System.Xml.XmlNode,System.String,System.String)" />
          <element api="M:Zhaord.Extensions.XmlNodeExtensions.GetText``1(System.Xml.XmlNode,System.String,``0)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="e954cab7-a70d-54f3-1c39-ef9bde18417b" />
    </api>
    <api id="Methods.T:Zhaord.Extensions.XmlNodeExtensions">
      <topicdata name="XmlNodeExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.XmlNodeExtensions" />
      <apidata name="XmlNodeExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:Zhaord.Extensions.XmlNodeExtensions.GetAttributeText">
          <element api="M:Zhaord.Extensions.XmlNodeExtensions.GetAttributeText(System.Xml.XmlNode,System.String)" />
          <element api="M:Zhaord.Extensions.XmlNodeExtensions.GetAttributeText``1(System.Xml.XmlNode,System.String,``0)" />
        </element>
        <element api="Overload:Zhaord.Extensions.XmlNodeExtensions.GetText">
          <element api="M:Zhaord.Extensions.XmlNodeExtensions.GetText(System.Xml.XmlNode,System.String,System.String)" />
          <element api="M:Zhaord.Extensions.XmlNodeExtensions.GetText``1(System.Xml.XmlNode,System.String,``0)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.XmlNodeExtensions" />
      </containers>
      <file name="9b270f43-303e-e742-ed67-cea6875cbe37" />
    </api>
    <api id="Overload:Zhaord.Extensions.XmlNodeExtensions.GetAttributeText">
      <topicdata name="GetAttributeText" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="GetAttributeText" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.XmlNodeExtensions.GetAttributeText(System.Xml.XmlNode,System.String)" />
        <element api="M:Zhaord.Extensions.XmlNodeExtensions.GetAttributeText``1(System.Xml.XmlNode,System.String,``0)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.XmlNodeExtensions" ref="true" />
      </containers>
      <file name="65334129-bf12-5345-de24-e75ddb10d0ee" />
    </api>
    <api id="Overload:Zhaord.Extensions.XmlNodeExtensions.GetText">
      <topicdata name="GetText" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="GetText" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Extensions.XmlNodeExtensions.GetText(System.Xml.XmlNode,System.String,System.String)" />
        <element api="M:Zhaord.Extensions.XmlNodeExtensions.GetText``1(System.Xml.XmlNode,System.String,``0)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.XmlNodeExtensions" ref="true" />
      </containers>
      <file name="87e7e333-c3f6-58b8-9dc3-70f5eeb1831d" />
    </api>
    <api id="M:Zhaord.Extensions.XmlNodeExtensions.GetAttributeText(System.Xml.XmlNode,System.String)">
      <topicdata group="api" />
      <apidata name="GetAttributeText" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.XmlNodeExtensions.GetAttributeText" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
        <parameter name="attributeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.XmlNodeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="7dfa1d9e-679c-929a-ff2e-2866b7995301" />
    </api>
    <api id="M:Zhaord.Extensions.XmlNodeExtensions.GetAttributeText``1(System.Xml.XmlNode,System.String,``0)">
      <topicdata group="api" />
      <apidata name="GetAttributeText" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.XmlNodeExtensions.GetAttributeText" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="node">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
        <parameter name="attributeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultValue" optional="true">
          <template name="T" index="0" api="M:Zhaord.Extensions.XmlNodeExtensions.GetAttributeText``1(System.Xml.XmlNode,System.String,``0)" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Extensions.XmlNodeExtensions.GetAttributeText``1(System.Xml.XmlNode,System.String,``0)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.XmlNodeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="abbd0f12-e84f-738d-24b2-cc6ea0275f45" />
    </api>
    <api id="M:Zhaord.Extensions.XmlNodeExtensions.GetText(System.Xml.XmlNode,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="GetText" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.XmlNodeExtensions.GetText" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
        <parameter name="xpath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="defaultValue" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.XmlNodeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="332e2573-1529-7e3e-91f2-363f5bd6a28a" />
    </api>
    <api id="M:Zhaord.Extensions.XmlNodeExtensions.GetText``1(System.Xml.XmlNode,System.String,``0)">
      <topicdata group="api" />
      <apidata name="GetText" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Extensions.XmlNodeExtensions.GetText" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="node">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
        <parameter name="xpath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="defaultValue" optional="true">
          <template name="T" index="0" api="M:Zhaord.Extensions.XmlNodeExtensions.GetText``1(System.Xml.XmlNode,System.String,``0)" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Extensions.XmlNodeExtensions.GetText``1(System.Xml.XmlNode,System.String,``0)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.XmlNodeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="77683bd2-2e05-90e3-7549-bf7e37b8745e" />
    </api>
    <api id="T:Zhaord.Extensions.XmlWriterExtensions">
      <topicdata group="api" />
      <apidata name="XmlWriterExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.Extensions.XmlWriterExtensions.WriteCData(System.Xml.XmlWriter,System.String,System.String,System.String,System.String)" />
        <element api="M:Zhaord.Extensions.XmlWriterExtensions.WriteNode(System.Xml.XmlWriter,System.String,System.Action)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="012a679f-5bc3-b170-9154-a3027f85e4d5" />
    </api>
    <api id="Methods.T:Zhaord.Extensions.XmlWriterExtensions">
      <topicdata name="XmlWriterExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Extensions.XmlWriterExtensions" />
      <apidata name="XmlWriterExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Extensions.XmlWriterExtensions.WriteCData(System.Xml.XmlWriter,System.String,System.String,System.String,System.String)" />
        <element api="M:Zhaord.Extensions.XmlWriterExtensions.WriteNode(System.Xml.XmlWriter,System.String,System.Action)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.XmlWriterExtensions" />
      </containers>
      <file name="ba2eeb09-92c3-a607-17b8-d1115111297c" />
    </api>
    <api id="M:Zhaord.Extensions.XmlWriterExtensions.WriteCData(System.Xml.XmlWriter,System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteCData" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="prefix" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="ns" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.XmlWriterExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="0f0f7a13-c557-03d0-71f6-1ccdbe385325" />
    </api>
    <api id="M:Zhaord.Extensions.XmlWriterExtensions.WriteNode(System.Xml.XmlWriter,System.String,System.Action)">
      <topicdata group="api" />
      <apidata name="WriteNode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="content">
          <type api="T:System.Action" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Extensions" />
        <type api="T:Zhaord.Extensions.XmlWriterExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="6b53981d-f3c4-9ca8-4ab2-d251317ff8f6" />
    </api>
    <api id="N:Zhaord.Localization">
      <topicdata group="api" />
      <apidata name="Zhaord.Localization" group="namespace" />
      <elements>
        <element api="T:Zhaord.Localization.LocalizedString" />
        <element api="T:Zhaord.Localization.Localizer" />
        <element api="T:Zhaord.Localization.NullLocalizer" />
      </elements>
      <file name="b59f79f4-4391-a9d3-0361-6b8c4275ec36" />
    </api>
    <api id="T:Zhaord.Localization.LocalizedString">
      <topicdata group="api" />
      <apidata name="LocalizedString" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Web.IHtmlString" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.Localization.LocalizedString.#ctor">
          <element api="M:Zhaord.Localization.LocalizedString.#ctor(System.String)" />
          <element api="M:Zhaord.Localization.LocalizedString.#ctor(System.String,System.String,System.Object[])" />
        </element>
        <element api="P:Zhaord.Localization.LocalizedString.Args" />
        <element api="M:Zhaord.Localization.LocalizedString.Equals(System.Object)" />
        <element api="M:Zhaord.Localization.LocalizedString.GetHashCode" />
        <element api="Overload:Zhaord.Localization.LocalizedString.op_Implicit">
          <element api="M:Zhaord.Localization.LocalizedString.op_Implicit(System.String)~Zhaord.Localization.LocalizedString" />
          <element api="M:Zhaord.Localization.LocalizedString.op_Implicit(Zhaord.Localization.LocalizedString)~System.String" />
        </element>
        <element api="P:Zhaord.Localization.LocalizedString.Text" />
        <element api="P:Zhaord.Localization.LocalizedString.TextHint" />
        <element api="M:Zhaord.Localization.LocalizedString.TextOrDefault(System.String,Zhaord.Localization.LocalizedString)" />
        <element api="M:Zhaord.Localization.LocalizedString.ToHtmlString" />
        <element api="M:Zhaord.Localization.LocalizedString.ToString" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Localization" />
      </containers>
      <file name="d8b0d305-94c5-4f9d-a5cc-112204af9f05" />
    </api>
    <api id="Methods.T:Zhaord.Localization.LocalizedString">
      <topicdata name="LocalizedString" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Localization.LocalizedString" />
      <apidata name="LocalizedString" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Localization.LocalizedString.Equals(System.Object)" />
        <element api="M:Zhaord.Localization.LocalizedString.GetHashCode" />
        <element api="M:Zhaord.Localization.LocalizedString.TextOrDefault(System.String,Zhaord.Localization.LocalizedString)" />
        <element api="M:Zhaord.Localization.LocalizedString.ToHtmlString" />
        <element api="M:Zhaord.Localization.LocalizedString.ToString" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" />
      </containers>
      <file name="a1c1ea3f-837b-d782-8f6d-2bc4ed7a4ea2" />
    </api>
    <api id="Operators.T:Zhaord.Localization.LocalizedString">
      <topicdata name="LocalizedString" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:Zhaord.Localization.LocalizedString" />
      <apidata name="LocalizedString" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="Overload:Zhaord.Localization.LocalizedString.op_Implicit">
          <element api="M:Zhaord.Localization.LocalizedString.op_Implicit(System.String)~Zhaord.Localization.LocalizedString" />
          <element api="M:Zhaord.Localization.LocalizedString.op_Implicit(Zhaord.Localization.LocalizedString)~System.String" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" />
      </containers>
      <file name="21e69d97-62a8-7019-967b-4006dcff8b5d" />
    </api>
    <api id="Properties.T:Zhaord.Localization.LocalizedString">
      <topicdata name="LocalizedString" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Localization.LocalizedString" />
      <apidata name="LocalizedString" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:Zhaord.Localization.LocalizedString.Args" />
        <element api="P:Zhaord.Localization.LocalizedString.Text" />
        <element api="P:Zhaord.Localization.LocalizedString.TextHint" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" />
      </containers>
      <file name="ff4ac97f-092c-056a-6047-a8e5a62d64ed" />
    </api>
    <api id="Overload:Zhaord.Localization.LocalizedString.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Zhaord.Localization.LocalizedString.#ctor(System.String)" />
        <element api="M:Zhaord.Localization.LocalizedString.#ctor(System.String,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </containers>
      <file name="c00c51e7-4e0a-ec4a-c3c6-b6b37f16fe19" />
    </api>
    <api id="Overload:Zhaord.Localization.LocalizedString.op_Implicit">
      <topicdata name="Implicit" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Zhaord.Localization.LocalizedString.op_Implicit(System.String)~Zhaord.Localization.LocalizedString" />
        <element api="M:Zhaord.Localization.LocalizedString.op_Implicit(Zhaord.Localization.LocalizedString)~System.String" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </containers>
      <file name="3d8636a2-6798-6cd6-dbc5-18ac580f3d36" />
    </api>
    <api id="M:Zhaord.Localization.LocalizedString.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.Localization.LocalizedString.#ctor" />
      <parameters>
        <parameter name="localized">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </containers>
      <file name="f8c89004-8c90-5e48-c598-60b2d954715b" />
    </api>
    <api id="M:Zhaord.Localization.LocalizedString.#ctor(System.String,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.Localization.LocalizedString.#ctor" />
      <parameters>
        <parameter name="localized">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="textHint">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </containers>
      <file name="23fd605c-4d03-bbbc-23bc-e5eaa2c40749" />
    </api>
    <api id="P:Zhaord.Localization.LocalizedString.Args">
      <topicdata group="api" />
      <apidata name="Args" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Args" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </containers>
      <file name="435956af-f479-2ba5-d0d9-c1da25f72aba" />
    </api>
    <api id="M:Zhaord.Localization.LocalizedString.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </containers>
      <file name="ba112172-18b1-07bc-30bb-e086ab12e4b9" />
    </api>
    <api id="M:Zhaord.Localization.LocalizedString.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </containers>
      <file name="2e49ff74-074e-d82f-63d7-bf27b27f5989" />
    </api>
    <api id="M:Zhaord.Localization.LocalizedString.op_Implicit(System.String)~Zhaord.Localization.LocalizedString">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:Zhaord.Localization.LocalizedString.op_Implicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </containers>
      <file name="efa86c69-2742-2f05-c463-87d2b71d6b36" />
    </api>
    <api id="M:Zhaord.Localization.LocalizedString.op_Implicit(Zhaord.Localization.LocalizedString)~System.String">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:Zhaord.Localization.LocalizedString.op_Implicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </containers>
      <file name="fde93692-f795-dc2b-b1f0-09c3b8b25d59" />
    </api>
    <api id="P:Zhaord.Localization.LocalizedString.Text">
      <topicdata group="api" />
      <apidata name="Text" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Text" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </containers>
      <file name="5528618a-1252-dd88-e64e-92cdfc6b8d1e" />
    </api>
    <api id="P:Zhaord.Localization.LocalizedString.TextHint">
      <topicdata group="api" />
      <apidata name="TextHint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TextHint" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </containers>
      <file name="47d44e39-953f-d688-f5ae-b6267201d28a" />
    </api>
    <api id="M:Zhaord.Localization.LocalizedString.TextOrDefault(System.String,Zhaord.Localization.LocalizedString)">
      <topicdata group="api" />
      <apidata name="TextOrDefault" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultValue">
          <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </containers>
      <file name="3218281b-fc58-596e-c958-6c56557073fd" />
    </api>
    <api id="M:Zhaord.Localization.LocalizedString.ToHtmlString">
      <topicdata group="api" />
      <apidata name="ToHtmlString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Web.IHtmlString.ToHtmlString">
          <type api="T:System.Web.IHtmlString" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </containers>
      <file name="ab86c1fa-ead2-939a-a0c5-de758c990979" />
    </api>
    <api id="M:Zhaord.Localization.LocalizedString.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </containers>
      <file name="cc2679c3-03d6-55f5-7286-6796c3ea79a7" />
    </api>
    <api id="T:Zhaord.Localization.Localizer">
      <topicdata group="api" />
      <apidata name="Localizer" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Zhaord.Localization.LocalizedString" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Localization" />
      </containers>
      <file name="2652c0b5-84f2-d127-9ecd-02bf065b3152" />
    </api>
    <api id="T:Zhaord.Localization.NullLocalizer">
      <topicdata group="api" />
      <apidata name="NullLocalizer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:Zhaord.Localization.NullLocalizer.Instance" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Localization" />
      </containers>
      <file name="a8aae701-a567-1f08-34cb-80ec04a09f79" />
    </api>
    <api id="Properties.T:Zhaord.Localization.NullLocalizer">
      <topicdata name="NullLocalizer" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Localization.NullLocalizer" />
      <apidata name="NullLocalizer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.Localization.NullLocalizer.Instance" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.NullLocalizer" />
      </containers>
      <file name="38ee8b1b-646b-1649-4239-5737192f9b0a" />
    </api>
    <api id="P:Zhaord.Localization.NullLocalizer.Instance">
      <topicdata group="api" />
      <apidata name="Instance" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Instance" />
      <returns>
        <type api="T:Zhaord.Localization.Localizer" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Localization" />
        <type api="T:Zhaord.Localization.NullLocalizer" ref="true" />
      </containers>
      <file name="d776e5c7-99de-f077-fabb-1d9a9d0eb4ee" />
    </api>
    <api id="N:Zhaord.Singletons">
      <topicdata group="api" />
      <apidata name="Zhaord.Singletons" group="namespace" />
      <elements>
        <element api="T:Zhaord.Singletons.Singleton" />
        <element api="T:Zhaord.Singletons.Singleton`1" />
        <element api="T:Zhaord.Singletons.SingletonDictionary`2" />
        <element api="T:Zhaord.Singletons.SingletonList`1" />
      </elements>
      <file name="ba9a7231-4823-44ef-faba-6c14e95d837a" />
    </api>
    <api id="T:Zhaord.Singletons.Singleton">
      <topicdata group="api" />
      <apidata name="Singleton" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Zhaord.Singletons.Singleton`1" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Singletons.Singleton.#ctor" />
        <element api="P:Zhaord.Singletons.Singleton.AllSingletons" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Singletons" />
      </containers>
      <file name="5aaa7d3d-b67d-e115-a990-41f9a66d4abe" />
    </api>
    <api id="Methods.T:Zhaord.Singletons.Singleton">
      <topicdata name="Singleton" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Singletons.Singleton" />
      <apidata name="Singleton" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Singletons" />
        <type api="T:Zhaord.Singletons.Singleton" />
      </containers>
      <file name="22711986-c424-1283-d472-6294ee85546a" />
    </api>
    <api id="Properties.T:Zhaord.Singletons.Singleton">
      <topicdata name="Singleton" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Singletons.Singleton" />
      <apidata name="Singleton" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Zhaord.Singletons.Singleton.AllSingletons" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Singletons" />
        <type api="T:Zhaord.Singletons.Singleton" />
      </containers>
      <file name="fee6699a-909e-d93e-44e2-3a10eded164a" />
    </api>
    <api id="M:Zhaord.Singletons.Singleton.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Singletons" />
        <type api="T:Zhaord.Singletons.Singleton" ref="true" />
      </containers>
      <file name="158f451e-0139-5341-d052-5c69870a61fa" />
    </api>
    <api id="P:Zhaord.Singletons.Singleton.AllSingletons">
      <topicdata group="api" />
      <apidata name="AllSingletons" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AllSingletons" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Singletons" />
        <type api="T:Zhaord.Singletons.Singleton" ref="true" />
      </containers>
      <file name="8ed12345-8c0f-e077-bb53-d71072a3d82a" />
    </api>
    <api id="T:Zhaord.Singletons.Singleton`1">
      <topicdata group="api" />
      <apidata name="Singleton" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Zhaord.Singletons.Singleton" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Zhaord.Singletons.SingletonDictionary`2" ref="true" />
          <type api="T:Zhaord.Singletons.SingletonList`1" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Singletons.Singleton`1.#ctor" />
        <element api="P:Zhaord.Singletons.Singleton`1.Instance" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Singletons" />
      </containers>
      <file name="20b8897f-9b65-075a-0095-245371ced17d" />
    </api>
    <api id="Methods.T:Zhaord.Singletons.Singleton`1">
      <topicdata name="Singleton" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Singletons.Singleton`1" />
      <apidata name="Singleton" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Singletons" />
        <type api="T:Zhaord.Singletons.Singleton`1" />
      </containers>
      <file name="ae40c0ae-4970-0e3a-ce60-fbc862c43cb9" />
    </api>
    <api id="Properties.T:Zhaord.Singletons.Singleton`1">
      <topicdata name="Singleton" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Singletons.Singleton`1" />
      <apidata name="Singleton" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:Zhaord.Singletons.Singleton`1.Instance" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Singletons" />
        <type api="T:Zhaord.Singletons.Singleton`1" />
      </containers>
      <file name="c8f01e40-735b-2580-2e3c-9f7dba96dda1" />
    </api>
    <api id="M:Zhaord.Singletons.Singleton`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Singletons" />
        <type api="T:Zhaord.Singletons.Singleton`1" ref="true" />
      </containers>
      <file name="063b0bf4-5fa7-2195-c026-fb6a75b62b12" />
    </api>
    <api id="P:Zhaord.Singletons.Singleton`1.Instance">
      <topicdata group="api" />
      <apidata name="Instance" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Instance" />
      <setter name="set_Instance" />
      <returns>
        <template name="T" index="0" api="T:Zhaord.Singletons.Singleton`1" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Singletons" />
        <type api="T:Zhaord.Singletons.Singleton`1" ref="true" />
      </containers>
      <file name="5f91e99f-5c7e-6e52-f798-55d23992f45c" />
    </api>
    <api id="T:Zhaord.Singletons.SingletonDictionary`2">
      <topicdata group="api" />
      <apidata name="SingletonDictionary" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Zhaord.Singletons.Singleton`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <template name="TKey" index="0" api="T:Zhaord.Singletons.SingletonDictionary`2" />
                  <template name="TValue" index="1" api="T:Zhaord.Singletons.SingletonDictionary`2" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:Zhaord.Singletons.Singleton" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Singletons.SingletonDictionary`2.#ctor" />
        <element api="P:Zhaord.Singletons.SingletonDictionary`2.Instance" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Singletons" />
      </containers>
      <file name="0b7563b7-696c-d6d0-21df-38e3b6196030" />
    </api>
    <api id="Methods.T:Zhaord.Singletons.SingletonDictionary`2">
      <topicdata name="SingletonDictionary" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Singletons.SingletonDictionary`2" />
      <apidata name="SingletonDictionary" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Singletons" />
        <type api="T:Zhaord.Singletons.SingletonDictionary`2" />
      </containers>
      <file name="e3b83a7f-3023-3075-3347-3996b32e62b1" />
    </api>
    <api id="Properties.T:Zhaord.Singletons.SingletonDictionary`2">
      <topicdata name="SingletonDictionary" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Singletons.SingletonDictionary`2" />
      <apidata name="SingletonDictionary" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Zhaord.Singletons.SingletonDictionary`2.Instance" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Singletons" />
        <type api="T:Zhaord.Singletons.SingletonDictionary`2" />
      </containers>
      <file name="fb8f6aad-932c-98f5-5c0c-4dbd4230ca17" />
    </api>
    <api id="M:Zhaord.Singletons.SingletonDictionary`2.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Singletons" />
        <type api="T:Zhaord.Singletons.SingletonDictionary`2" ref="true" />
      </containers>
      <file name="27c31614-6fb6-69b2-a5dd-65e5c58dca48" />
    </api>
    <api id="P:Zhaord.Singletons.SingletonDictionary`2.Instance">
      <topicdata group="api" />
      <apidata name="Instance" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Instance" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <template name="TKey" index="0" api="T:Zhaord.Singletons.SingletonDictionary`2" />
            <template name="TValue" index="1" api="T:Zhaord.Singletons.SingletonDictionary`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Singletons" />
        <type api="T:Zhaord.Singletons.SingletonDictionary`2" ref="true" />
      </containers>
      <file name="e98b6f62-510b-2f6f-ca9a-03932d28292c" />
    </api>
    <api id="T:Zhaord.Singletons.SingletonList`1">
      <topicdata group="api" />
      <apidata name="SingletonList" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Zhaord.Singletons.Singleton`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Zhaord.Singletons.SingletonList`1" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:Zhaord.Singletons.Singleton" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Singletons.SingletonList`1.#ctor" />
        <element api="P:Zhaord.Singletons.SingletonList`1.Instance" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Singletons" />
      </containers>
      <file name="40c6e6d2-dce1-ecda-293c-18f9502b0f07" />
    </api>
    <api id="Methods.T:Zhaord.Singletons.SingletonList`1">
      <topicdata name="SingletonList" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Singletons.SingletonList`1" />
      <apidata name="SingletonList" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Singletons" />
        <type api="T:Zhaord.Singletons.SingletonList`1" />
      </containers>
      <file name="b8e35368-65fb-c548-92b2-450f1f2df33b" />
    </api>
    <api id="Properties.T:Zhaord.Singletons.SingletonList`1">
      <topicdata name="SingletonList" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Singletons.SingletonList`1" />
      <apidata name="SingletonList" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:Zhaord.Singletons.SingletonList`1.Instance" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Singletons" />
        <type api="T:Zhaord.Singletons.SingletonList`1" />
      </containers>
      <file name="3c25493f-a971-b4c7-d4ed-fcebcc0ce39b" />
    </api>
    <api id="M:Zhaord.Singletons.SingletonList`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Singletons" />
        <type api="T:Zhaord.Singletons.SingletonList`1" ref="true" />
      </containers>
      <file name="8d3bbccd-8ac7-1cfd-6060-e732051f78cf" />
    </api>
    <api id="P:Zhaord.Singletons.SingletonList`1.Instance">
      <topicdata group="api" />
      <apidata name="Instance" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Instance" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Zhaord.Singletons.SingletonList`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Singletons" />
        <type api="T:Zhaord.Singletons.SingletonList`1" ref="true" />
      </containers>
      <file name="e5d3e14a-f4a8-ce6c-f6bf-48a254304088" />
    </api>
    <api id="N:Zhaord.TypeFinders">
      <topicdata group="api" />
      <apidata name="Zhaord.TypeFinders" group="namespace" />
      <elements>
        <element api="T:Zhaord.TypeFinders.ITypeFinder" />
        <element api="T:Zhaord.TypeFinders.AppDomainTypeFinder" />
        <element api="T:Zhaord.TypeFinders.WebAppTypeFinder" />
        <element api="T:Zhaord.TypeFinders.TypeFinderExtensions" />
      </elements>
      <file name="89eaeab9-11ef-09b4-c9e5-7f09ac889a46" />
    </api>
    <api id="T:Zhaord.TypeFinders.AppDomainTypeFinder">
      <topicdata group="api" />
      <apidata name="AppDomainTypeFinder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Zhaord.TypeFinders.WebAppTypeFinder" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:Zhaord.TypeFinders.ITypeFinder" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType``1(Zhaord.TypeFinders.ITypeFinder,System.Boolean,System.Boolean)" source="extension" overload="true">
          <apidata name="FindClassesOfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="onlyConcreteClasses" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
            <parameter name="ignoreInactivePlugins" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.TypeFinders" />
            <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType``1(Zhaord.TypeFinders.ITypeFinder,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)" source="extension" overload="true">
          <apidata name="FindClassesOfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="assemblies">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Reflection.Assembly" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="onlyConcreteClasses" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.TypeFinders" />
            <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType(Zhaord.TypeFinders.ITypeFinder,System.Type,System.Boolean,System.Boolean)" source="extension" overload="true">
          <apidata name="FindClassesOfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="assignTypeFrom">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="onlyConcreteClasses" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
            <parameter name="ignoreInactivePlugins" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.TypeFinders" />
            <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.#ctor" />
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.AddCustomAssemblies(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Reflection.Assembly})" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.App" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.AssemblyRestrictToLoadingPattern" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.AssemblySkipLoadingPattern" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.CustomAssemblyNames" />
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.DoesTypeImplementOpenGeneric(System.Type,System.Type)" />
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.FindClassesOfType(System.Type,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)" />
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.GetAssemblies(System.Boolean)" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.LoadAppDomainAssemblies" />
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.LoadMatchingAssemblies(System.String)" />
        <element api="Overload:Zhaord.TypeFinders.AppDomainTypeFinder.Matches">
          <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.Matches(System.String)" />
          <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.Matches(System.String,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
      </containers>
      <file name="a8df7487-e940-00f4-82cf-69d5f1d866cf" />
    </api>
    <api id="Methods.T:Zhaord.TypeFinders.AppDomainTypeFinder">
      <topicdata name="AppDomainTypeFinder" group="list" subgroup="Methods" typeTopicId="T:Zhaord.TypeFinders.AppDomainTypeFinder" />
      <apidata name="AppDomainTypeFinder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType``1(Zhaord.TypeFinders.ITypeFinder,System.Boolean,System.Boolean)" source="extension" overload="true">
          <apidata name="FindClassesOfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="onlyConcreteClasses" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
            <parameter name="ignoreInactivePlugins" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.TypeFinders" />
            <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType``1(Zhaord.TypeFinders.ITypeFinder,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)" source="extension" overload="true">
          <apidata name="FindClassesOfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="assemblies">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Reflection.Assembly" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="onlyConcreteClasses" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.TypeFinders" />
            <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType(Zhaord.TypeFinders.ITypeFinder,System.Type,System.Boolean,System.Boolean)" source="extension" overload="true">
          <apidata name="FindClassesOfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="assignTypeFrom">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="onlyConcreteClasses" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
            <parameter name="ignoreInactivePlugins" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.TypeFinders" />
            <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.AddCustomAssemblies(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Reflection.Assembly})" />
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.DoesTypeImplementOpenGeneric(System.Type,System.Type)" />
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.FindClassesOfType(System.Type,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)" />
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.GetAssemblies(System.Boolean)" />
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.LoadMatchingAssemblies(System.String)" />
        <element api="Overload:Zhaord.TypeFinders.AppDomainTypeFinder.Matches">
          <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.Matches(System.String)" />
          <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.Matches(System.String,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" />
      </containers>
      <file name="e6dd77ce-aa88-5601-691a-b989e9d2d035" />
    </api>
    <api id="Properties.T:Zhaord.TypeFinders.AppDomainTypeFinder">
      <topicdata name="AppDomainTypeFinder" group="list" subgroup="Properties" typeTopicId="T:Zhaord.TypeFinders.AppDomainTypeFinder" />
      <apidata name="AppDomainTypeFinder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.App" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.AssemblyRestrictToLoadingPattern" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.AssemblySkipLoadingPattern" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.CustomAssemblyNames" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.LoadAppDomainAssemblies" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" />
      </containers>
      <file name="8d455310-6a4e-f9be-441d-cece81db603d" />
    </api>
    <api id="Overload:Zhaord.TypeFinders.AppDomainTypeFinder.Matches">
      <topicdata name="Matches" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Matches" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.Matches(System.String)" />
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.Matches(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
      </containers>
      <file name="c947491f-dccc-75c3-67cf-96074f1bf127" />
    </api>
    <api id="M:Zhaord.TypeFinders.AppDomainTypeFinder.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
      </containers>
      <file name="76aa390c-64b0-7a25-3136-d06c16a10119" />
    </api>
    <api id="M:Zhaord.TypeFinders.AppDomainTypeFinder.AddCustomAssemblies(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Reflection.Assembly})">
      <topicdata group="api" />
      <apidata name="AddCustomAssemblies" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="addedAssemblyNames">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="assemblies">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.Assembly" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
      </containers>
      <file name="456ce701-a3be-d775-9974-573fb24e3801" />
    </api>
    <api id="P:Zhaord.TypeFinders.AppDomainTypeFinder.App">
      <topicdata group="api" />
      <apidata name="App" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_App" />
      <returns>
        <type api="T:System.AppDomain" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
      </containers>
      <file name="705fe889-fa0d-d02f-2e7a-68e4d51f6f6a" />
    </api>
    <api id="P:Zhaord.TypeFinders.AppDomainTypeFinder.AssemblyRestrictToLoadingPattern">
      <topicdata group="api" />
      <apidata name="AssemblyRestrictToLoadingPattern" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AssemblyRestrictToLoadingPattern" />
      <setter name="set_AssemblyRestrictToLoadingPattern" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
      </containers>
      <file name="f8fa6cbf-214c-c099-e3b0-3d5fa9952224" />
    </api>
    <api id="P:Zhaord.TypeFinders.AppDomainTypeFinder.AssemblySkipLoadingPattern">
      <topicdata group="api" />
      <apidata name="AssemblySkipLoadingPattern" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AssemblySkipLoadingPattern" />
      <setter name="set_AssemblySkipLoadingPattern" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
      </containers>
      <file name="3a0e20c5-833f-2dba-4284-6a90f5851a21" />
    </api>
    <api id="P:Zhaord.TypeFinders.AppDomainTypeFinder.CustomAssemblyNames">
      <topicdata group="api" />
      <apidata name="CustomAssemblyNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CustomAssemblyNames" />
      <setter name="set_CustomAssemblyNames" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
      </containers>
      <file name="b558f997-6054-ac99-d48a-8974975448b6" />
    </api>
    <api id="M:Zhaord.TypeFinders.AppDomainTypeFinder.DoesTypeImplementOpenGeneric(System.Type,System.Type)">
      <topicdata group="api" />
      <apidata name="DoesTypeImplementOpenGeneric" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="openGeneric">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
      </containers>
      <file name="d906c89b-1d95-3bd7-ecaf-a14bd5924406" />
    </api>
    <api id="M:Zhaord.TypeFinders.AppDomainTypeFinder.FindClassesOfType(System.Type,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)">
      <topicdata group="api" />
      <apidata name="FindClassesOfType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="assignTypeFrom">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="assemblies">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.Assembly" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="onlyConcreteClasses" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Zhaord.TypeFinders.ITypeFinder.FindClassesOfType(System.Type,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)">
          <type api="T:Zhaord.TypeFinders.ITypeFinder" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
      </containers>
      <file name="bd22b168-78f9-0167-d97a-8c719b99f6a1" />
    </api>
    <api id="M:Zhaord.TypeFinders.AppDomainTypeFinder.GetAssemblies(System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetAssemblies" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="ignoreInactivePlugins" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Reflection.Assembly" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Zhaord.TypeFinders.ITypeFinder.GetAssemblies(System.Boolean)">
          <type api="T:Zhaord.TypeFinders.ITypeFinder" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
      </containers>
      <file name="bfff0421-9718-ca67-f550-c79a24f8557a" />
    </api>
    <api id="P:Zhaord.TypeFinders.AppDomainTypeFinder.LoadAppDomainAssemblies">
      <topicdata group="api" />
      <apidata name="LoadAppDomainAssemblies" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LoadAppDomainAssemblies" />
      <setter name="set_LoadAppDomainAssemblies" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
      </containers>
      <file name="76802011-ee8a-3e0e-46f0-621ba2f686bd" />
    </api>
    <api id="M:Zhaord.TypeFinders.AppDomainTypeFinder.LoadMatchingAssemblies(System.String)">
      <topicdata group="api" />
      <apidata name="LoadMatchingAssemblies" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="directoryPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
      </containers>
      <file name="e7c45b6c-3e87-165c-3ab2-955688dbda46" />
    </api>
    <api id="M:Zhaord.TypeFinders.AppDomainTypeFinder.Matches(System.String)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Zhaord.TypeFinders.AppDomainTypeFinder.Matches" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="assemblyFullName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
      </containers>
      <file name="6ebedfee-45da-c1d7-0205-d116e7394b03" />
    </api>
    <api id="M:Zhaord.TypeFinders.AppDomainTypeFinder.Matches(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Zhaord.TypeFinders.AppDomainTypeFinder.Matches" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="assemblyFullName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pattern">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
      </containers>
      <file name="db588e1f-0c4f-6cb4-b45d-bb9566707b18" />
    </api>
    <api id="T:Zhaord.TypeFinders.ITypeFinder">
      <topicdata group="api" />
      <apidata name="ITypeFinder" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
      </implementors>
      <elements>
        <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType``1(Zhaord.TypeFinders.ITypeFinder,System.Boolean,System.Boolean)" source="extension" overload="true">
          <apidata name="FindClassesOfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="onlyConcreteClasses" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
            <parameter name="ignoreInactivePlugins" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.TypeFinders" />
            <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType``1(Zhaord.TypeFinders.ITypeFinder,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)" source="extension" overload="true">
          <apidata name="FindClassesOfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="assemblies">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Reflection.Assembly" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="onlyConcreteClasses" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.TypeFinders" />
            <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType(Zhaord.TypeFinders.ITypeFinder,System.Type,System.Boolean,System.Boolean)" source="extension" overload="true">
          <apidata name="FindClassesOfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="assignTypeFrom">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="onlyConcreteClasses" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
            <parameter name="ignoreInactivePlugins" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.TypeFinders" />
            <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.TypeFinders.ITypeFinder.FindClassesOfType(System.Type,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)" />
        <element api="M:Zhaord.TypeFinders.ITypeFinder.GetAssemblies(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
      </containers>
      <file name="7b9898fb-1ed7-ddcd-1bed-18d16bb4e375" />
    </api>
    <api id="Methods.T:Zhaord.TypeFinders.ITypeFinder">
      <topicdata name="ITypeFinder" group="list" subgroup="Methods" typeTopicId="T:Zhaord.TypeFinders.ITypeFinder" />
      <apidata name="ITypeFinder" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType``1(Zhaord.TypeFinders.ITypeFinder,System.Boolean,System.Boolean)" source="extension" overload="true">
          <apidata name="FindClassesOfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="onlyConcreteClasses" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
            <parameter name="ignoreInactivePlugins" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.TypeFinders" />
            <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType``1(Zhaord.TypeFinders.ITypeFinder,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)" source="extension" overload="true">
          <apidata name="FindClassesOfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="assemblies">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Reflection.Assembly" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="onlyConcreteClasses" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.TypeFinders" />
            <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType(Zhaord.TypeFinders.ITypeFinder,System.Type,System.Boolean,System.Boolean)" source="extension" overload="true">
          <apidata name="FindClassesOfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="assignTypeFrom">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="onlyConcreteClasses" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </parameter>
            <parameter name="ignoreInactivePlugins" optional="true">
              <type api="T:System.Boolean" ref="false" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.TypeFinders" />
            <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.TypeFinders.ITypeFinder.FindClassesOfType(System.Type,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)" />
        <element api="M:Zhaord.TypeFinders.ITypeFinder.GetAssemblies(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.ITypeFinder" />
      </containers>
      <file name="b10ca813-235b-897f-b357-a34cf132de81" />
    </api>
    <api id="M:Zhaord.TypeFinders.ITypeFinder.FindClassesOfType(System.Type,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)">
      <topicdata group="api" />
      <apidata name="FindClassesOfType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="assignTypeFrom">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="assemblies">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.Assembly" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="onlyConcreteClasses" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.ITypeFinder" ref="true" />
      </containers>
      <file name="0884dac2-9af0-a605-a1f3-8f01da09ad3d" />
    </api>
    <api id="M:Zhaord.TypeFinders.ITypeFinder.GetAssemblies(System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetAssemblies" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="ignoreInactivePlugins" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Reflection.Assembly" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.ITypeFinder" ref="true" />
      </containers>
      <file name="7f58aab5-f0ab-ce93-a49b-94e186ef1a0b" />
    </api>
    <api id="T:Zhaord.TypeFinders.TypeFinderExtensions">
      <topicdata group="api" />
      <apidata name="TypeFinderExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType">
          <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType``1(Zhaord.TypeFinders.ITypeFinder,System.Boolean,System.Boolean)" />
          <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType``1(Zhaord.TypeFinders.ITypeFinder,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)" />
          <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType(Zhaord.TypeFinders.ITypeFinder,System.Type,System.Boolean,System.Boolean)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="329a6702-2b83-333a-9a4c-f68eaed55240" />
    </api>
    <api id="Methods.T:Zhaord.TypeFinders.TypeFinderExtensions">
      <topicdata name="TypeFinderExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.TypeFinders.TypeFinderExtensions" />
      <apidata name="TypeFinderExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType">
          <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType``1(Zhaord.TypeFinders.ITypeFinder,System.Boolean,System.Boolean)" />
          <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType``1(Zhaord.TypeFinders.ITypeFinder,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)" />
          <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType(Zhaord.TypeFinders.ITypeFinder,System.Type,System.Boolean,System.Boolean)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" />
      </containers>
      <file name="1324ae70-880a-ddad-9205-773963a98d94" />
    </api>
    <api id="Overload:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType">
      <topicdata name="FindClassesOfType" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="FindClassesOfType" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType``1(Zhaord.TypeFinders.ITypeFinder,System.Boolean,System.Boolean)" />
        <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType``1(Zhaord.TypeFinders.ITypeFinder,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)" />
        <element api="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType(Zhaord.TypeFinders.ITypeFinder,System.Type,System.Boolean,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" ref="true" />
      </containers>
      <file name="b6f95097-120e-8403-23f8-a747def0dad3" />
    </api>
    <api id="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType``1(Zhaord.TypeFinders.ITypeFinder,System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name="FindClassesOfType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="finder">
          <type api="T:Zhaord.TypeFinders.ITypeFinder" ref="true" />
        </parameter>
        <parameter name="onlyConcreteClasses" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
        <parameter name="ignoreInactivePlugins" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="e4e275fd-0bfe-f84e-3ae6-e8d185b2e861" />
    </api>
    <api id="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType``1(Zhaord.TypeFinders.ITypeFinder,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)">
      <topicdata group="api" />
      <apidata name="FindClassesOfType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="finder">
          <type api="T:Zhaord.TypeFinders.ITypeFinder" ref="true" />
        </parameter>
        <parameter name="assemblies">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.Assembly" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="onlyConcreteClasses" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="bc968811-1b1d-1748-cf90-4cd7b005226e" />
    </api>
    <api id="M:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType(Zhaord.TypeFinders.ITypeFinder,System.Type,System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name="FindClassesOfType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.TypeFinders.TypeFinderExtensions.FindClassesOfType" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="finder">
          <type api="T:Zhaord.TypeFinders.ITypeFinder" ref="true" />
        </parameter>
        <parameter name="assignTypeFrom">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="onlyConcreteClasses" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
        <parameter name="ignoreInactivePlugins" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.TypeFinderExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="d823064a-5dc4-c2fe-4818-bb7834aba364" />
    </api>
    <api id="T:Zhaord.TypeFinders.WebAppTypeFinder">
      <topicdata group="api" />
      <apidata name="WebAppTypeFinder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.AddCustomAssemblies(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Reflection.Assembly})" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.App" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.AssemblyRestrictToLoadingPattern" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.AssemblySkipLoadingPattern" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.CustomAssemblyNames" />
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.DoesTypeImplementOpenGeneric(System.Type,System.Type)" />
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.FindClassesOfType(System.Type,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.LoadAppDomainAssemblies" />
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.LoadMatchingAssemblies(System.String)" />
        <element api="Overload:Zhaord.TypeFinders.WebAppTypeFinder.Matches">
          <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.Matches(System.String)" />
          <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.Matches(System.String,System.String)" />
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.TypeFinders.WebAppTypeFinder.#ctor" />
        <element api="P:Zhaord.TypeFinders.WebAppTypeFinder.EnsureBinFolderAssembliesLoaded" />
        <element api="M:Zhaord.TypeFinders.WebAppTypeFinder.GetAssemblies(System.Boolean)" />
        <element api="M:Zhaord.TypeFinders.WebAppTypeFinder.GetBinDirectory" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
      </containers>
      <file name="1f741cdc-1087-bdad-36db-81d6005350e9" />
    </api>
    <api id="Methods.T:Zhaord.TypeFinders.WebAppTypeFinder">
      <topicdata name="WebAppTypeFinder" group="list" subgroup="Methods" typeTopicId="T:Zhaord.TypeFinders.WebAppTypeFinder" />
      <apidata name="WebAppTypeFinder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.AddCustomAssemblies(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Reflection.Assembly})" />
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.DoesTypeImplementOpenGeneric(System.Type,System.Type)" />
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.FindClassesOfType(System.Type,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Boolean)" />
        <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.LoadMatchingAssemblies(System.String)" />
        <element api="Overload:Zhaord.TypeFinders.WebAppTypeFinder.Matches">
          <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.Matches(System.String)" />
          <element api="M:Zhaord.TypeFinders.AppDomainTypeFinder.Matches(System.String,System.String)" />
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.TypeFinders.WebAppTypeFinder.GetAssemblies(System.Boolean)" />
        <element api="M:Zhaord.TypeFinders.WebAppTypeFinder.GetBinDirectory" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.WebAppTypeFinder" />
      </containers>
      <file name="c379ece8-f67b-6435-e1af-8eb49d7f9142" />
    </api>
    <api id="Properties.T:Zhaord.TypeFinders.WebAppTypeFinder">
      <topicdata name="WebAppTypeFinder" group="list" subgroup="Properties" typeTopicId="T:Zhaord.TypeFinders.WebAppTypeFinder" />
      <apidata name="WebAppTypeFinder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.App" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.AssemblyRestrictToLoadingPattern" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.AssemblySkipLoadingPattern" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.CustomAssemblyNames" />
        <element api="P:Zhaord.TypeFinders.AppDomainTypeFinder.LoadAppDomainAssemblies" />
        <element api="P:Zhaord.TypeFinders.WebAppTypeFinder.EnsureBinFolderAssembliesLoaded" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.WebAppTypeFinder" />
      </containers>
      <file name="ddad7ec0-94a6-9385-4d24-5fbb4a406165" />
    </api>
    <api id="M:Zhaord.TypeFinders.WebAppTypeFinder.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.WebAppTypeFinder" ref="true" />
      </containers>
      <file name="0cd728a6-d17f-e1da-89e3-43e08b92b5ec" />
    </api>
    <api id="P:Zhaord.TypeFinders.WebAppTypeFinder.EnsureBinFolderAssembliesLoaded">
      <topicdata group="api" />
      <apidata name="EnsureBinFolderAssembliesLoaded" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EnsureBinFolderAssembliesLoaded" />
      <setter name="set_EnsureBinFolderAssembliesLoaded" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.WebAppTypeFinder" ref="true" />
      </containers>
      <file name="028900c9-7e1c-f402-5490-9f0aeade3e72" />
    </api>
    <api id="M:Zhaord.TypeFinders.WebAppTypeFinder.GetAssemblies(System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetAssemblies" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Zhaord.TypeFinders.AppDomainTypeFinder.GetAssemblies(System.Boolean)">
          <type api="T:Zhaord.TypeFinders.AppDomainTypeFinder" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ignoreInactivePlugins" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Reflection.Assembly" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Zhaord.TypeFinders.ITypeFinder.GetAssemblies(System.Boolean)">
          <type api="T:Zhaord.TypeFinders.ITypeFinder" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.WebAppTypeFinder" ref="true" />
      </containers>
      <file name="80c816a9-6475-4668-e5a2-5f51c94276b2" />
    </api>
    <api id="M:Zhaord.TypeFinders.WebAppTypeFinder.GetBinDirectory">
      <topicdata group="api" />
      <apidata name="GetBinDirectory" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.TypeFinders" />
        <type api="T:Zhaord.TypeFinders.WebAppTypeFinder" ref="true" />
      </containers>
      <file name="e6064b0e-4eca-9604-da02-f1ad006513a2" />
    </api>
    <api id="N:Zhaord.Utilities">
      <topicdata group="api" />
      <apidata name="Zhaord.Utilities" group="namespace" />
      <elements>
        <element api="T:Zhaord.Utilities.CommonHelper" />
        <element api="T:Zhaord.Utilities.ActionDisposable" />
      </elements>
      <file name="b76f6116-3624-eaba-4cfd-dcdf44b71cfe" />
    </api>
    <api id="T:Zhaord.Utilities.ActionDisposable">
      <topicdata group="api" />
      <apidata name="ActionDisposable" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.ValueType.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.ValueType.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.ValueType.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Utilities.ActionDisposable.#ctor(System.Action)" />
        <element api="M:Zhaord.Utilities.ActionDisposable.Dispose" />
        <element api="F:Zhaord.Utilities.ActionDisposable.Empty" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities" />
      </containers>
      <file name="caa05424-1f26-39c8-9245-2d0425721908" />
    </api>
    <api id="Methods.T:Zhaord.Utilities.ActionDisposable">
      <topicdata name="ActionDisposable" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Utilities.ActionDisposable" />
      <apidata name="ActionDisposable" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.ValueType.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.ValueType.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.ValueType.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Utilities.ActionDisposable.Dispose" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.ActionDisposable" />
      </containers>
      <file name="40bff388-2c6d-e050-17b0-5c785c7e1440" />
    </api>
    <api id="Fields.T:Zhaord.Utilities.ActionDisposable">
      <topicdata name="ActionDisposable" group="list" subgroup="Fields" typeTopicId="T:Zhaord.Utilities.ActionDisposable" />
      <apidata name="ActionDisposable" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Zhaord.Utilities.ActionDisposable.Empty" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.ActionDisposable" />
      </containers>
      <file name="4ed2e8cc-12a3-ca70-2d41-10255b9fa303" />
    </api>
    <api id="M:Zhaord.Utilities.ActionDisposable.#ctor(System.Action)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.ActionDisposable" ref="false" />
      </containers>
      <file name="a9d815ee-6bc5-af54-9e40-199c112e213f" />
    </api>
    <api id="M:Zhaord.Utilities.ActionDisposable.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.ActionDisposable" ref="false" />
      </containers>
      <file name="4dc138ab-226c-c6fb-b56d-9cce0b0f0150" />
    </api>
    <api id="F:Zhaord.Utilities.ActionDisposable.Empty">
      <topicdata group="api" />
      <apidata name="Empty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Zhaord.Utilities.ActionDisposable" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.ActionDisposable" ref="false" />
      </containers>
      <file name="03efbf64-3978-e563-2545-9255d3e26c44" />
    </api>
    <api id="T:Zhaord.Utilities.CommonHelper">
      <topicdata group="api" />
      <apidata name="CommonHelper" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.Utilities.CommonHelper.GenerateRandomDigitCode(System.Int32)" />
        <element api="M:Zhaord.Utilities.CommonHelper.GenerateRandomInteger(System.Int32,System.Int32)" />
        <element api="M:Zhaord.Utilities.CommonHelper.GetAppSetting``1(System.String,``0)" />
        <element api="M:Zhaord.Utilities.CommonHelper.GetTypeConverter(System.Type)" />
        <element api="P:Zhaord.Utilities.CommonHelper.IsDevEnvironment" />
        <element api="M:Zhaord.Utilities.CommonHelper.MapPath(System.String,System.Boolean)" />
        <element api="Overload:Zhaord.Utilities.CommonHelper.TryConvert">
          <element api="M:Zhaord.Utilities.CommonHelper.TryConvert``1(System.Object,``0@)" />
          <element api="M:Zhaord.Utilities.CommonHelper.TryConvert``1(System.Object,System.Globalization.CultureInfo,``0@)" />
          <element api="M:Zhaord.Utilities.CommonHelper.TryConvert(System.Object,System.Type,System.Object@)" />
          <element api="M:Zhaord.Utilities.CommonHelper.TryConvert(System.Object,System.Type,System.Globalization.CultureInfo,System.Object@)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities" />
      </containers>
      <file name="aca30b8d-63fb-cb27-4413-04f1c468d17c" />
    </api>
    <api id="Methods.T:Zhaord.Utilities.CommonHelper">
      <topicdata name="CommonHelper" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Utilities.CommonHelper" />
      <apidata name="CommonHelper" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Utilities.CommonHelper.GenerateRandomDigitCode(System.Int32)" />
        <element api="M:Zhaord.Utilities.CommonHelper.GenerateRandomInteger(System.Int32,System.Int32)" />
        <element api="M:Zhaord.Utilities.CommonHelper.GetAppSetting``1(System.String,``0)" />
        <element api="M:Zhaord.Utilities.CommonHelper.GetTypeConverter(System.Type)" />
        <element api="M:Zhaord.Utilities.CommonHelper.MapPath(System.String,System.Boolean)" />
        <element api="Overload:Zhaord.Utilities.CommonHelper.TryConvert">
          <element api="M:Zhaord.Utilities.CommonHelper.TryConvert``1(System.Object,``0@)" />
          <element api="M:Zhaord.Utilities.CommonHelper.TryConvert``1(System.Object,System.Globalization.CultureInfo,``0@)" />
          <element api="M:Zhaord.Utilities.CommonHelper.TryConvert(System.Object,System.Type,System.Object@)" />
          <element api="M:Zhaord.Utilities.CommonHelper.TryConvert(System.Object,System.Type,System.Globalization.CultureInfo,System.Object@)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.CommonHelper" />
      </containers>
      <file name="38bf3b39-f042-6748-1c08-cff1caee5552" />
    </api>
    <api id="Properties.T:Zhaord.Utilities.CommonHelper">
      <topicdata name="CommonHelper" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Utilities.CommonHelper" />
      <apidata name="CommonHelper" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:Zhaord.Utilities.CommonHelper.IsDevEnvironment" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.CommonHelper" />
      </containers>
      <file name="e0249cc3-6490-e6aa-7285-a80fbf3a88c5" />
    </api>
    <api id="Overload:Zhaord.Utilities.CommonHelper.TryConvert">
      <topicdata name="TryConvert" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="TryConvert" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Utilities.CommonHelper.TryConvert``1(System.Object,``0@)" />
        <element api="M:Zhaord.Utilities.CommonHelper.TryConvert``1(System.Object,System.Globalization.CultureInfo,``0@)" />
        <element api="M:Zhaord.Utilities.CommonHelper.TryConvert(System.Object,System.Type,System.Object@)" />
        <element api="M:Zhaord.Utilities.CommonHelper.TryConvert(System.Object,System.Type,System.Globalization.CultureInfo,System.Object@)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.CommonHelper" ref="true" />
      </containers>
      <file name="69b6867e-03c3-6fb3-be57-5b74c60fc77f" />
    </api>
    <api id="M:Zhaord.Utilities.CommonHelper.GenerateRandomDigitCode(System.Int32)">
      <topicdata group="api" />
      <apidata name="GenerateRandomDigitCode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.CommonHelper" ref="true" />
      </containers>
      <file name="eda976c3-d293-798c-8e11-bf5f2e68b389" />
    </api>
    <api id="M:Zhaord.Utilities.CommonHelper.GenerateRandomInteger(System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="GenerateRandomInteger" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="min" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
        <parameter name="max" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>2147483647</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.CommonHelper" ref="true" />
      </containers>
      <file name="e6919cbc-c80b-4279-2a3b-ca35348cfc27" />
    </api>
    <api id="M:Zhaord.Utilities.CommonHelper.GetAppSetting``1(System.String,``0)">
      <topicdata group="api" />
      <apidata name="GetAppSetting" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defValue" optional="true">
          <template name="T" index="0" api="M:Zhaord.Utilities.CommonHelper.GetAppSetting``1(System.String,``0)" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Utilities.CommonHelper.GetAppSetting``1(System.String,``0)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.CommonHelper" ref="true" />
      </containers>
      <file name="9e2b2815-8d6f-bcc5-aec1-dac30bab4947" />
    </api>
    <api id="M:Zhaord.Utilities.CommonHelper.GetTypeConverter(System.Type)">
      <topicdata group="api" />
      <apidata name="GetTypeConverter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.CommonHelper" ref="true" />
      </containers>
      <file name="c5e9611e-3061-2626-3613-8f2c0c9c27f5" />
    </api>
    <api id="P:Zhaord.Utilities.CommonHelper.IsDevEnvironment">
      <topicdata group="api" />
      <apidata name="IsDevEnvironment" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsDevEnvironment" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.CommonHelper" ref="true" />
      </containers>
      <file name="5271c51c-f769-035e-bb59-63b8c85fae3c" />
    </api>
    <api id="M:Zhaord.Utilities.CommonHelper.MapPath(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="MapPath" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="findAppRoot" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.CommonHelper" ref="true" />
      </containers>
      <file name="4bf1364c-93c4-b7c8-766c-d55ef03dc03d" />
    </api>
    <api id="M:Zhaord.Utilities.CommonHelper.TryConvert``1(System.Object,System.Globalization.CultureInfo,``0@)">
      <topicdata group="api" />
      <apidata name="TryConvert" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.CommonHelper.TryConvert" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="convertedValue" out="true">
          <referenceTo>
            <template name="T" index="0" api="M:Zhaord.Utilities.CommonHelper.TryConvert``1(System.Object,System.Globalization.CultureInfo,``0@)" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.CommonHelper" ref="true" />
      </containers>
      <file name="98f7a7eb-031b-d477-9c47-19f5aa62662f" />
    </api>
    <api id="M:Zhaord.Utilities.CommonHelper.TryConvert(System.Object,System.Type,System.Globalization.CultureInfo,System.Object@)">
      <topicdata group="api" />
      <apidata name="TryConvert" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.CommonHelper.TryConvert" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="to">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="convertedValue" out="true">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.CommonHelper" ref="true" />
      </containers>
      <file name="a85a640d-29ff-0e3a-78eb-78ef0d714ac7" />
    </api>
    <api id="M:Zhaord.Utilities.CommonHelper.TryConvert(System.Object,System.Type,System.Object@)">
      <topicdata group="api" />
      <apidata name="TryConvert" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.CommonHelper.TryConvert" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="to">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="convertedValue" out="true">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.CommonHelper" ref="true" />
      </containers>
      <file name="d0928272-5a32-d8a2-99fd-6591323e1195" />
    </api>
    <api id="M:Zhaord.Utilities.CommonHelper.TryConvert``1(System.Object,``0@)">
      <topicdata group="api" />
      <apidata name="TryConvert" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.CommonHelper.TryConvert" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="convertedValue" out="true">
          <referenceTo>
            <template name="T" index="0" api="M:Zhaord.Utilities.CommonHelper.TryConvert``1(System.Object,``0@)" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities" />
        <type api="T:Zhaord.Utilities.CommonHelper" ref="true" />
      </containers>
      <file name="18e72ed3-970b-e4f1-769c-c85ec7eeb3aa" />
    </api>
    <api id="N:Zhaord.Utilities.Converts">
      <topicdata group="api" />
      <apidata name="Zhaord.Utilities.Converts" group="namespace" />
      <elements>
        <element api="T:Zhaord.Utilities.Converts.ConvertProblem" />
        <element api="T:Zhaord.Utilities.Converts.DateTimeConvert" />
        <element api="T:Zhaord.Utilities.Converts.DictionaryConverter" />
        <element api="T:Zhaord.Utilities.Converts.DictionaryConvertException" />
      </elements>
      <file name="a9955084-c156-778e-b01a-622fe53ffc21" />
    </api>
    <api id="T:Zhaord.Utilities.Converts.ConvertProblem">
      <topicdata group="api" />
      <apidata name="ConvertProblem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Utilities.Converts.ConvertProblem.#ctor" />
        <element api="P:Zhaord.Utilities.Converts.ConvertProblem.AttemptedValue" />
        <element api="P:Zhaord.Utilities.Converts.ConvertProblem.Exception" />
        <element api="P:Zhaord.Utilities.Converts.ConvertProblem.Item" />
        <element api="P:Zhaord.Utilities.Converts.ConvertProblem.Property" />
        <element api="M:Zhaord.Utilities.Converts.ConvertProblem.ToString" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
      </containers>
      <file name="74f0d32c-7656-db29-45e6-f7afceb72044" />
    </api>
    <api id="Methods.T:Zhaord.Utilities.Converts.ConvertProblem">
      <topicdata name="ConvertProblem" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Utilities.Converts.ConvertProblem" />
      <apidata name="ConvertProblem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Utilities.Converts.ConvertProblem.ToString" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.ConvertProblem" />
      </containers>
      <file name="b14e7348-8f42-cc8d-cde5-d13bf5afad3b" />
    </api>
    <api id="Properties.T:Zhaord.Utilities.Converts.ConvertProblem">
      <topicdata name="ConvertProblem" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Utilities.Converts.ConvertProblem" />
      <apidata name="ConvertProblem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:Zhaord.Utilities.Converts.ConvertProblem.AttemptedValue" />
        <element api="P:Zhaord.Utilities.Converts.ConvertProblem.Exception" />
        <element api="P:Zhaord.Utilities.Converts.ConvertProblem.Item" />
        <element api="P:Zhaord.Utilities.Converts.ConvertProblem.Property" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.ConvertProblem" />
      </containers>
      <file name="251237fc-016c-bd26-164f-2f2c9f58ff98" />
    </api>
    <api id="M:Zhaord.Utilities.Converts.ConvertProblem.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.ConvertProblem" ref="true" />
      </containers>
      <file name="31e128fc-0db0-0699-38b8-3da7ecedddd9" />
    </api>
    <api id="P:Zhaord.Utilities.Converts.ConvertProblem.AttemptedValue">
      <topicdata group="api" />
      <apidata name="AttemptedValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AttemptedValue" />
      <setter name="set_AttemptedValue" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.ConvertProblem" ref="true" />
      </containers>
      <file name="6b572000-5822-b0c5-3c8a-098020732edf" />
    </api>
    <api id="P:Zhaord.Utilities.Converts.ConvertProblem.Exception">
      <topicdata group="api" />
      <apidata name="Exception" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Exception" />
      <setter name="set_Exception" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.ConvertProblem" ref="true" />
      </containers>
      <file name="c671a085-29c5-142b-f069-c37231f28626" />
    </api>
    <api id="P:Zhaord.Utilities.Converts.ConvertProblem.Item">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.ConvertProblem" ref="true" />
      </containers>
      <file name="3e12b9eb-0312-0642-bd90-0317fafa69cf" />
    </api>
    <api id="P:Zhaord.Utilities.Converts.ConvertProblem.Property">
      <topicdata group="api" />
      <apidata name="Property" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Property" />
      <setter name="set_Property" />
      <returns>
        <type api="T:System.Reflection.PropertyInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.ConvertProblem" ref="true" />
      </containers>
      <file name="f596bc20-e155-c719-58a6-6fe4226b546e" />
    </api>
    <api id="M:Zhaord.Utilities.Converts.ConvertProblem.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.ConvertProblem" ref="true" />
      </containers>
      <file name="6032fcb7-eb13-abcc-edc6-ba7a53459d23" />
    </api>
    <api id="T:Zhaord.Utilities.Converts.DateTimeConvert">
      <topicdata group="api" />
      <apidata name="DateTimeConvert" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:Zhaord.Utilities.Converts.DateTimeConvert.DateTimeFormat" />
        <element api="M:Zhaord.Utilities.Converts.DateTimeConvert.Parse(System.String)" />
        <element api="M:Zhaord.Utilities.Converts.DateTimeConvert.ParseNullable(System.String)" />
        <element api="Overload:Zhaord.Utilities.Converts.DateTimeConvert.ToString">
          <element api="M:Zhaord.Utilities.Converts.DateTimeConvert.ToString(System.DateTime)" />
          <element api="M:Zhaord.Utilities.Converts.DateTimeConvert.ToString(System.Nullable{System.DateTime})" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
      </containers>
      <file name="5946881b-c61e-9067-4e49-128c0b909dde" />
    </api>
    <api id="Methods.T:Zhaord.Utilities.Converts.DateTimeConvert">
      <topicdata name="DateTimeConvert" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Utilities.Converts.DateTimeConvert" />
      <apidata name="DateTimeConvert" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Utilities.Converts.DateTimeConvert.Parse(System.String)" />
        <element api="M:Zhaord.Utilities.Converts.DateTimeConvert.ParseNullable(System.String)" />
        <element api="Overload:Zhaord.Utilities.Converts.DateTimeConvert.ToString">
          <element api="M:Zhaord.Utilities.Converts.DateTimeConvert.ToString(System.DateTime)" />
          <element api="M:Zhaord.Utilities.Converts.DateTimeConvert.ToString(System.Nullable{System.DateTime})" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DateTimeConvert" />
      </containers>
      <file name="797041ac-d7d4-bf62-7078-e743f668bfdf" />
    </api>
    <api id="Fields.T:Zhaord.Utilities.Converts.DateTimeConvert">
      <topicdata name="DateTimeConvert" group="list" subgroup="Fields" typeTopicId="T:Zhaord.Utilities.Converts.DateTimeConvert" />
      <apidata name="DateTimeConvert" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:Zhaord.Utilities.Converts.DateTimeConvert.DateTimeFormat" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DateTimeConvert" />
      </containers>
      <file name="6902285b-a663-dfdb-1aa9-a1bd6ac84dce" />
    </api>
    <api id="Overload:Zhaord.Utilities.Converts.DateTimeConvert.ToString">
      <topicdata name="ToString" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ToString" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Utilities.Converts.DateTimeConvert.ToString(System.DateTime)" />
        <element api="M:Zhaord.Utilities.Converts.DateTimeConvert.ToString(System.Nullable{System.DateTime})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DateTimeConvert" ref="true" />
      </containers>
      <file name="0d3d2dd9-e00b-af11-8933-f1506fa5d092" />
    </api>
    <api id="F:Zhaord.Utilities.Converts.DateTimeConvert.DateTimeFormat">
      <topicdata group="api" />
      <apidata name="DateTimeFormat" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DateTimeConvert" ref="true" />
      </containers>
      <file name="27283960-9e21-de45-a8a4-16d443bac79b" />
    </api>
    <api id="M:Zhaord.Utilities.Converts.DateTimeConvert.Parse(System.String)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="date">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DateTimeConvert" ref="true" />
      </containers>
      <file name="e5e85595-8519-2348-8e1f-e86b6338fbcb" />
    </api>
    <api id="M:Zhaord.Utilities.Converts.DateTimeConvert.ParseNullable(System.String)">
      <topicdata group="api" />
      <apidata name="ParseNullable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DateTimeConvert" ref="true" />
      </containers>
      <file name="134fe8b4-4afc-9343-e106-16a6e43acca1" />
    </api>
    <api id="M:Zhaord.Utilities.Converts.DateTimeConvert.ToString(System.DateTime)">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.Converts.DateTimeConvert.ToString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DateTimeConvert" ref="true" />
      </containers>
      <file name="c62ea923-5e7f-915f-f32c-7f53d67f1788" />
    </api>
    <api id="M:Zhaord.Utilities.Converts.DateTimeConvert.ToString(System.Nullable{System.DateTime})">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.Converts.DateTimeConvert.ToString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DateTimeConvert" ref="true" />
      </containers>
      <file name="6ec8ce63-8d5b-dd7e-39e6-34948ea86133" />
    </api>
    <api id="T:Zhaord.Utilities.Converts.DictionaryConverter">
      <topicdata group="api" />
      <apidata name="DictionaryConverter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.CanCreateType(System.Type)" />
        <element api="Overload:Zhaord.Utilities.Converts.DictionaryConverter.CreateAndPopulate">
          <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.CreateAndPopulate``1(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem}@)" />
          <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.CreateAndPopulate(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem}@)" />
        </element>
        <element api="Overload:Zhaord.Utilities.Converts.DictionaryConverter.Populate">
          <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.Populate(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object,System.Object[])" />
          <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.Populate(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object,System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem}@,System.Object[])" />
        </element>
        <element api="Overload:Zhaord.Utilities.Converts.DictionaryConverter.SafeCreateAndPopulate">
          <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.SafeCreateAndPopulate``1(System.Collections.Generic.IDictionary{System.String,System.Object})" />
          <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.SafeCreateAndPopulate(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
      </containers>
      <file name="8cc0f25b-4a3d-1b0a-886f-d3d39296d35d" />
    </api>
    <api id="Methods.T:Zhaord.Utilities.Converts.DictionaryConverter">
      <topicdata name="DictionaryConverter" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Utilities.Converts.DictionaryConverter" />
      <apidata name="DictionaryConverter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.CanCreateType(System.Type)" />
        <element api="Overload:Zhaord.Utilities.Converts.DictionaryConverter.CreateAndPopulate">
          <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.CreateAndPopulate``1(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem}@)" />
          <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.CreateAndPopulate(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem}@)" />
        </element>
        <element api="Overload:Zhaord.Utilities.Converts.DictionaryConverter.Populate">
          <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.Populate(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object,System.Object[])" />
          <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.Populate(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object,System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem}@,System.Object[])" />
        </element>
        <element api="Overload:Zhaord.Utilities.Converts.DictionaryConverter.SafeCreateAndPopulate">
          <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.SafeCreateAndPopulate``1(System.Collections.Generic.IDictionary{System.String,System.Object})" />
          <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.SafeCreateAndPopulate(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConverter" />
      </containers>
      <file name="16f5e382-9657-d5d1-ef0d-8276cf4d2770" />
    </api>
    <api id="Overload:Zhaord.Utilities.Converts.DictionaryConverter.CreateAndPopulate">
      <topicdata name="CreateAndPopulate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="CreateAndPopulate" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.CreateAndPopulate``1(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem}@)" />
        <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.CreateAndPopulate(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem}@)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConverter" ref="true" />
      </containers>
      <file name="29a9a456-2f49-9251-7667-06eb74dd267d" />
    </api>
    <api id="Overload:Zhaord.Utilities.Converts.DictionaryConverter.Populate">
      <topicdata name="Populate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Populate" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.Populate(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object,System.Object[])" />
        <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.Populate(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object,System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem}@,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConverter" ref="true" />
      </containers>
      <file name="1ec7e337-0549-52c5-8e7a-2c700c1de43a" />
    </api>
    <api id="Overload:Zhaord.Utilities.Converts.DictionaryConverter.SafeCreateAndPopulate">
      <topicdata name="SafeCreateAndPopulate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="SafeCreateAndPopulate" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.SafeCreateAndPopulate``1(System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <element api="M:Zhaord.Utilities.Converts.DictionaryConverter.SafeCreateAndPopulate(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConverter" ref="true" />
      </containers>
      <file name="43725641-34a4-b8df-712e-25203cf619e3" />
    </api>
    <api id="M:Zhaord.Utilities.Converts.DictionaryConverter.CanCreateType(System.Type)">
      <topicdata group="api" />
      <apidata name="CanCreateType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="itemType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConverter" ref="true" />
      </containers>
      <file name="1be43f1b-24c7-60d5-e6a3-95a471c8a475" />
    </api>
    <api id="M:Zhaord.Utilities.Converts.DictionaryConverter.CreateAndPopulate``1(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem}@)">
      <topicdata group="api" />
      <apidata name="CreateAndPopulate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.Converts.DictionaryConverter.CreateAndPopulate" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="problems" out="true">
          <referenceTo>
            <type api="T:System.Collections.Generic.ICollection`1" ref="true">
              <specialization>
                <type api="T:Zhaord.Utilities.Converts.ConvertProblem" ref="true" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Utilities.Converts.DictionaryConverter.CreateAndPopulate``1(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem}@)" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConverter" ref="true" />
      </containers>
      <file name="c2511d8b-ccde-bc7c-ddf5-bb6015b58513" />
    </api>
    <api id="M:Zhaord.Utilities.Converts.DictionaryConverter.CreateAndPopulate(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem}@)">
      <topicdata group="api" />
      <apidata name="CreateAndPopulate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.Converts.DictionaryConverter.CreateAndPopulate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="problems" out="true">
          <referenceTo>
            <type api="T:System.Collections.Generic.ICollection`1" ref="true">
              <specialization>
                <type api="T:Zhaord.Utilities.Converts.ConvertProblem" ref="true" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConverter" ref="true" />
      </containers>
      <file name="3b20e39d-0e35-0004-0524-cc97e8e3f4c8" />
    </api>
    <api id="M:Zhaord.Utilities.Converts.DictionaryConverter.Populate(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object,System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem}@,System.Object[])">
      <topicdata group="api" />
      <apidata name="Populate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.Converts.DictionaryConverter.Populate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="problems" out="true">
          <referenceTo>
            <type api="T:System.Collections.Generic.ICollection`1" ref="true">
              <specialization>
                <type api="T:Zhaord.Utilities.Converts.ConvertProblem" ref="true" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="populated" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConverter" ref="true" />
      </containers>
      <file name="387bbf44-eb77-c7ce-ee47-d33cf754655a" />
    </api>
    <api id="M:Zhaord.Utilities.Converts.DictionaryConverter.Populate(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object,System.Object[])">
      <topicdata group="api" />
      <apidata name="Populate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.Converts.DictionaryConverter.Populate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="populated" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConverter" ref="true" />
      </containers>
      <file name="90ab0df0-9aa4-3cad-6a5e-52d97af0dc7a" />
    </api>
    <api id="M:Zhaord.Utilities.Converts.DictionaryConverter.SafeCreateAndPopulate``1(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <topicdata group="api" />
      <apidata name="SafeCreateAndPopulate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.Converts.DictionaryConverter.SafeCreateAndPopulate" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Zhaord.Utilities.Converts.DictionaryConverter.SafeCreateAndPopulate``1(System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConverter" ref="true" />
      </containers>
      <file name="c590a79a-1cd9-2f35-9fc6-a7744972b2cc" />
    </api>
    <api id="M:Zhaord.Utilities.Converts.DictionaryConverter.SafeCreateAndPopulate(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <topicdata group="api" />
      <apidata name="SafeCreateAndPopulate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.Converts.DictionaryConverter.SafeCreateAndPopulate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConverter" ref="true" />
      </containers>
      <file name="da5b1e7a-9ab2-0224-ec84-df96f0be73d8" />
    </api>
    <api id="T:Zhaord.Utilities.Converts.DictionaryConvertException">
      <topicdata group="api" />
      <apidata name="DictionaryConvertException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.MiscExtensions.Dump(System.Exception)" source="extension">
          <apidata name="Dump" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.MiscExtensions.ToAllMessages(System.Exception)" source="extension">
          <apidata name="ToAllMessages" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:Zhaord.Utilities.Converts.DictionaryConvertException.#ctor">
          <element api="M:Zhaord.Utilities.Converts.DictionaryConvertException.#ctor(System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem})" />
          <element api="M:Zhaord.Utilities.Converts.DictionaryConvertException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:Zhaord.Utilities.Converts.DictionaryConvertException.#ctor(System.String,System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem})" />
        </element>
        <element api="P:Zhaord.Utilities.Converts.DictionaryConvertException.Problems" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
      </containers>
      <file name="e3a7b81d-987e-7510-a105-f62fb96a43bb" />
    </api>
    <api id="Methods.T:Zhaord.Utilities.Converts.DictionaryConvertException">
      <topicdata name="DictionaryConvertException" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Utilities.Converts.DictionaryConvertException" />
      <apidata name="DictionaryConvertException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.MiscExtensions.Dump(System.Exception)" source="extension">
          <apidata name="Dump" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.MiscExtensions.ToAllMessages(System.Exception)" source="extension">
          <apidata name="ToAllMessages" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.MiscExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConvertException" />
      </containers>
      <file name="4ba96a86-13d2-7caa-3179-650b2d6f02d4" />
    </api>
    <api id="Properties.T:Zhaord.Utilities.Converts.DictionaryConvertException">
      <topicdata name="DictionaryConvertException" group="list" subgroup="Properties" typeTopicId="T:Zhaord.Utilities.Converts.DictionaryConvertException" />
      <apidata name="DictionaryConvertException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:Zhaord.Utilities.Converts.DictionaryConvertException.Problems" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConvertException" />
      </containers>
      <file name="c66de5b7-91d6-cc37-c0d9-fe6ceccb6804" />
    </api>
    <api id="Events.T:Zhaord.Utilities.Converts.DictionaryConvertException">
      <topicdata name="DictionaryConvertException" group="list" subgroup="Events" typeTopicId="T:Zhaord.Utilities.Converts.DictionaryConvertException" />
      <apidata name="DictionaryConvertException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConvertException" />
      </containers>
      <file name="d24ee0d8-0f4e-b1b2-5e4b-8c22b4a59ab1" />
    </api>
    <api id="Overload:Zhaord.Utilities.Converts.DictionaryConvertException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Zhaord.Utilities.Converts.DictionaryConvertException.#ctor(System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem})" />
        <element api="M:Zhaord.Utilities.Converts.DictionaryConvertException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Zhaord.Utilities.Converts.DictionaryConvertException.#ctor(System.String,System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem})" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConvertException" ref="true" />
      </containers>
      <file name="7c0a9ab5-1e0e-f3fb-9283-01e5d22c9932" />
    </api>
    <api id="M:Zhaord.Utilities.Converts.DictionaryConvertException.#ctor(System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.Utilities.Converts.DictionaryConvertException.#ctor" />
      <parameters>
        <parameter name="problems">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:Zhaord.Utilities.Converts.ConvertProblem" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConvertException" ref="true" />
      </containers>
      <file name="50ab157f-4aff-bed2-fdd1-665464bafdf5" />
    </api>
    <api id="M:Zhaord.Utilities.Converts.DictionaryConvertException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.Utilities.Converts.DictionaryConvertException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConvertException" ref="true" />
      </containers>
      <file name="39528aec-707e-34e6-509c-e2f6560d8ce6" />
    </api>
    <api id="M:Zhaord.Utilities.Converts.DictionaryConvertException.#ctor(System.String,System.Collections.Generic.ICollection{Zhaord.Utilities.Converts.ConvertProblem})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Zhaord.Utilities.Converts.DictionaryConvertException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="problems">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:Zhaord.Utilities.Converts.ConvertProblem" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConvertException" ref="true" />
      </containers>
      <file name="f563c76b-0813-b334-88bc-6b9797bcbac3" />
    </api>
    <api id="P:Zhaord.Utilities.Converts.DictionaryConvertException.Problems">
      <topicdata group="api" />
      <apidata name="Problems" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Problems" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Zhaord.Utilities.Converts.ConvertProblem" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Converts" />
        <type api="T:Zhaord.Utilities.Converts.DictionaryConvertException" ref="true" />
      </containers>
      <file name="a687cdf4-6391-5e2b-7fa9-5212498df172" />
    </api>
    <api id="N:Zhaord.Utilities.Threading">
      <topicdata group="api" />
      <apidata name="Zhaord.Utilities.Threading" group="namespace" />
      <elements>
        <element api="T:Zhaord.Utilities.Threading.LockExtensions" />
        <element api="T:Zhaord.Utilities.Threading.ReadLockDisposable" />
        <element api="T:Zhaord.Utilities.Threading.UpgradeableReadLockDisposable" />
        <element api="T:Zhaord.Utilities.Threading.WriteLockDisposable" />
      </elements>
      <file name="a926436a-e2ca-460f-e94a-4a35b6d9d803" />
    </api>
    <api id="T:Zhaord.Utilities.Threading.LockExtensions">
      <topicdata group="api" />
      <apidata name="LockExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Zhaord.Utilities.Threading.LockExtensions.GetReadLock">
          <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetReadLock(System.Threading.ReaderWriterLockSlim)" />
          <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetReadLock(System.Threading.ReaderWriterLockSlim,System.Int32)" />
        </element>
        <element api="Overload:Zhaord.Utilities.Threading.LockExtensions.GetUpgradeableReadLock">
          <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetUpgradeableReadLock(System.Threading.ReaderWriterLockSlim)" />
          <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetUpgradeableReadLock(System.Threading.ReaderWriterLockSlim,System.Int32)" />
        </element>
        <element api="Overload:Zhaord.Utilities.Threading.LockExtensions.GetWriteLock">
          <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetWriteLock(System.Threading.ReaderWriterLockSlim)" />
          <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetWriteLock(System.Threading.ReaderWriterLockSlim,System.Int32)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="4b6fecd7-0144-42c7-9573-46775e4a62fc" />
    </api>
    <api id="Methods.T:Zhaord.Utilities.Threading.LockExtensions">
      <topicdata name="LockExtensions" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Utilities.Threading.LockExtensions" />
      <apidata name="LockExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:Zhaord.Utilities.Threading.LockExtensions.GetReadLock">
          <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetReadLock(System.Threading.ReaderWriterLockSlim)" />
          <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetReadLock(System.Threading.ReaderWriterLockSlim,System.Int32)" />
        </element>
        <element api="Overload:Zhaord.Utilities.Threading.LockExtensions.GetUpgradeableReadLock">
          <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetUpgradeableReadLock(System.Threading.ReaderWriterLockSlim)" />
          <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetUpgradeableReadLock(System.Threading.ReaderWriterLockSlim,System.Int32)" />
        </element>
        <element api="Overload:Zhaord.Utilities.Threading.LockExtensions.GetWriteLock">
          <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetWriteLock(System.Threading.ReaderWriterLockSlim)" />
          <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetWriteLock(System.Threading.ReaderWriterLockSlim,System.Int32)" />
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
        <type api="T:Zhaord.Utilities.Threading.LockExtensions" />
      </containers>
      <file name="ca289949-94b5-f809-71db-81c8b3f4c96d" />
    </api>
    <api id="Overload:Zhaord.Utilities.Threading.LockExtensions.GetReadLock">
      <topicdata name="GetReadLock" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="GetReadLock" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetReadLock(System.Threading.ReaderWriterLockSlim)" />
        <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetReadLock(System.Threading.ReaderWriterLockSlim,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
        <type api="T:Zhaord.Utilities.Threading.LockExtensions" ref="true" />
      </containers>
      <file name="a6cc690d-dccb-0611-d1af-8d66152223a0" />
    </api>
    <api id="Overload:Zhaord.Utilities.Threading.LockExtensions.GetUpgradeableReadLock">
      <topicdata name="GetUpgradeableReadLock" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="GetUpgradeableReadLock" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetUpgradeableReadLock(System.Threading.ReaderWriterLockSlim)" />
        <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetUpgradeableReadLock(System.Threading.ReaderWriterLockSlim,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
        <type api="T:Zhaord.Utilities.Threading.LockExtensions" ref="true" />
      </containers>
      <file name="f8fc0d37-a870-4ace-f9f4-a5e87954d3b0" />
    </api>
    <api id="Overload:Zhaord.Utilities.Threading.LockExtensions.GetWriteLock">
      <topicdata name="GetWriteLock" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="GetWriteLock" group="member" subgroup="method" />
      <elements>
        <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetWriteLock(System.Threading.ReaderWriterLockSlim)" />
        <element api="M:Zhaord.Utilities.Threading.LockExtensions.GetWriteLock(System.Threading.ReaderWriterLockSlim,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
        <type api="T:Zhaord.Utilities.Threading.LockExtensions" ref="true" />
      </containers>
      <file name="d20ff27c-58fa-647a-f69a-9640ce02c78e" />
    </api>
    <api id="M:Zhaord.Utilities.Threading.LockExtensions.GetReadLock(System.Threading.ReaderWriterLockSlim)">
      <topicdata group="api" />
      <apidata name="GetReadLock" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.Threading.LockExtensions.GetReadLock" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="readerWriterLock">
          <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IDisposable" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
        <type api="T:Zhaord.Utilities.Threading.LockExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="74bbe78c-8fe2-41af-4cf2-3c421dcfc887" />
    </api>
    <api id="M:Zhaord.Utilities.Threading.LockExtensions.GetReadLock(System.Threading.ReaderWriterLockSlim,System.Int32)">
      <topicdata group="api" />
      <apidata name="GetReadLock" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.Threading.LockExtensions.GetReadLock" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="readerWriterLock">
          <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
        </parameter>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IDisposable" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
        <type api="T:Zhaord.Utilities.Threading.LockExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="075d634f-df39-d16f-9e7c-f35c27a02820" />
    </api>
    <api id="M:Zhaord.Utilities.Threading.LockExtensions.GetUpgradeableReadLock(System.Threading.ReaderWriterLockSlim)">
      <topicdata group="api" />
      <apidata name="GetUpgradeableReadLock" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.Threading.LockExtensions.GetUpgradeableReadLock" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="readerWriterLock">
          <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IDisposable" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
        <type api="T:Zhaord.Utilities.Threading.LockExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="a8405581-6cd0-ac9a-f35a-f0dad4b307d4" />
    </api>
    <api id="M:Zhaord.Utilities.Threading.LockExtensions.GetUpgradeableReadLock(System.Threading.ReaderWriterLockSlim,System.Int32)">
      <topicdata group="api" />
      <apidata name="GetUpgradeableReadLock" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.Threading.LockExtensions.GetUpgradeableReadLock" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="readerWriterLock">
          <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
        </parameter>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IDisposable" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
        <type api="T:Zhaord.Utilities.Threading.LockExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="4ee82af1-e6c9-f2ca-006b-5ee590bb82f1" />
    </api>
    <api id="M:Zhaord.Utilities.Threading.LockExtensions.GetWriteLock(System.Threading.ReaderWriterLockSlim)">
      <topicdata group="api" />
      <apidata name="GetWriteLock" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.Threading.LockExtensions.GetWriteLock" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="readerWriterLock">
          <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IDisposable" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
        <type api="T:Zhaord.Utilities.Threading.LockExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="df05c760-5385-482a-7604-483e69bc5353" />
    </api>
    <api id="M:Zhaord.Utilities.Threading.LockExtensions.GetWriteLock(System.Threading.ReaderWriterLockSlim,System.Int32)">
      <topicdata group="api" />
      <apidata name="GetWriteLock" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Zhaord.Utilities.Threading.LockExtensions.GetWriteLock" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="readerWriterLock">
          <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
        </parameter>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IDisposable" ref="true" />
      </returns>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
        <type api="T:Zhaord.Utilities.Threading.LockExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="18f64e1c-6c0b-50e4-2945-df5f94a52a17" />
    </api>
    <api id="T:Zhaord.Utilities.Threading.ReadLockDisposable">
      <topicdata group="api" />
      <apidata name="ReadLockDisposable" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Utilities.Threading.ReadLockDisposable.#ctor(System.Threading.ReaderWriterLockSlim)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
      </containers>
      <file name="be42a1c6-76d0-fb5d-eb6b-f4fc0384ba29" />
    </api>
    <api id="Methods.T:Zhaord.Utilities.Threading.ReadLockDisposable">
      <topicdata name="ReadLockDisposable" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Utilities.Threading.ReadLockDisposable" />
      <apidata name="ReadLockDisposable" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
        <type api="T:Zhaord.Utilities.Threading.ReadLockDisposable" />
      </containers>
      <file name="42ae4e8c-af12-439b-4520-764d9544863a" />
    </api>
    <api id="M:Zhaord.Utilities.Threading.ReadLockDisposable.#ctor(System.Threading.ReaderWriterLockSlim)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="readerWriterLock">
          <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
        <type api="T:Zhaord.Utilities.Threading.ReadLockDisposable" ref="true" />
      </containers>
      <file name="c02c6a4d-4b27-b21b-2efa-a9d760c0a3a8" />
    </api>
    <api id="T:Zhaord.Utilities.Threading.UpgradeableReadLockDisposable">
      <topicdata group="api" />
      <apidata name="UpgradeableReadLockDisposable" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Utilities.Threading.UpgradeableReadLockDisposable.#ctor(System.Threading.ReaderWriterLockSlim)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
      </containers>
      <file name="cd161ae5-bae6-5674-4bc0-38c235078b89" />
    </api>
    <api id="Methods.T:Zhaord.Utilities.Threading.UpgradeableReadLockDisposable">
      <topicdata name="UpgradeableReadLockDisposable" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Utilities.Threading.UpgradeableReadLockDisposable" />
      <apidata name="UpgradeableReadLockDisposable" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
        <type api="T:Zhaord.Utilities.Threading.UpgradeableReadLockDisposable" />
      </containers>
      <file name="8d73a208-2375-db0a-5ad9-c57c8c073c5c" />
    </api>
    <api id="M:Zhaord.Utilities.Threading.UpgradeableReadLockDisposable.#ctor(System.Threading.ReaderWriterLockSlim)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="readerWriterLock">
          <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
        <type api="T:Zhaord.Utilities.Threading.UpgradeableReadLockDisposable" ref="true" />
      </containers>
      <file name="d3928295-f215-4c99-0d8f-bbceb733df0f" />
    </api>
    <api id="T:Zhaord.Utilities.Threading.WriteLockDisposable">
      <topicdata group="api" />
      <apidata name="WriteLockDisposable" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Utilities.Threading.WriteLockDisposable.#ctor(System.Threading.ReaderWriterLockSlim)" />
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
      </containers>
      <file name="59d98853-3391-223d-9ce7-4737e3518334" />
    </api>
    <api id="Methods.T:Zhaord.Utilities.Threading.WriteLockDisposable">
      <topicdata name="WriteLockDisposable" group="list" subgroup="Methods" typeTopicId="T:Zhaord.Utilities.Threading.WriteLockDisposable" />
      <apidata name="WriteLockDisposable" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Zhaord.Extensions.ConversionExtensions.Convert``1(System.Object,System.Globalization.CultureInfo)" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Zhaord.Extensions.ConversionExtensions.Convert(System.Object,System.Type,System.Globalization.CultureInfo)" source="extension" overload="true">
          <apidata name="Convert" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="to">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="culture">
              <type api="T:System.Globalization.CultureInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Zhaord.Extensions" />
            <type api="T:Zhaord.Extensions.ConversionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
        <type api="T:Zhaord.Utilities.Threading.WriteLockDisposable" />
      </containers>
      <file name="80e3e0c0-a83a-0f6d-ca32-e00078e6325c" />
    </api>
    <api id="M:Zhaord.Utilities.Threading.WriteLockDisposable.#ctor(System.Threading.ReaderWriterLockSlim)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="readerWriterLock">
          <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Zhaord.Infrastructure" module="Zhaord.Infrastructure" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5653.33943 (1.0.*)" />
          <noAptca />
        </library>
        <namespace api="N:Zhaord.Utilities.Threading" />
        <type api="T:Zhaord.Utilities.Threading.WriteLockDisposable" ref="true" />
      </containers>
      <file name="0d3ac6f8-0ba1-7f5b-54fc-e36a78555146" />
    </api>
  </apis>
</reflection>